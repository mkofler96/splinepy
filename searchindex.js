Search.setIndex({"alltitles": {"1. Create a spline": [[718, "create-a-spline"]], "2. Modifications": [[718, "modifications"]], "3. Evaluate": [[718, "evaluate"]], "4. Helper Modules": [[718, "helper-modules"]], "4.1 Create": [[718, "create"]], "4.2 Extract": [[718, "extract"]], "4.3 Free-form deformation": [[718, "free-form-deformation"]], "4.4 Fitting": [[718, "fitting"]], "4.5 Mapper": [[718, "mapper"]], "5. Microstructure": [[718, "microstructure"]], "6. Multipatch": [[718, "multipatch"]], "7. Input/output and vector graphics": [[718, "input-output-and-vector-graphics"]], "A general introduction to splines": [[720, "a-general-introduction-to-splines"]], "API References": [[717, null]], "An introduction to different spline types": [[720, "an-introduction-to-different-spline-types"]], "Automatic formatting / style check": [[0, "automatic-formatting-style-check"]], "B-splines": [[720, "b-splines"]], "B\u00e9zier splines": [[720, "bezier-splines"]], "C++ API": [[717, "c-api"]], "C++ style / implementation preferences": [[0, "c-style-implementation-preferences"]], "Contributing": [[0, null], [0, "id1"], [718, "contributing"]], "Creating a basic NURBS": [[720, "creating-a-basic-nurbs"]], "Documentation": [[718, "documentation"]], "Drawbacks of B\u00e9zier curves": [[720, "drawbacks-of-bezier-curves"]], "Examples": [[720, "examples"], [720, "id1"]], "Further reading": [[720, "further-reading"]], "In which situations are splines helpful?": [[720, "in-which-situations-are-splines-helpful"]], "Install guide": [[718, null]], "Introduction to Splines": [[720, null]], "Library": [[718, null]], "List of show_options": [[720, "list-of-show-options"]], "Local documentation build": [[0, "local-documentation-build"]], "MultipatchShowOption": [[720, "multipatchshowoption"]], "Non-uniform rational B-splines (NURBS)": [[720, "non-uniform-rational-b-splines-nurbs"]], "Notebook plotting": [[720, "notebook-plotting"]], "Overview": [[717, "overview"]], "Plotting data on spline": [[720, "plotting-data-on-spline"]], "Properties of B-spline basis functions:": [[720, "properties-of-b-spline-basis-functions"]], "Properties of B\u00e9zier curves": [[720, "properties-of-bezier-curves"]], "Properties of NURBS basis functions:": [[720, "properties-of-nurbs-basis-functions"]], "Properties of Rational B\u00e9zier splines": [[720, "properties-of-rational-bezier-splines"]], "Python API": [[717, "python-api"]], "Python style / implementation preferences": [[0, "python-style-implementation-preferences"]], "Quick start": [[0, "quick-start"], [718, "quick-start"]], "Rational B\u00e9zier splines": [[720, "rational-bezier-splines"]], "Setting show_options": [[720, "setting-show-options"]], "Spline visualization": [[720, "spline-visualization"]], "SplineShowOption": [[720, "splineshowoption"]], "Splines?": [[718, null]], "Table of Contents": [[718, "table-of-contents"]], "Try online": [[718, "try-online"]], "Visualization": [[720, "visualization"]], "splinepy": [[1, null]], "splinepy.bezier": [[2, null]], "splinepy.bezier.Bezier": [[3, null]], "splinepy.bezier.Bezier.basis": [[4, null]], "splinepy.bezier.Bezier.basis_and_support": [[5, null]], "splinepy.bezier.Bezier.basis_derivative": [[6, null]], "splinepy.bezier.Bezier.basis_derivative_and_support": [[7, null]], "splinepy.bezier.Bezier.bezier": [[8, null]], "splinepy.bezier.Bezier.bspline": [[9, null]], "splinepy.bezier.Bezier.clear": [[10, null]], "splinepy.bezier.Bezier.compose": [[11, null]], "splinepy.bezier.Bezier.composition_derivative": [[12, null]], "splinepy.bezier.Bezier.copy": [[13, null]], "splinepy.bezier.Bezier.current_core_properties": [[14, null]], "splinepy.bezier.Bezier.derivative": [[15, null]], "splinepy.bezier.Bezier.derivative_spline": [[16, null]], "splinepy.bezier.Bezier.elevate_degrees": [[17, null]], "splinepy.bezier.Bezier.evaluate": [[18, null]], "splinepy.bezier.Bezier.export": [[19, null]], "splinepy.bezier.Bezier.extract_dim": [[20, null]], "splinepy.bezier.Bezier.greville_abscissae": [[21, null]], "splinepy.bezier.Bezier.jacobian": [[22, null]], "splinepy.bezier.Bezier.mapper": [[23, null]], "splinepy.bezier.Bezier.nurbs": [[24, null]], "splinepy.bezier.Bezier.proximities": [[25, null]], "splinepy.bezier.Bezier.rationalbezier": [[26, null]], "splinepy.bezier.Bezier.reduce_degrees": [[27, null]], "splinepy.bezier.Bezier.sample": [[28, null]], "splinepy.bezier.Bezier.show": [[29, null]], "splinepy.bezier.Bezier.showable": [[30, null]], "splinepy.bezier.Bezier.split": [[31, null]], "splinepy.bezier.Bezier.support": [[32, null]], "splinepy.bezier.Bezier.todict": [[33, null]], "splinepy.bezier.BezierBase": [[34, null]], "splinepy.bezier.BezierBase.basis": [[35, null]], "splinepy.bezier.BezierBase.basis_and_support": [[36, null]], "splinepy.bezier.BezierBase.basis_derivative": [[37, null]], "splinepy.bezier.BezierBase.basis_derivative_and_support": [[38, null]], "splinepy.bezier.BezierBase.clear": [[39, null]], "splinepy.bezier.BezierBase.compose": [[40, null]], "splinepy.bezier.BezierBase.composition_derivative": [[41, null]], "splinepy.bezier.BezierBase.copy": [[42, null]], "splinepy.bezier.BezierBase.current_core_properties": [[43, null]], "splinepy.bezier.BezierBase.derivative": [[44, null]], "splinepy.bezier.BezierBase.derivative_spline": [[45, null]], "splinepy.bezier.BezierBase.elevate_degrees": [[46, null]], "splinepy.bezier.BezierBase.evaluate": [[47, null]], "splinepy.bezier.BezierBase.export": [[48, null]], "splinepy.bezier.BezierBase.extract_dim": [[49, null]], "splinepy.bezier.BezierBase.greville_abscissae": [[50, null]], "splinepy.bezier.BezierBase.jacobian": [[51, null]], "splinepy.bezier.BezierBase.mapper": [[52, null]], "splinepy.bezier.BezierBase.proximities": [[53, null]], "splinepy.bezier.BezierBase.reduce_degrees": [[54, null]], "splinepy.bezier.BezierBase.sample": [[55, null]], "splinepy.bezier.BezierBase.show": [[56, null]], "splinepy.bezier.BezierBase.showable": [[57, null]], "splinepy.bezier.BezierBase.split": [[58, null]], "splinepy.bezier.BezierBase.support": [[59, null]], "splinepy.bezier.BezierBase.todict": [[60, null]], "splinepy.bspline": [[61, null]], "splinepy.bspline.BSpline": [[62, null]], "splinepy.bspline.BSpline.basis": [[63, null]], "splinepy.bspline.BSpline.basis_and_support": [[64, null]], "splinepy.bspline.BSpline.basis_derivative": [[65, null]], "splinepy.bspline.BSpline.basis_derivative_and_support": [[66, null]], "splinepy.bspline.BSpline.bspline": [[67, null]], "splinepy.bspline.BSpline.clear": [[68, null]], "splinepy.bspline.BSpline.copy": [[69, null]], "splinepy.bspline.BSpline.current_core_properties": [[70, null]], "splinepy.bspline.BSpline.derivative": [[71, null]], "splinepy.bspline.BSpline.elevate_degrees": [[72, null]], "splinepy.bspline.BSpline.evaluate": [[73, null]], "splinepy.bspline.BSpline.export": [[74, null]], "splinepy.bspline.BSpline.extract_bezier_patches": [[75, null]], "splinepy.bspline.BSpline.greville_abscissae": [[76, null]], "splinepy.bspline.BSpline.insert_knots": [[77, null]], "splinepy.bspline.BSpline.jacobian": [[78, null]], "splinepy.bspline.BSpline.knot_insertion_matrix": [[79, null]], "splinepy.bspline.BSpline.mapper": [[80, null]], "splinepy.bspline.BSpline.normalize_knot_vectors": [[81, null]], "splinepy.bspline.BSpline.nurbs": [[82, null]], "splinepy.bspline.BSpline.proximities": [[83, null]], "splinepy.bspline.BSpline.reduce_degrees": [[84, null]], "splinepy.bspline.BSpline.remove_knots": [[85, null]], "splinepy.bspline.BSpline.sample": [[86, null]], "splinepy.bspline.BSpline.show": [[87, null]], "splinepy.bspline.BSpline.showable": [[88, null]], "splinepy.bspline.BSpline.support": [[89, null]], "splinepy.bspline.BSpline.todict": [[90, null]], "splinepy.bspline.BSpline.uniform_refine": [[91, null]], "splinepy.bspline.BSplineBase": [[92, null]], "splinepy.bspline.BSplineBase.basis": [[93, null]], "splinepy.bspline.BSplineBase.basis_and_support": [[94, null]], "splinepy.bspline.BSplineBase.basis_derivative": [[95, null]], "splinepy.bspline.BSplineBase.basis_derivative_and_support": [[96, null]], "splinepy.bspline.BSplineBase.clear": [[97, null]], "splinepy.bspline.BSplineBase.copy": [[98, null]], "splinepy.bspline.BSplineBase.current_core_properties": [[99, null]], "splinepy.bspline.BSplineBase.derivative": [[100, null]], "splinepy.bspline.BSplineBase.elevate_degrees": [[101, null]], "splinepy.bspline.BSplineBase.evaluate": [[102, null]], "splinepy.bspline.BSplineBase.export": [[103, null]], "splinepy.bspline.BSplineBase.extract_bezier_patches": [[104, null]], "splinepy.bspline.BSplineBase.greville_abscissae": [[105, null]], "splinepy.bspline.BSplineBase.insert_knots": [[106, null]], "splinepy.bspline.BSplineBase.jacobian": [[107, null]], "splinepy.bspline.BSplineBase.knot_insertion_matrix": [[108, null]], "splinepy.bspline.BSplineBase.mapper": [[109, null]], "splinepy.bspline.BSplineBase.normalize_knot_vectors": [[110, null]], "splinepy.bspline.BSplineBase.proximities": [[111, null]], "splinepy.bspline.BSplineBase.reduce_degrees": [[112, null]], "splinepy.bspline.BSplineBase.remove_knots": [[113, null]], "splinepy.bspline.BSplineBase.sample": [[114, null]], "splinepy.bspline.BSplineBase.show": [[115, null]], "splinepy.bspline.BSplineBase.showable": [[116, null]], "splinepy.bspline.BSplineBase.support": [[117, null]], "splinepy.bspline.BSplineBase.todict": [[118, null]], "splinepy.bspline.BSplineBase.uniform_refine": [[119, null]], "splinepy.cli": [[120, null]], "splinepy.cli.convert": [[121, null]], "splinepy.cli.entry": [[122, null]], "splinepy.cli.show": [[123, null]], "splinepy.helpme": [[124, null]], "splinepy.helpme.check": [[125, null]], "splinepy.helpme.check.Checker": [[126, null]], "splinepy.helpme.check.Checker.clamped_knot_vectors": [[127, null]], "splinepy.helpme.check.Checker.valid_queries": [[128, null]], "splinepy.helpme.check.clamped_knot_vectors": [[129, null]], "splinepy.helpme.check.valid_queries": [[130, null]], "splinepy.helpme.create": [[131, null]], "splinepy.helpme.create.Creator": [[132, null]], "splinepy.helpme.create.Creator.determinant_spline": [[133, null]], "splinepy.helpme.create.Creator.embedded": [[134, null]], "splinepy.helpme.create.Creator.extruded": [[135, null]], "splinepy.helpme.create.Creator.parametric_view": [[136, null]], "splinepy.helpme.create.Creator.revolved": [[137, null]], "splinepy.helpme.create.arc": [[138, null]], "splinepy.helpme.create.box": [[139, null]], "splinepy.helpme.create.circle": [[140, null]], "splinepy.helpme.create.cone": [[141, null]], "splinepy.helpme.create.determinant_spline": [[142, null]], "splinepy.helpme.create.disk": [[143, null]], "splinepy.helpme.create.embedded": [[144, null]], "splinepy.helpme.create.extruded": [[145, null]], "splinepy.helpme.create.from_bounds": [[146, null]], "splinepy.helpme.create.line": [[147, null]], "splinepy.helpme.create.parametric_view": [[148, null]], "splinepy.helpme.create.plate": [[149, null]], "splinepy.helpme.create.pyramid": [[150, null]], "splinepy.helpme.create.revolved": [[151, null]], "splinepy.helpme.create.sphere": [[152, null]], "splinepy.helpme.create.surface_circle": [[153, null]], "splinepy.helpme.create.torus": [[154, null]], "splinepy.helpme.extract": [[155, null]], "splinepy.helpme.extract.Extractor": [[156, null]], "splinepy.helpme.extract.Extractor.arrow_data": [[157, null]], "splinepy.helpme.extract.Extractor.bases": [[158, null]], "splinepy.helpme.extract.Extractor.beziers": [[159, null]], "splinepy.helpme.extract.Extractor.boundaries": [[160, null]], "splinepy.helpme.extract.Extractor.control_edges": [[161, null]], "splinepy.helpme.extract.Extractor.control_faces": [[162, null]], "splinepy.helpme.extract.Extractor.control_mesh": [[163, null]], "splinepy.helpme.extract.Extractor.control_points": [[164, null]], "splinepy.helpme.extract.Extractor.control_volumes": [[165, null]], "splinepy.helpme.extract.Extractor.edges": [[166, null]], "splinepy.helpme.extract.Extractor.faces": [[167, null]], "splinepy.helpme.extract.Extractor.spline": [[168, null]], "splinepy.helpme.extract.Extractor.volumes": [[169, null]], "splinepy.helpme.extract.arrow_data": [[170, null]], "splinepy.helpme.extract.bases": [[171, null]], "splinepy.helpme.extract.boundaries": [[172, null]], "splinepy.helpme.extract.control_edges": [[173, null]], "splinepy.helpme.extract.control_faces": [[174, null]], "splinepy.helpme.extract.control_mesh": [[175, null]], "splinepy.helpme.extract.control_points": [[176, null]], "splinepy.helpme.extract.control_volumes": [[177, null]], "splinepy.helpme.extract.edges": [[178, null]], "splinepy.helpme.extract.faces": [[179, null]], "splinepy.helpme.extract.spline": [[180, null]], "splinepy.helpme.extract.volumes": [[181, null]], "splinepy.helpme.ffd": [[182, null]], "splinepy.helpme.ffd.FFD": [[183, null]], "splinepy.helpme.ffd.FFD.mesh": [[184, null]], "splinepy.helpme.ffd.FFD.padding": [[185, null]], "splinepy.helpme.ffd.FFD.show": [[186, null]], "splinepy.helpme.ffd.FFD.showable": [[187, null]], "splinepy.helpme.ffd.FFD.spline": [[188, null]], "splinepy.helpme.fit": [[189, null]], "splinepy.helpme.fit.compute_knot_vector": [[190, null]], "splinepy.helpme.fit.curve": [[191, null]], "splinepy.helpme.fit.parameterize": [[192, null]], "splinepy.helpme.fit.solve_for_control_points": [[193, null]], "splinepy.helpme.fit.surface": [[194, null]], "splinepy.helpme.integrate": [[195, null]], "splinepy.helpme.integrate.Integrator": [[196, null]], "splinepy.helpme.integrate.Integrator.parametric_function": [[197, null]], "splinepy.helpme.integrate.Integrator.volume": [[198, null]], "splinepy.helpme.integrate.parametric_function": [[199, null]], "splinepy.helpme.integrate.physical_function": [[200, null]], "splinepy.helpme.integrate.volume": [[201, null]], "splinepy.helpme.mapper": [[202, null]], "splinepy.helpme.mapper.Mapper": [[203, null]], "splinepy.helpme.mapper.Mapper.basis_function_derivatives": [[204, null]], "splinepy.helpme.mapper.Mapper.basis_gradient_and_support": [[205, null]], "splinepy.helpme.mapper.Mapper.basis_hessian_and_support": [[206, null]], "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support": [[207, null]], "splinepy.helpme.mapper.Mapper.divergence": [[208, null]], "splinepy.helpme.mapper.Mapper.field_derivatives": [[209, null]], "splinepy.helpme.mapper.Mapper.gradient": [[210, null]], "splinepy.helpme.mapper.Mapper.hessian": [[211, null]], "splinepy.helpme.mapper.Mapper.laplacian": [[212, null]], "splinepy.helpme.multi_index": [[213, null]], "splinepy.helpme.multi_index.MultiIndex": [[214, null]], "splinepy.helpme.reparametrize": [[215, null]], "splinepy.helpme.reparametrize.flip_axes": [[216, null]], "splinepy.helpme.reparametrize.permute_parametric_axes": [[217, null]], "splinepy.helpme.visualize": [[218, null]], "splinepy.helpme.visualize.MultipatchShowOption": [[219, null]], "splinepy.helpme.visualize.MultipatchShowOption.clear": [[220, null]], "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options": [[221, null]], "splinepy.helpme.visualize.MultipatchShowOption.get": [[222, null]], "splinepy.helpme.visualize.MultipatchShowOption.items": [[223, null]], "splinepy.helpme.visualize.MultipatchShowOption.keys": [[224, null]], "splinepy.helpme.visualize.MultipatchShowOption.pop": [[225, null]], "splinepy.helpme.visualize.MultipatchShowOption.update": [[226, null]], "splinepy.helpme.visualize.MultipatchShowOption.valid_keys": [[227, null]], "splinepy.helpme.visualize.MultipatchShowOption.values": [[228, null]], "splinepy.helpme.visualize.SplineShowOption": [[229, null]], "splinepy.helpme.visualize.SplineShowOption.clear": [[230, null]], "splinepy.helpme.visualize.SplineShowOption.copy_valid_options": [[231, null]], "splinepy.helpme.visualize.SplineShowOption.get": [[232, null]], "splinepy.helpme.visualize.SplineShowOption.items": [[233, null]], "splinepy.helpme.visualize.SplineShowOption.keys": [[234, null]], "splinepy.helpme.visualize.SplineShowOption.pop": [[235, null]], "splinepy.helpme.visualize.SplineShowOption.update": [[236, null]], "splinepy.helpme.visualize.SplineShowOption.valid_keys": [[237, null]], "splinepy.helpme.visualize.SplineShowOption.values": [[238, null]], "splinepy.helpme.visualize.make_showable": [[239, null]], "splinepy.helpme.visualize.show": [[240, null]], "splinepy.io": [[241, null]], "splinepy.io.cats": [[242, null]], "splinepy.io.cats.export": [[243, null]], "splinepy.io.cats.load": [[244, null]], "splinepy.io.default": [[245, null]], "splinepy.io.default.export": [[246, null]], "splinepy.io.default.load": [[247, null]], "splinepy.io.gismo": [[248, null]], "splinepy.io.gismo.export": [[249, null]], "splinepy.io.gismo.load": [[250, null]], "splinepy.io.iges": [[251, null]], "splinepy.io.iges.export": [[252, null]], "splinepy.io.iges.load": [[253, null]], "splinepy.io.ioutils": [[254, null]], "splinepy.io.ioutils.abs_fname": [[255, null]], "splinepy.io.ioutils.dict_to_spline": [[256, null]], "splinepy.io.ioutils.expand_tabs": [[257, null]], "splinepy.io.ioutils.form_lines": [[258, null]], "splinepy.io.ioutils.make_meaningful": [[259, null]], "splinepy.io.ioutils.next_line": [[260, null]], "splinepy.io.irit": [[261, null]], "splinepy.io.irit.export": [[262, null]], "splinepy.io.irit.load": [[263, null]], "splinepy.io.json": [[264, null]], "splinepy.io.json.export": [[265, null]], "splinepy.io.json.load": [[266, null]], "splinepy.io.mfem": [[267, null]], "splinepy.io.mfem.dof_mapping": [[268, null]], "splinepy.io.mfem.export": [[269, null]], "splinepy.io.mfem.export_cartesian": [[270, null]], "splinepy.io.mfem.load": [[271, null]], "splinepy.io.mfem.read_solution": [[272, null]], "splinepy.io.npz": [[273, null]], "splinepy.io.npz.export": [[274, null]], "splinepy.io.npz.load": [[275, null]], "splinepy.io.svg": [[276, null]], "splinepy.io.svg.export": [[277, null]], "splinepy.microstructure": [[278, null]], "splinepy.microstructure.microstructure": [[279, null]], "splinepy.microstructure.microstructure.Microstructure": [[280, null]], "splinepy.microstructure.microstructure.Microstructure.create": [[281, null]], "splinepy.microstructure.microstructure.Microstructure.deformation_function": [[282, null]], "splinepy.microstructure.microstructure.Microstructure.microtile": [[283, null]], "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function": [[284, null]], "splinepy.microstructure.microstructure.Microstructure.parametrization_function": [[285, null]], "splinepy.microstructure.microstructure.Microstructure.show": [[286, null]], "splinepy.microstructure.microstructure.Microstructure.tiling": [[287, null]], "splinepy.microstructure.tiles": [[288, null]], "splinepy.microstructure.tiles.armadillo": [[289, null]], "splinepy.microstructure.tiles.armadillo.Armadillo": [[290, null]], "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives": [[291, null]], "splinepy.microstructure.tiles.armadillo.Armadillo.check_params": [[292, null]], "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile": [[293, null]], "splinepy.microstructure.tiles.by_dim": [[294, null]], "splinepy.microstructure.tiles.chi": [[295, null]], "splinepy.microstructure.tiles.chi.Chi": [[296, null]], "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives": [[297, null]], "splinepy.microstructure.tiles.chi.Chi.check_params": [[298, null]], "splinepy.microstructure.tiles.chi.Chi.create_tile": [[299, null]], "splinepy.microstructure.tiles.cross_2d": [[300, null]], "splinepy.microstructure.tiles.cross_2d.Cross2D": [[301, null]], "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives": [[302, null]], "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params": [[303, null]], "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile": [[304, null]], "splinepy.microstructure.tiles.cross_3d": [[305, null]], "splinepy.microstructure.tiles.cross_3d.Cross3D": [[306, null]], "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives": [[307, null]], "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params": [[308, null]], "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile": [[309, null]], "splinepy.microstructure.tiles.cross_3d_linear": [[310, null]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear": [[311, null]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives": [[312, null]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params": [[313, null]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile": [[314, null]], "splinepy.microstructure.tiles.cube_void": [[315, null]], "splinepy.microstructure.tiles.cube_void.CubeVoid": [[316, null]], "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives": [[317, null]], "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params": [[318, null]], "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile": [[319, null]], "splinepy.microstructure.tiles.double_lattice": [[320, null]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice": [[321, null]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives": [[322, null]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params": [[323, null]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile": [[324, null]], "splinepy.microstructure.tiles.ellips_v_oid": [[325, null]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid": [[326, null]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives": [[327, null]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params": [[328, null]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile": [[329, null]], "splinepy.microstructure.tiles.everything": [[330, null]], "splinepy.microstructure.tiles.get": [[331, null]], "splinepy.microstructure.tiles.hollow_cube": [[332, null]], "splinepy.microstructure.tiles.hollow_cube.HollowCube": [[333, null]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives": [[334, null]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params": [[335, null]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile": [[336, null]], "splinepy.microstructure.tiles.hollow_octagon": [[337, null]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon": [[338, null]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives": [[339, null]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params": [[340, null]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile": [[341, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[342, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude": [[343, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives": [[344, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params": [[345, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile": [[346, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile": [[347, null]], "splinepy.microstructure.tiles.inverse_cross_3d": [[348, null]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D": [[349, null]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives": [[350, null]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params": [[351, null]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile": [[352, null]], "splinepy.microstructure.tiles.show": [[353, null]], "splinepy.microstructure.tiles.snappy": [[354, null]], "splinepy.microstructure.tiles.snappy.Snappy": [[355, null]], "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives": [[356, null]], "splinepy.microstructure.tiles.snappy.Snappy.check_params": [[357, null]], "splinepy.microstructure.tiles.snappy.Snappy.create_tile": [[358, null]], "splinepy.microstructure.tiles.tile_base": [[359, null]], "splinepy.microstructure.tiles.tile_base.TileBase": [[360, null]], "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives": [[361, null]], "splinepy.microstructure.tiles.tile_base.TileBase.check_params": [[362, null]], "splinepy.microstructure.tiles.tile_base.TileBase.create_tile": [[363, null]], "splinepy.microstructure.tiles.tile_base.TileBase.dim": [[364, null]], "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points": [[365, null]], "splinepy.microstructure.tiles.tile_base.TileBase.para_dim": [[366, null]], "splinepy.multipatch": [[367, null]], "splinepy.multipatch.Multipatch": [[368, null]], "splinepy.multipatch.Multipatch.add_fields": [[369, null]], "splinepy.multipatch.Multipatch.boundaries": [[370, null]], "splinepy.multipatch.Multipatch.boundaries_from_continuity": [[371, null]], "splinepy.multipatch.Multipatch.boundary_from_function": [[372, null]], "splinepy.multipatch.Multipatch.boundary_multipatch": [[373, null]], "splinepy.multipatch.Multipatch.boundary_patch_ids": [[374, null]], "splinepy.multipatch.Multipatch.clear": [[375, null]], "splinepy.multipatch.Multipatch.combine_boundaries": [[376, null]], "splinepy.multipatch.Multipatch.control_point_offsets": [[377, null]], "splinepy.multipatch.Multipatch.determine_interfaces": [[378, null]], "splinepy.multipatch.Multipatch.dim": [[379, null]], "splinepy.multipatch.Multipatch.evaluate": [[380, null]], "splinepy.multipatch.Multipatch.extract": [[381, null]], "splinepy.multipatch.Multipatch.fields": [[382, null]], "splinepy.multipatch.Multipatch.get_interfaces": [[383, null]], "splinepy.multipatch.Multipatch.interface_orientations": [[384, null]], "splinepy.multipatch.Multipatch.interfaces": [[385, null]], "splinepy.multipatch.Multipatch.para_dim": [[386, null]], "splinepy.multipatch.Multipatch.patches": [[387, null]], "splinepy.multipatch.Multipatch.sample": [[388, null]], "splinepy.multipatch.Multipatch.set_boundary": [[389, null]], "splinepy.multipatch.Multipatch.set_interfaces": [[390, null]], "splinepy.multipatch.Multipatch.show": [[391, null]], "splinepy.multipatch.Multipatch.show_options": [[392, null]], "splinepy.multipatch.Multipatch.showable": [[393, null]], "splinepy.multipatch.Multipatch.spline_data": [[394, null]], "splinepy.multipatch.Multipatch.sub_multipatch": [[395, null]], "splinepy.multipatch.Multipatch.sub_patch_centers": [[396, null]], "splinepy.nurbs": [[397, null]], "splinepy.nurbs.NURBS": [[398, null]], "splinepy.nurbs.NURBS.basis": [[399, null]], "splinepy.nurbs.NURBS.basis_and_support": [[400, null]], "splinepy.nurbs.NURBS.basis_derivative": [[401, null]], "splinepy.nurbs.NURBS.basis_derivative_and_support": [[402, null]], "splinepy.nurbs.NURBS.clear": [[403, null]], "splinepy.nurbs.NURBS.copy": [[404, null]], "splinepy.nurbs.NURBS.current_core_properties": [[405, null]], "splinepy.nurbs.NURBS.derivative": [[406, null]], "splinepy.nurbs.NURBS.elevate_degrees": [[407, null]], "splinepy.nurbs.NURBS.evaluate": [[408, null]], "splinepy.nurbs.NURBS.export": [[409, null]], "splinepy.nurbs.NURBS.extract_bezier_patches": [[410, null]], "splinepy.nurbs.NURBS.greville_abscissae": [[411, null]], "splinepy.nurbs.NURBS.insert_knots": [[412, null]], "splinepy.nurbs.NURBS.jacobian": [[413, null]], "splinepy.nurbs.NURBS.knot_insertion_matrix": [[414, null]], "splinepy.nurbs.NURBS.mapper": [[415, null]], "splinepy.nurbs.NURBS.normalize_knot_vectors": [[416, null]], "splinepy.nurbs.NURBS.nurbs": [[417, null]], "splinepy.nurbs.NURBS.proximities": [[418, null]], "splinepy.nurbs.NURBS.reduce_degrees": [[419, null]], "splinepy.nurbs.NURBS.remove_knots": [[420, null]], "splinepy.nurbs.NURBS.sample": [[421, null]], "splinepy.nurbs.NURBS.show": [[422, null]], "splinepy.nurbs.NURBS.showable": [[423, null]], "splinepy.nurbs.NURBS.support": [[424, null]], "splinepy.nurbs.NURBS.todict": [[425, null]], "splinepy.nurbs.NURBS.uniform_refine": [[426, null]], "splinepy.rational_bezier": [[427, null]], "splinepy.rational_bezier.RationalBezier": [[428, null]], "splinepy.rational_bezier.RationalBezier.basis": [[429, null]], "splinepy.rational_bezier.RationalBezier.basis_and_support": [[430, null]], "splinepy.rational_bezier.RationalBezier.basis_derivative": [[431, null]], "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support": [[432, null]], "splinepy.rational_bezier.RationalBezier.clear": [[433, null]], "splinepy.rational_bezier.RationalBezier.compose": [[434, null]], "splinepy.rational_bezier.RationalBezier.composition_derivative": [[435, null]], "splinepy.rational_bezier.RationalBezier.copy": [[436, null]], "splinepy.rational_bezier.RationalBezier.current_core_properties": [[437, null]], "splinepy.rational_bezier.RationalBezier.derivative": [[438, null]], "splinepy.rational_bezier.RationalBezier.derivative_spline": [[439, null]], "splinepy.rational_bezier.RationalBezier.elevate_degrees": [[440, null]], "splinepy.rational_bezier.RationalBezier.evaluate": [[441, null]], "splinepy.rational_bezier.RationalBezier.export": [[442, null]], "splinepy.rational_bezier.RationalBezier.extract_dim": [[443, null]], "splinepy.rational_bezier.RationalBezier.greville_abscissae": [[444, null]], "splinepy.rational_bezier.RationalBezier.jacobian": [[445, null]], "splinepy.rational_bezier.RationalBezier.mapper": [[446, null]], "splinepy.rational_bezier.RationalBezier.nurbs": [[447, null]], "splinepy.rational_bezier.RationalBezier.proximities": [[448, null]], "splinepy.rational_bezier.RationalBezier.rationalbezier": [[449, null]], "splinepy.rational_bezier.RationalBezier.reduce_degrees": [[450, null]], "splinepy.rational_bezier.RationalBezier.sample": [[451, null]], "splinepy.rational_bezier.RationalBezier.show": [[452, null]], "splinepy.rational_bezier.RationalBezier.showable": [[453, null]], "splinepy.rational_bezier.RationalBezier.split": [[454, null]], "splinepy.rational_bezier.RationalBezier.support": [[455, null]], "splinepy.rational_bezier.RationalBezier.todict": [[456, null]], "splinepy.settings": [[457, null]], "splinepy.settings.CHECK_BOUNDS": [[458, null]], "splinepy.settings.NAME_TO_TYPE": [[459, null]], "splinepy.settings.NTHREADS": [[460, null]], "splinepy.settings.TOLERANCE": [[461, null]], "splinepy.spline": [[462, null]], "splinepy.spline.RequiredProperties": [[463, null]], "splinepy.spline.RequiredProperties.intersection": [[464, null]], "splinepy.spline.RequiredProperties.of": [[465, null]], "splinepy.spline.RequiredProperties.union": [[466, null]], "splinepy.spline.Spline": [[467, null]], "splinepy.spline.Spline.basis": [[468, null]], "splinepy.spline.Spline.basis_and_support": [[469, null]], "splinepy.spline.Spline.basis_derivative": [[470, null]], "splinepy.spline.Spline.basis_derivative_and_support": [[471, null]], "splinepy.spline.Spline.check": [[472, null]], "splinepy.spline.Spline.clear": [[473, null]], "splinepy.spline.Spline.control_mesh_resolutions": [[474, null]], "splinepy.spline.Spline.control_point_bounds": [[475, null]], "splinepy.spline.Spline.control_points": [[476, null]], "splinepy.spline.Spline.copy": [[477, null]], "splinepy.spline.Spline.cps": [[478, null]], "splinepy.spline.Spline.create": [[479, null]], "splinepy.spline.Spline.current_core_properties": [[480, null]], "splinepy.spline.Spline.degrees": [[481, null]], "splinepy.spline.Spline.derivative": [[482, null]], "splinepy.spline.Spline.dim": [[483, null]], "splinepy.spline.Spline.ds": [[484, null]], "splinepy.spline.Spline.elevate_degrees": [[485, null]], "splinepy.spline.Spline.evaluate": [[486, null]], "splinepy.spline.Spline.export": [[487, null]], "splinepy.spline.Spline.extract": [[488, null]], "splinepy.spline.Spline.greville_abscissae": [[489, null]], "splinepy.spline.Spline.has_knot_vectors": [[490, null]], "splinepy.spline.Spline.integrate": [[491, null]], "splinepy.spline.Spline.is_rational": [[492, null]], "splinepy.spline.Spline.jacobian": [[493, null]], "splinepy.spline.Spline.knot_multiplicities": [[494, null]], "splinepy.spline.Spline.knot_vectors": [[495, null]], "splinepy.spline.Spline.kvs": [[496, null]], "splinepy.spline.Spline.mapper": [[497, null]], "splinepy.spline.Spline.multi_index": [[498, null]], "splinepy.spline.Spline.name": [[499, null]], "splinepy.spline.Spline.para_dim": [[500, null]], "splinepy.spline.Spline.parametric_bounds": [[501, null]], "splinepy.spline.Spline.proximities": [[502, null]], "splinepy.spline.Spline.reduce_degrees": [[503, null]], "splinepy.spline.Spline.required_properties": [[504, null]], "splinepy.spline.Spline.sample": [[505, null]], "splinepy.spline.Spline.show": [[506, null]], "splinepy.spline.Spline.show_options": [[507, null]], "splinepy.spline.Spline.showable": [[508, null]], "splinepy.spline.Spline.spline_data": [[509, null]], "splinepy.spline.Spline.support": [[510, null]], "splinepy.spline.Spline.todict": [[511, null]], "splinepy.spline.Spline.unique_knots": [[512, null]], "splinepy.spline.Spline.weights": [[513, null]], "splinepy.spline.Spline.whatami": [[514, null]], "splinepy.spline.Spline.ws": [[515, null]], "splinepy.splinepy_core": [[516, null]], "splinepy.splinepy_core.ControlPointPointers": [[517, null]], "splinepy.splinepy_core.ControlPointPointers.dim": [[518, null]], "splinepy.splinepy_core.ControlPointPointers.len": [[519, null]], "splinepy.splinepy_core.ControlPointPointers.set_row": [[520, null]], "splinepy.splinepy_core.ControlPointPointers.set_rows": [[521, null]], "splinepy.splinepy_core.ControlPointPointers.sync": [[522, null]], "splinepy.splinepy_core.ControlPointPointers.sync_rows": [[523, null]], "splinepy.splinepy_core.KnotVector": [[524, null]], "splinepy.splinepy_core.KnotVector.find_span": [[525, null]], "splinepy.splinepy_core.KnotVector.multiplicities": [[526, null]], "splinepy.splinepy_core.KnotVector.numpy": [[527, null]], "splinepy.splinepy_core.KnotVector.scale": [[528, null]], "splinepy.splinepy_core.KnotVector.unique": [[529, null]], "splinepy.splinepy_core.ParameterSpace": [[530, null]], "splinepy.splinepy_core.ParameterSpace.copy": [[531, null]], "splinepy.splinepy_core.ParameterSpace.unique_knots": [[532, null]], "splinepy.splinepy_core.PyMultipatch": [[533, null]], "splinepy.splinepy_core.PyMultipatch.add_fields": [[534, null]], "splinepy.splinepy_core.PyMultipatch.boundary_multipatch": [[535, null]], "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids": [[536, null]], "splinepy.splinepy_core.PyMultipatch.clear": [[537, null]], "splinepy.splinepy_core.PyMultipatch.control_point_offsets": [[538, null]], "splinepy.splinepy_core.PyMultipatch.control_points": [[539, null]], "splinepy.splinepy_core.PyMultipatch.dim": [[540, null]], "splinepy.splinepy_core.PyMultipatch.evaluate": [[541, null]], "splinepy.splinepy_core.PyMultipatch.fields": [[542, null]], "splinepy.splinepy_core.PyMultipatch.get_interfaces": [[543, null]], "splinepy.splinepy_core.PyMultipatch.interface_orientations": [[544, null]], "splinepy.splinepy_core.PyMultipatch.n_default_threads": [[545, null]], "splinepy.splinepy_core.PyMultipatch.name": [[546, null]], "splinepy.splinepy_core.PyMultipatch.para_dim": [[547, null]], "splinepy.splinepy_core.PyMultipatch.patches": [[548, null]], "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds": [[549, null]], "splinepy.splinepy_core.PyMultipatch.sample": [[550, null]], "splinepy.splinepy_core.PyMultipatch.set_interfaces": [[551, null]], "splinepy.splinepy_core.PyMultipatch.sub_multipatch": [[552, null]], "splinepy.splinepy_core.PyMultipatch.sub_patch_centers": [[553, null]], "splinepy.splinepy_core.PyMultipatch.tolerance": [[554, null]], "splinepy.splinepy_core.PyMultipatch.whatami": [[555, null]], "splinepy.splinepy_core.PySpline": [[556, null]], "splinepy.splinepy_core.PySpline.basis": [[557, null]], "splinepy.splinepy_core.PySpline.basis_and_support": [[558, null]], "splinepy.splinepy_core.PySpline.basis_derivative": [[559, null]], "splinepy.splinepy_core.PySpline.basis_derivative_and_support": [[560, null]], "splinepy.splinepy_core.PySpline.control_mesh_resolutions": [[561, null]], "splinepy.splinepy_core.PySpline.current_core_properties": [[562, null]], "splinepy.splinepy_core.PySpline.derivative": [[563, null]], "splinepy.splinepy_core.PySpline.dim": [[564, null]], "splinepy.splinepy_core.PySpline.elevate_degrees": [[565, null]], "splinepy.splinepy_core.PySpline.evaluate": [[566, null]], "splinepy.splinepy_core.PySpline.has_knot_vectors": [[567, null]], "splinepy.splinepy_core.PySpline.is_rational": [[568, null]], "splinepy.splinepy_core.PySpline.jacobian": [[569, null]], "splinepy.splinepy_core.PySpline.name": [[570, null]], "splinepy.splinepy_core.PySpline.para_dim": [[571, null]], "splinepy.splinepy_core.PySpline.parametric_bounds": [[572, null]], "splinepy.splinepy_core.PySpline.proximities": [[573, null]], "splinepy.splinepy_core.PySpline.reduce_degrees": [[574, null]], "splinepy.splinepy_core.PySpline.sample": [[575, null]], "splinepy.splinepy_core.PySpline.support": [[576, null]], "splinepy.splinepy_core.PySpline.whatami": [[577, null]], "splinepy.splinepy_core.WeightPointers": [[578, null]], "splinepy.splinepy_core.WeightPointers.dim": [[579, null]], "splinepy.splinepy_core.WeightPointers.len": [[580, null]], "splinepy.splinepy_core.WeightPointers.set_row": [[581, null]], "splinepy.splinepy_core.WeightPointers.set_rows": [[582, null]], "splinepy.splinepy_core.WeightPointers.sync": [[583, null]], "splinepy.splinepy_core.WeightPointers.sync_rows": [[584, null]], "splinepy.splinepy_core.add": [[585, null]], "splinepy.splinepy_core.annul_core": [[586, null]], "splinepy.splinepy_core.bezier_extraction_matrix": [[587, null]], "splinepy.splinepy_core.boundaries_from_continuity": [[588, null]], "splinepy.splinepy_core.boundary_centers": [[589, null]], "splinepy.splinepy_core.build_type": [[590, null]], "splinepy.splinepy_core.compose": [[591, null]], "splinepy.splinepy_core.compose_sensitivities": [[592, null]], "splinepy.splinepy_core.composition_derivative": [[593, null]], "splinepy.splinepy_core.core_id": [[594, null]], "splinepy.splinepy_core.core_ref_count": [[595, null]], "splinepy.splinepy_core.derivative_spline": [[596, null]], "splinepy.splinepy_core.export_iges": [[597, null]], "splinepy.splinepy_core.extract_all_boundary_splines": [[598, null]], "splinepy.splinepy_core.extract_bezier_patches": [[599, null]], "splinepy.splinepy_core.extract_boundaries": [[600, null]], "splinepy.splinepy_core.extract_dim": [[601, null]], "splinepy.splinepy_core.global_knot_insertion_matrix": [[602, null]], "splinepy.splinepy_core.has_core": [[603, null]], "splinepy.splinepy_core.insert_knots": [[604, null]], "splinepy.splinepy_core.interfaces_from_boundary_centers": [[605, null]], "splinepy.splinepy_core.is_minimal": [[606, null]], "splinepy.splinepy_core.knot_insertion_matrix": [[607, null]], "splinepy.splinepy_core.multiply": [[608, null]], "splinepy.splinepy_core.null_spline": [[609, null]], "splinepy.splinepy_core.read_iges": [[610, null]], "splinepy.splinepy_core.remove_knots": [[611, null]], "splinepy.splinepy_core.same_spline_with_knot_vectors": [[612, null]], "splinepy.splinepy_core.split": [[613, null]], "splinepy.to_derived": [[614, null]], "splinepy.utils": [[615, null]], "splinepy.utils.data": [[616, null]], "splinepy.utils.data.MultipatchData": [[617, null]], "splinepy.utils.data.MultipatchData.as_arrow": [[618, null]], "splinepy.utils.data.MultipatchData.as_scalar": [[619, null]], "splinepy.utils.data.MultipatchData.clear": [[620, null]], "splinepy.utils.data.MultipatchData.get": [[621, null]], "splinepy.utils.data.MultipatchData.items": [[622, null]], "splinepy.utils.data.MultipatchData.keys": [[623, null]], "splinepy.utils.data.MultipatchData.pop": [[624, null]], "splinepy.utils.data.MultipatchData.update": [[625, null]], "splinepy.utils.data.MultipatchData.values": [[626, null]], "splinepy.utils.data.PhysicalSpaceArray": [[627, null]], "splinepy.utils.data.PhysicalSpaceArray.all": [[628, null]], "splinepy.utils.data.PhysicalSpaceArray.any": [[629, null]], "splinepy.utils.data.PhysicalSpaceArray.argmax": [[630, null]], "splinepy.utils.data.PhysicalSpaceArray.argmin": [[631, null]], "splinepy.utils.data.PhysicalSpaceArray.argpartition": [[632, null]], "splinepy.utils.data.PhysicalSpaceArray.argsort": [[633, null]], "splinepy.utils.data.PhysicalSpaceArray.astype": [[634, null]], "splinepy.utils.data.PhysicalSpaceArray.byteswap": [[635, null]], "splinepy.utils.data.PhysicalSpaceArray.choose": [[636, null]], "splinepy.utils.data.PhysicalSpaceArray.clip": [[637, null]], "splinepy.utils.data.PhysicalSpaceArray.compress": [[638, null]], "splinepy.utils.data.PhysicalSpaceArray.conj": [[639, null]], "splinepy.utils.data.PhysicalSpaceArray.conjugate": [[640, null]], "splinepy.utils.data.PhysicalSpaceArray.copy": [[641, null]], "splinepy.utils.data.PhysicalSpaceArray.cumprod": [[642, null]], "splinepy.utils.data.PhysicalSpaceArray.cumsum": [[643, null]], "splinepy.utils.data.PhysicalSpaceArray.diagonal": [[644, null]], "splinepy.utils.data.PhysicalSpaceArray.dot": [[645, null]], "splinepy.utils.data.PhysicalSpaceArray.dump": [[646, null]], "splinepy.utils.data.PhysicalSpaceArray.dumps": [[647, null]], "splinepy.utils.data.PhysicalSpaceArray.fill": [[648, null]], "splinepy.utils.data.PhysicalSpaceArray.flatten": [[649, null]], "splinepy.utils.data.PhysicalSpaceArray.full_row_indices": [[650, null]], "splinepy.utils.data.PhysicalSpaceArray.getfield": [[651, null]], "splinepy.utils.data.PhysicalSpaceArray.item": [[652, null]], "splinepy.utils.data.PhysicalSpaceArray.max": [[653, null]], "splinepy.utils.data.PhysicalSpaceArray.mean": [[654, null]], "splinepy.utils.data.PhysicalSpaceArray.min": [[655, null]], "splinepy.utils.data.PhysicalSpaceArray.nonzero": [[656, null]], "splinepy.utils.data.PhysicalSpaceArray.partition": [[657, null]], "splinepy.utils.data.PhysicalSpaceArray.prod": [[658, null]], "splinepy.utils.data.PhysicalSpaceArray.put": [[659, null]], "splinepy.utils.data.PhysicalSpaceArray.ravel": [[660, null]], "splinepy.utils.data.PhysicalSpaceArray.repeat": [[661, null]], "splinepy.utils.data.PhysicalSpaceArray.reshape": [[662, null]], "splinepy.utils.data.PhysicalSpaceArray.resize": [[663, null]], "splinepy.utils.data.PhysicalSpaceArray.round": [[664, null]], "splinepy.utils.data.PhysicalSpaceArray.row_indices": [[665, null]], "splinepy.utils.data.PhysicalSpaceArray.searchsorted": [[666, null]], "splinepy.utils.data.PhysicalSpaceArray.setfield": [[667, null]], "splinepy.utils.data.PhysicalSpaceArray.setflags": [[668, null]], "splinepy.utils.data.PhysicalSpaceArray.sort": [[669, null]], "splinepy.utils.data.PhysicalSpaceArray.squeeze": [[670, null]], "splinepy.utils.data.PhysicalSpaceArray.std": [[671, null]], "splinepy.utils.data.PhysicalSpaceArray.sum": [[672, null]], "splinepy.utils.data.PhysicalSpaceArray.swapaxes": [[673, null]], "splinepy.utils.data.PhysicalSpaceArray.take": [[674, null]], "splinepy.utils.data.PhysicalSpaceArray.to_device": [[675, null]], "splinepy.utils.data.PhysicalSpaceArray.tobytes": [[676, null]], "splinepy.utils.data.PhysicalSpaceArray.tofile": [[677, null]], "splinepy.utils.data.PhysicalSpaceArray.tolist": [[678, null]], "splinepy.utils.data.PhysicalSpaceArray.tostring": [[679, null]], "splinepy.utils.data.PhysicalSpaceArray.trace": [[680, null]], "splinepy.utils.data.PhysicalSpaceArray.transpose": [[681, null]], "splinepy.utils.data.PhysicalSpaceArray.var": [[682, null]], "splinepy.utils.data.PhysicalSpaceArray.view": [[683, null]], "splinepy.utils.data.SplineData": [[684, null]], "splinepy.utils.data.SplineData.as_arrow": [[685, null]], "splinepy.utils.data.SplineData.as_scalar": [[686, null]], "splinepy.utils.data.SplineData.clear": [[687, null]], "splinepy.utils.data.SplineData.get": [[688, null]], "splinepy.utils.data.SplineData.items": [[689, null]], "splinepy.utils.data.SplineData.keys": [[690, null]], "splinepy.utils.data.SplineData.pop": [[691, null]], "splinepy.utils.data.SplineData.update": [[692, null]], "splinepy.utils.data.SplineData.values": [[693, null]], "splinepy.utils.data.SplineDataAdaptor": [[694, null]], "splinepy.utils.data.SplineDataAdaptor.arrow_data_only": [[695, null]], "splinepy.utils.data.SplineDataAdaptor.as_vertex_data": [[696, null]], "splinepy.utils.data.SplineDataAdaptor.data": [[697, null]], "splinepy.utils.data.SplineDataAdaptor.function": [[698, null]], "splinepy.utils.data.SplineDataAdaptor.has_evaluate": [[699, null]], "splinepy.utils.data.SplineDataAdaptor.has_function": [[700, null]], "splinepy.utils.data.SplineDataAdaptor.has_locations": [[701, null]], "splinepy.utils.data.SplineDataAdaptor.is_spline": [[702, null]], "splinepy.utils.data.SplineDataAdaptor.locations": [[703, null]], "splinepy.utils.data.SplineDataAdaptor.parametric_bounds": [[704, null]], "splinepy.utils.data.cartesian_product": [[705, null]], "splinepy.utils.data.enforce_contiguous": [[706, null]], "splinepy.utils.data.enforce_contiguous_values": [[707, null]], "splinepy.utils.data.make_matrix": [[708, null]], "splinepy.utils.data.uniform_query": [[709, null]], "splinepy.utils.log": [[710, null]], "splinepy.utils.log.configure": [[711, null]], "splinepy.utils.log.debug": [[712, null]], "splinepy.utils.log.error": [[713, null]], "splinepy.utils.log.info": [[714, null]], "splinepy.utils.log.prepend_log": [[715, null]], "splinepy.utils.log.warning": [[716, null]]}, "docnames": ["CONTRIBUTING", "_generated/splinepy", "_generated/splinepy.bezier", "_generated/splinepy.bezier.Bezier", "_generated/splinepy.bezier.Bezier.basis", "_generated/splinepy.bezier.Bezier.basis_and_support", "_generated/splinepy.bezier.Bezier.basis_derivative", "_generated/splinepy.bezier.Bezier.basis_derivative_and_support", "_generated/splinepy.bezier.Bezier.bezier", "_generated/splinepy.bezier.Bezier.bspline", "_generated/splinepy.bezier.Bezier.clear", "_generated/splinepy.bezier.Bezier.compose", "_generated/splinepy.bezier.Bezier.composition_derivative", "_generated/splinepy.bezier.Bezier.copy", "_generated/splinepy.bezier.Bezier.current_core_properties", "_generated/splinepy.bezier.Bezier.derivative", "_generated/splinepy.bezier.Bezier.derivative_spline", "_generated/splinepy.bezier.Bezier.elevate_degrees", "_generated/splinepy.bezier.Bezier.evaluate", "_generated/splinepy.bezier.Bezier.export", "_generated/splinepy.bezier.Bezier.extract_dim", "_generated/splinepy.bezier.Bezier.greville_abscissae", "_generated/splinepy.bezier.Bezier.jacobian", "_generated/splinepy.bezier.Bezier.mapper", "_generated/splinepy.bezier.Bezier.nurbs", "_generated/splinepy.bezier.Bezier.proximities", "_generated/splinepy.bezier.Bezier.rationalbezier", "_generated/splinepy.bezier.Bezier.reduce_degrees", "_generated/splinepy.bezier.Bezier.sample", "_generated/splinepy.bezier.Bezier.show", "_generated/splinepy.bezier.Bezier.showable", "_generated/splinepy.bezier.Bezier.split", "_generated/splinepy.bezier.Bezier.support", "_generated/splinepy.bezier.Bezier.todict", "_generated/splinepy.bezier.BezierBase", "_generated/splinepy.bezier.BezierBase.basis", "_generated/splinepy.bezier.BezierBase.basis_and_support", "_generated/splinepy.bezier.BezierBase.basis_derivative", "_generated/splinepy.bezier.BezierBase.basis_derivative_and_support", "_generated/splinepy.bezier.BezierBase.clear", "_generated/splinepy.bezier.BezierBase.compose", "_generated/splinepy.bezier.BezierBase.composition_derivative", "_generated/splinepy.bezier.BezierBase.copy", "_generated/splinepy.bezier.BezierBase.current_core_properties", "_generated/splinepy.bezier.BezierBase.derivative", "_generated/splinepy.bezier.BezierBase.derivative_spline", "_generated/splinepy.bezier.BezierBase.elevate_degrees", "_generated/splinepy.bezier.BezierBase.evaluate", "_generated/splinepy.bezier.BezierBase.export", "_generated/splinepy.bezier.BezierBase.extract_dim", "_generated/splinepy.bezier.BezierBase.greville_abscissae", "_generated/splinepy.bezier.BezierBase.jacobian", "_generated/splinepy.bezier.BezierBase.mapper", "_generated/splinepy.bezier.BezierBase.proximities", "_generated/splinepy.bezier.BezierBase.reduce_degrees", "_generated/splinepy.bezier.BezierBase.sample", "_generated/splinepy.bezier.BezierBase.show", "_generated/splinepy.bezier.BezierBase.showable", "_generated/splinepy.bezier.BezierBase.split", "_generated/splinepy.bezier.BezierBase.support", "_generated/splinepy.bezier.BezierBase.todict", "_generated/splinepy.bspline", "_generated/splinepy.bspline.BSpline", "_generated/splinepy.bspline.BSpline.basis", "_generated/splinepy.bspline.BSpline.basis_and_support", "_generated/splinepy.bspline.BSpline.basis_derivative", "_generated/splinepy.bspline.BSpline.basis_derivative_and_support", "_generated/splinepy.bspline.BSpline.bspline", "_generated/splinepy.bspline.BSpline.clear", "_generated/splinepy.bspline.BSpline.copy", "_generated/splinepy.bspline.BSpline.current_core_properties", "_generated/splinepy.bspline.BSpline.derivative", "_generated/splinepy.bspline.BSpline.elevate_degrees", "_generated/splinepy.bspline.BSpline.evaluate", "_generated/splinepy.bspline.BSpline.export", "_generated/splinepy.bspline.BSpline.extract_bezier_patches", "_generated/splinepy.bspline.BSpline.greville_abscissae", "_generated/splinepy.bspline.BSpline.insert_knots", "_generated/splinepy.bspline.BSpline.jacobian", "_generated/splinepy.bspline.BSpline.knot_insertion_matrix", "_generated/splinepy.bspline.BSpline.mapper", "_generated/splinepy.bspline.BSpline.normalize_knot_vectors", "_generated/splinepy.bspline.BSpline.nurbs", "_generated/splinepy.bspline.BSpline.proximities", "_generated/splinepy.bspline.BSpline.reduce_degrees", "_generated/splinepy.bspline.BSpline.remove_knots", "_generated/splinepy.bspline.BSpline.sample", "_generated/splinepy.bspline.BSpline.show", "_generated/splinepy.bspline.BSpline.showable", "_generated/splinepy.bspline.BSpline.support", "_generated/splinepy.bspline.BSpline.todict", "_generated/splinepy.bspline.BSpline.uniform_refine", "_generated/splinepy.bspline.BSplineBase", "_generated/splinepy.bspline.BSplineBase.basis", "_generated/splinepy.bspline.BSplineBase.basis_and_support", "_generated/splinepy.bspline.BSplineBase.basis_derivative", "_generated/splinepy.bspline.BSplineBase.basis_derivative_and_support", "_generated/splinepy.bspline.BSplineBase.clear", "_generated/splinepy.bspline.BSplineBase.copy", "_generated/splinepy.bspline.BSplineBase.current_core_properties", "_generated/splinepy.bspline.BSplineBase.derivative", "_generated/splinepy.bspline.BSplineBase.elevate_degrees", "_generated/splinepy.bspline.BSplineBase.evaluate", "_generated/splinepy.bspline.BSplineBase.export", "_generated/splinepy.bspline.BSplineBase.extract_bezier_patches", "_generated/splinepy.bspline.BSplineBase.greville_abscissae", "_generated/splinepy.bspline.BSplineBase.insert_knots", "_generated/splinepy.bspline.BSplineBase.jacobian", "_generated/splinepy.bspline.BSplineBase.knot_insertion_matrix", "_generated/splinepy.bspline.BSplineBase.mapper", "_generated/splinepy.bspline.BSplineBase.normalize_knot_vectors", "_generated/splinepy.bspline.BSplineBase.proximities", "_generated/splinepy.bspline.BSplineBase.reduce_degrees", "_generated/splinepy.bspline.BSplineBase.remove_knots", "_generated/splinepy.bspline.BSplineBase.sample", "_generated/splinepy.bspline.BSplineBase.show", "_generated/splinepy.bspline.BSplineBase.showable", "_generated/splinepy.bspline.BSplineBase.support", "_generated/splinepy.bspline.BSplineBase.todict", "_generated/splinepy.bspline.BSplineBase.uniform_refine", "_generated/splinepy.cli", "_generated/splinepy.cli.convert", "_generated/splinepy.cli.entry", "_generated/splinepy.cli.show", "_generated/splinepy.helpme", "_generated/splinepy.helpme.check", "_generated/splinepy.helpme.check.Checker", "_generated/splinepy.helpme.check.Checker.clamped_knot_vectors", "_generated/splinepy.helpme.check.Checker.valid_queries", "_generated/splinepy.helpme.check.clamped_knot_vectors", "_generated/splinepy.helpme.check.valid_queries", "_generated/splinepy.helpme.create", "_generated/splinepy.helpme.create.Creator", "_generated/splinepy.helpme.create.Creator.determinant_spline", "_generated/splinepy.helpme.create.Creator.embedded", "_generated/splinepy.helpme.create.Creator.extruded", "_generated/splinepy.helpme.create.Creator.parametric_view", "_generated/splinepy.helpme.create.Creator.revolved", "_generated/splinepy.helpme.create.arc", "_generated/splinepy.helpme.create.box", "_generated/splinepy.helpme.create.circle", "_generated/splinepy.helpme.create.cone", "_generated/splinepy.helpme.create.determinant_spline", "_generated/splinepy.helpme.create.disk", "_generated/splinepy.helpme.create.embedded", "_generated/splinepy.helpme.create.extruded", "_generated/splinepy.helpme.create.from_bounds", "_generated/splinepy.helpme.create.line", "_generated/splinepy.helpme.create.parametric_view", "_generated/splinepy.helpme.create.plate", "_generated/splinepy.helpme.create.pyramid", "_generated/splinepy.helpme.create.revolved", "_generated/splinepy.helpme.create.sphere", "_generated/splinepy.helpme.create.surface_circle", "_generated/splinepy.helpme.create.torus", "_generated/splinepy.helpme.extract", "_generated/splinepy.helpme.extract.Extractor", "_generated/splinepy.helpme.extract.Extractor.arrow_data", "_generated/splinepy.helpme.extract.Extractor.bases", "_generated/splinepy.helpme.extract.Extractor.beziers", "_generated/splinepy.helpme.extract.Extractor.boundaries", "_generated/splinepy.helpme.extract.Extractor.control_edges", "_generated/splinepy.helpme.extract.Extractor.control_faces", "_generated/splinepy.helpme.extract.Extractor.control_mesh", "_generated/splinepy.helpme.extract.Extractor.control_points", "_generated/splinepy.helpme.extract.Extractor.control_volumes", "_generated/splinepy.helpme.extract.Extractor.edges", "_generated/splinepy.helpme.extract.Extractor.faces", "_generated/splinepy.helpme.extract.Extractor.spline", "_generated/splinepy.helpme.extract.Extractor.volumes", "_generated/splinepy.helpme.extract.arrow_data", "_generated/splinepy.helpme.extract.bases", "_generated/splinepy.helpme.extract.boundaries", "_generated/splinepy.helpme.extract.control_edges", "_generated/splinepy.helpme.extract.control_faces", "_generated/splinepy.helpme.extract.control_mesh", "_generated/splinepy.helpme.extract.control_points", "_generated/splinepy.helpme.extract.control_volumes", "_generated/splinepy.helpme.extract.edges", "_generated/splinepy.helpme.extract.faces", "_generated/splinepy.helpme.extract.spline", "_generated/splinepy.helpme.extract.volumes", "_generated/splinepy.helpme.ffd", "_generated/splinepy.helpme.ffd.FFD", "_generated/splinepy.helpme.ffd.FFD.mesh", "_generated/splinepy.helpme.ffd.FFD.padding", "_generated/splinepy.helpme.ffd.FFD.show", "_generated/splinepy.helpme.ffd.FFD.showable", "_generated/splinepy.helpme.ffd.FFD.spline", "_generated/splinepy.helpme.fit", "_generated/splinepy.helpme.fit.compute_knot_vector", "_generated/splinepy.helpme.fit.curve", "_generated/splinepy.helpme.fit.parameterize", "_generated/splinepy.helpme.fit.solve_for_control_points", "_generated/splinepy.helpme.fit.surface", "_generated/splinepy.helpme.integrate", "_generated/splinepy.helpme.integrate.Integrator", "_generated/splinepy.helpme.integrate.Integrator.parametric_function", "_generated/splinepy.helpme.integrate.Integrator.volume", "_generated/splinepy.helpme.integrate.parametric_function", "_generated/splinepy.helpme.integrate.physical_function", "_generated/splinepy.helpme.integrate.volume", "_generated/splinepy.helpme.mapper", "_generated/splinepy.helpme.mapper.Mapper", "_generated/splinepy.helpme.mapper.Mapper.basis_function_derivatives", "_generated/splinepy.helpme.mapper.Mapper.basis_gradient_and_support", "_generated/splinepy.helpme.mapper.Mapper.basis_hessian_and_support", "_generated/splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", "_generated/splinepy.helpme.mapper.Mapper.divergence", "_generated/splinepy.helpme.mapper.Mapper.field_derivatives", "_generated/splinepy.helpme.mapper.Mapper.gradient", "_generated/splinepy.helpme.mapper.Mapper.hessian", "_generated/splinepy.helpme.mapper.Mapper.laplacian", "_generated/splinepy.helpme.multi_index", "_generated/splinepy.helpme.multi_index.MultiIndex", "_generated/splinepy.helpme.reparametrize", "_generated/splinepy.helpme.reparametrize.flip_axes", "_generated/splinepy.helpme.reparametrize.permute_parametric_axes", "_generated/splinepy.helpme.visualize", "_generated/splinepy.helpme.visualize.MultipatchShowOption", "_generated/splinepy.helpme.visualize.MultipatchShowOption.clear", "_generated/splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", "_generated/splinepy.helpme.visualize.MultipatchShowOption.get", "_generated/splinepy.helpme.visualize.MultipatchShowOption.items", "_generated/splinepy.helpme.visualize.MultipatchShowOption.keys", "_generated/splinepy.helpme.visualize.MultipatchShowOption.pop", "_generated/splinepy.helpme.visualize.MultipatchShowOption.update", "_generated/splinepy.helpme.visualize.MultipatchShowOption.valid_keys", "_generated/splinepy.helpme.visualize.MultipatchShowOption.values", "_generated/splinepy.helpme.visualize.SplineShowOption", "_generated/splinepy.helpme.visualize.SplineShowOption.clear", "_generated/splinepy.helpme.visualize.SplineShowOption.copy_valid_options", "_generated/splinepy.helpme.visualize.SplineShowOption.get", "_generated/splinepy.helpme.visualize.SplineShowOption.items", "_generated/splinepy.helpme.visualize.SplineShowOption.keys", "_generated/splinepy.helpme.visualize.SplineShowOption.pop", "_generated/splinepy.helpme.visualize.SplineShowOption.update", "_generated/splinepy.helpme.visualize.SplineShowOption.valid_keys", "_generated/splinepy.helpme.visualize.SplineShowOption.values", "_generated/splinepy.helpme.visualize.make_showable", "_generated/splinepy.helpme.visualize.show", "_generated/splinepy.io", "_generated/splinepy.io.cats", "_generated/splinepy.io.cats.export", "_generated/splinepy.io.cats.load", "_generated/splinepy.io.default", "_generated/splinepy.io.default.export", "_generated/splinepy.io.default.load", "_generated/splinepy.io.gismo", "_generated/splinepy.io.gismo.export", "_generated/splinepy.io.gismo.load", "_generated/splinepy.io.iges", "_generated/splinepy.io.iges.export", "_generated/splinepy.io.iges.load", "_generated/splinepy.io.ioutils", "_generated/splinepy.io.ioutils.abs_fname", "_generated/splinepy.io.ioutils.dict_to_spline", "_generated/splinepy.io.ioutils.expand_tabs", "_generated/splinepy.io.ioutils.form_lines", "_generated/splinepy.io.ioutils.make_meaningful", "_generated/splinepy.io.ioutils.next_line", "_generated/splinepy.io.irit", "_generated/splinepy.io.irit.export", "_generated/splinepy.io.irit.load", "_generated/splinepy.io.json", "_generated/splinepy.io.json.export", "_generated/splinepy.io.json.load", "_generated/splinepy.io.mfem", "_generated/splinepy.io.mfem.dof_mapping", "_generated/splinepy.io.mfem.export", "_generated/splinepy.io.mfem.export_cartesian", "_generated/splinepy.io.mfem.load", "_generated/splinepy.io.mfem.read_solution", "_generated/splinepy.io.npz", "_generated/splinepy.io.npz.export", "_generated/splinepy.io.npz.load", "_generated/splinepy.io.svg", "_generated/splinepy.io.svg.export", "_generated/splinepy.microstructure", "_generated/splinepy.microstructure.microstructure", "_generated/splinepy.microstructure.microstructure.Microstructure", "_generated/splinepy.microstructure.microstructure.Microstructure.create", "_generated/splinepy.microstructure.microstructure.Microstructure.deformation_function", "_generated/splinepy.microstructure.microstructure.Microstructure.microtile", "_generated/splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", "_generated/splinepy.microstructure.microstructure.Microstructure.parametrization_function", "_generated/splinepy.microstructure.microstructure.Microstructure.show", "_generated/splinepy.microstructure.microstructure.Microstructure.tiling", "_generated/splinepy.microstructure.tiles", "_generated/splinepy.microstructure.tiles.armadillo", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_params", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", "_generated/splinepy.microstructure.tiles.by_dim", "_generated/splinepy.microstructure.tiles.chi", "_generated/splinepy.microstructure.tiles.chi.Chi", "_generated/splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", "_generated/splinepy.microstructure.tiles.chi.Chi.check_params", "_generated/splinepy.microstructure.tiles.chi.Chi.create_tile", "_generated/splinepy.microstructure.tiles.cross_2d", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", "_generated/splinepy.microstructure.tiles.cross_3d", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", "_generated/splinepy.microstructure.tiles.cross_3d_linear", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile", "_generated/splinepy.microstructure.tiles.cube_void", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", "_generated/splinepy.microstructure.tiles.double_lattice", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", "_generated/splinepy.microstructure.tiles.ellips_v_oid", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", "_generated/splinepy.microstructure.tiles.everything", "_generated/splinepy.microstructure.tiles.get", "_generated/splinepy.microstructure.tiles.hollow_cube", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", "_generated/splinepy.microstructure.tiles.inverse_cross_3d", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", "_generated/splinepy.microstructure.tiles.show", "_generated/splinepy.microstructure.tiles.snappy", "_generated/splinepy.microstructure.tiles.snappy.Snappy", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_params", "_generated/splinepy.microstructure.tiles.snappy.Snappy.create_tile", "_generated/splinepy.microstructure.tiles.tile_base", "_generated/splinepy.microstructure.tiles.tile_base.TileBase", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_params", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.create_tile", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.dim", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.para_dim", "_generated/splinepy.multipatch", "_generated/splinepy.multipatch.Multipatch", "_generated/splinepy.multipatch.Multipatch.add_fields", "_generated/splinepy.multipatch.Multipatch.boundaries", "_generated/splinepy.multipatch.Multipatch.boundaries_from_continuity", "_generated/splinepy.multipatch.Multipatch.boundary_from_function", "_generated/splinepy.multipatch.Multipatch.boundary_multipatch", "_generated/splinepy.multipatch.Multipatch.boundary_patch_ids", "_generated/splinepy.multipatch.Multipatch.clear", "_generated/splinepy.multipatch.Multipatch.combine_boundaries", "_generated/splinepy.multipatch.Multipatch.control_point_offsets", "_generated/splinepy.multipatch.Multipatch.determine_interfaces", "_generated/splinepy.multipatch.Multipatch.dim", "_generated/splinepy.multipatch.Multipatch.evaluate", "_generated/splinepy.multipatch.Multipatch.extract", "_generated/splinepy.multipatch.Multipatch.fields", "_generated/splinepy.multipatch.Multipatch.get_interfaces", "_generated/splinepy.multipatch.Multipatch.interface_orientations", "_generated/splinepy.multipatch.Multipatch.interfaces", "_generated/splinepy.multipatch.Multipatch.para_dim", "_generated/splinepy.multipatch.Multipatch.patches", "_generated/splinepy.multipatch.Multipatch.sample", "_generated/splinepy.multipatch.Multipatch.set_boundary", "_generated/splinepy.multipatch.Multipatch.set_interfaces", "_generated/splinepy.multipatch.Multipatch.show", "_generated/splinepy.multipatch.Multipatch.show_options", "_generated/splinepy.multipatch.Multipatch.showable", "_generated/splinepy.multipatch.Multipatch.spline_data", "_generated/splinepy.multipatch.Multipatch.sub_multipatch", "_generated/splinepy.multipatch.Multipatch.sub_patch_centers", "_generated/splinepy.nurbs", "_generated/splinepy.nurbs.NURBS", "_generated/splinepy.nurbs.NURBS.basis", "_generated/splinepy.nurbs.NURBS.basis_and_support", "_generated/splinepy.nurbs.NURBS.basis_derivative", "_generated/splinepy.nurbs.NURBS.basis_derivative_and_support", "_generated/splinepy.nurbs.NURBS.clear", "_generated/splinepy.nurbs.NURBS.copy", "_generated/splinepy.nurbs.NURBS.current_core_properties", "_generated/splinepy.nurbs.NURBS.derivative", "_generated/splinepy.nurbs.NURBS.elevate_degrees", "_generated/splinepy.nurbs.NURBS.evaluate", "_generated/splinepy.nurbs.NURBS.export", "_generated/splinepy.nurbs.NURBS.extract_bezier_patches", "_generated/splinepy.nurbs.NURBS.greville_abscissae", "_generated/splinepy.nurbs.NURBS.insert_knots", "_generated/splinepy.nurbs.NURBS.jacobian", "_generated/splinepy.nurbs.NURBS.knot_insertion_matrix", "_generated/splinepy.nurbs.NURBS.mapper", "_generated/splinepy.nurbs.NURBS.normalize_knot_vectors", "_generated/splinepy.nurbs.NURBS.nurbs", "_generated/splinepy.nurbs.NURBS.proximities", "_generated/splinepy.nurbs.NURBS.reduce_degrees", "_generated/splinepy.nurbs.NURBS.remove_knots", "_generated/splinepy.nurbs.NURBS.sample", "_generated/splinepy.nurbs.NURBS.show", "_generated/splinepy.nurbs.NURBS.showable", "_generated/splinepy.nurbs.NURBS.support", "_generated/splinepy.nurbs.NURBS.todict", "_generated/splinepy.nurbs.NURBS.uniform_refine", "_generated/splinepy.rational_bezier", "_generated/splinepy.rational_bezier.RationalBezier", "_generated/splinepy.rational_bezier.RationalBezier.basis", "_generated/splinepy.rational_bezier.RationalBezier.basis_and_support", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", "_generated/splinepy.rational_bezier.RationalBezier.clear", "_generated/splinepy.rational_bezier.RationalBezier.compose", "_generated/splinepy.rational_bezier.RationalBezier.composition_derivative", "_generated/splinepy.rational_bezier.RationalBezier.copy", "_generated/splinepy.rational_bezier.RationalBezier.current_core_properties", "_generated/splinepy.rational_bezier.RationalBezier.derivative", "_generated/splinepy.rational_bezier.RationalBezier.derivative_spline", "_generated/splinepy.rational_bezier.RationalBezier.elevate_degrees", "_generated/splinepy.rational_bezier.RationalBezier.evaluate", "_generated/splinepy.rational_bezier.RationalBezier.export", "_generated/splinepy.rational_bezier.RationalBezier.extract_dim", "_generated/splinepy.rational_bezier.RationalBezier.greville_abscissae", "_generated/splinepy.rational_bezier.RationalBezier.jacobian", "_generated/splinepy.rational_bezier.RationalBezier.mapper", "_generated/splinepy.rational_bezier.RationalBezier.nurbs", "_generated/splinepy.rational_bezier.RationalBezier.proximities", "_generated/splinepy.rational_bezier.RationalBezier.rationalbezier", "_generated/splinepy.rational_bezier.RationalBezier.reduce_degrees", "_generated/splinepy.rational_bezier.RationalBezier.sample", "_generated/splinepy.rational_bezier.RationalBezier.show", "_generated/splinepy.rational_bezier.RationalBezier.showable", "_generated/splinepy.rational_bezier.RationalBezier.split", "_generated/splinepy.rational_bezier.RationalBezier.support", "_generated/splinepy.rational_bezier.RationalBezier.todict", "_generated/splinepy.settings", "_generated/splinepy.settings.CHECK_BOUNDS", "_generated/splinepy.settings.NAME_TO_TYPE", "_generated/splinepy.settings.NTHREADS", "_generated/splinepy.settings.TOLERANCE", "_generated/splinepy.spline", "_generated/splinepy.spline.RequiredProperties", "_generated/splinepy.spline.RequiredProperties.intersection", "_generated/splinepy.spline.RequiredProperties.of", "_generated/splinepy.spline.RequiredProperties.union", "_generated/splinepy.spline.Spline", "_generated/splinepy.spline.Spline.basis", "_generated/splinepy.spline.Spline.basis_and_support", "_generated/splinepy.spline.Spline.basis_derivative", "_generated/splinepy.spline.Spline.basis_derivative_and_support", "_generated/splinepy.spline.Spline.check", "_generated/splinepy.spline.Spline.clear", "_generated/splinepy.spline.Spline.control_mesh_resolutions", "_generated/splinepy.spline.Spline.control_point_bounds", "_generated/splinepy.spline.Spline.control_points", "_generated/splinepy.spline.Spline.copy", "_generated/splinepy.spline.Spline.cps", "_generated/splinepy.spline.Spline.create", "_generated/splinepy.spline.Spline.current_core_properties", "_generated/splinepy.spline.Spline.degrees", "_generated/splinepy.spline.Spline.derivative", "_generated/splinepy.spline.Spline.dim", "_generated/splinepy.spline.Spline.ds", "_generated/splinepy.spline.Spline.elevate_degrees", "_generated/splinepy.spline.Spline.evaluate", "_generated/splinepy.spline.Spline.export", "_generated/splinepy.spline.Spline.extract", "_generated/splinepy.spline.Spline.greville_abscissae", "_generated/splinepy.spline.Spline.has_knot_vectors", "_generated/splinepy.spline.Spline.integrate", "_generated/splinepy.spline.Spline.is_rational", "_generated/splinepy.spline.Spline.jacobian", "_generated/splinepy.spline.Spline.knot_multiplicities", "_generated/splinepy.spline.Spline.knot_vectors", "_generated/splinepy.spline.Spline.kvs", "_generated/splinepy.spline.Spline.mapper", "_generated/splinepy.spline.Spline.multi_index", "_generated/splinepy.spline.Spline.name", "_generated/splinepy.spline.Spline.para_dim", "_generated/splinepy.spline.Spline.parametric_bounds", "_generated/splinepy.spline.Spline.proximities", "_generated/splinepy.spline.Spline.reduce_degrees", "_generated/splinepy.spline.Spline.required_properties", "_generated/splinepy.spline.Spline.sample", "_generated/splinepy.spline.Spline.show", "_generated/splinepy.spline.Spline.show_options", "_generated/splinepy.spline.Spline.showable", "_generated/splinepy.spline.Spline.spline_data", "_generated/splinepy.spline.Spline.support", "_generated/splinepy.spline.Spline.todict", "_generated/splinepy.spline.Spline.unique_knots", "_generated/splinepy.spline.Spline.weights", "_generated/splinepy.spline.Spline.whatami", "_generated/splinepy.spline.Spline.ws", "_generated/splinepy.splinepy_core", "_generated/splinepy.splinepy_core.ControlPointPointers", "_generated/splinepy.splinepy_core.ControlPointPointers.dim", "_generated/splinepy.splinepy_core.ControlPointPointers.len", "_generated/splinepy.splinepy_core.ControlPointPointers.set_row", "_generated/splinepy.splinepy_core.ControlPointPointers.set_rows", "_generated/splinepy.splinepy_core.ControlPointPointers.sync", "_generated/splinepy.splinepy_core.ControlPointPointers.sync_rows", "_generated/splinepy.splinepy_core.KnotVector", "_generated/splinepy.splinepy_core.KnotVector.find_span", "_generated/splinepy.splinepy_core.KnotVector.multiplicities", "_generated/splinepy.splinepy_core.KnotVector.numpy", "_generated/splinepy.splinepy_core.KnotVector.scale", "_generated/splinepy.splinepy_core.KnotVector.unique", "_generated/splinepy.splinepy_core.ParameterSpace", "_generated/splinepy.splinepy_core.ParameterSpace.copy", "_generated/splinepy.splinepy_core.ParameterSpace.unique_knots", "_generated/splinepy.splinepy_core.PyMultipatch", "_generated/splinepy.splinepy_core.PyMultipatch.add_fields", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_multipatch", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", "_generated/splinepy.splinepy_core.PyMultipatch.clear", "_generated/splinepy.splinepy_core.PyMultipatch.control_point_offsets", "_generated/splinepy.splinepy_core.PyMultipatch.control_points", "_generated/splinepy.splinepy_core.PyMultipatch.dim", "_generated/splinepy.splinepy_core.PyMultipatch.evaluate", "_generated/splinepy.splinepy_core.PyMultipatch.fields", "_generated/splinepy.splinepy_core.PyMultipatch.get_interfaces", "_generated/splinepy.splinepy_core.PyMultipatch.interface_orientations", "_generated/splinepy.splinepy_core.PyMultipatch.n_default_threads", "_generated/splinepy.splinepy_core.PyMultipatch.name", "_generated/splinepy.splinepy_core.PyMultipatch.para_dim", "_generated/splinepy.splinepy_core.PyMultipatch.patches", "_generated/splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", "_generated/splinepy.splinepy_core.PyMultipatch.sample", "_generated/splinepy.splinepy_core.PyMultipatch.set_interfaces", "_generated/splinepy.splinepy_core.PyMultipatch.sub_multipatch", "_generated/splinepy.splinepy_core.PyMultipatch.sub_patch_centers", "_generated/splinepy.splinepy_core.PyMultipatch.tolerance", "_generated/splinepy.splinepy_core.PyMultipatch.whatami", "_generated/splinepy.splinepy_core.PySpline", "_generated/splinepy.splinepy_core.PySpline.basis", "_generated/splinepy.splinepy_core.PySpline.basis_and_support", "_generated/splinepy.splinepy_core.PySpline.basis_derivative", "_generated/splinepy.splinepy_core.PySpline.basis_derivative_and_support", "_generated/splinepy.splinepy_core.PySpline.control_mesh_resolutions", "_generated/splinepy.splinepy_core.PySpline.current_core_properties", "_generated/splinepy.splinepy_core.PySpline.derivative", "_generated/splinepy.splinepy_core.PySpline.dim", "_generated/splinepy.splinepy_core.PySpline.elevate_degrees", "_generated/splinepy.splinepy_core.PySpline.evaluate", "_generated/splinepy.splinepy_core.PySpline.has_knot_vectors", "_generated/splinepy.splinepy_core.PySpline.is_rational", "_generated/splinepy.splinepy_core.PySpline.jacobian", "_generated/splinepy.splinepy_core.PySpline.name", "_generated/splinepy.splinepy_core.PySpline.para_dim", "_generated/splinepy.splinepy_core.PySpline.parametric_bounds", "_generated/splinepy.splinepy_core.PySpline.proximities", "_generated/splinepy.splinepy_core.PySpline.reduce_degrees", "_generated/splinepy.splinepy_core.PySpline.sample", "_generated/splinepy.splinepy_core.PySpline.support", "_generated/splinepy.splinepy_core.PySpline.whatami", "_generated/splinepy.splinepy_core.WeightPointers", "_generated/splinepy.splinepy_core.WeightPointers.dim", "_generated/splinepy.splinepy_core.WeightPointers.len", "_generated/splinepy.splinepy_core.WeightPointers.set_row", "_generated/splinepy.splinepy_core.WeightPointers.set_rows", "_generated/splinepy.splinepy_core.WeightPointers.sync", "_generated/splinepy.splinepy_core.WeightPointers.sync_rows", "_generated/splinepy.splinepy_core.add", "_generated/splinepy.splinepy_core.annul_core", "_generated/splinepy.splinepy_core.bezier_extraction_matrix", "_generated/splinepy.splinepy_core.boundaries_from_continuity", "_generated/splinepy.splinepy_core.boundary_centers", "_generated/splinepy.splinepy_core.build_type", "_generated/splinepy.splinepy_core.compose", "_generated/splinepy.splinepy_core.compose_sensitivities", "_generated/splinepy.splinepy_core.composition_derivative", "_generated/splinepy.splinepy_core.core_id", "_generated/splinepy.splinepy_core.core_ref_count", "_generated/splinepy.splinepy_core.derivative_spline", "_generated/splinepy.splinepy_core.export_iges", "_generated/splinepy.splinepy_core.extract_all_boundary_splines", "_generated/splinepy.splinepy_core.extract_bezier_patches", "_generated/splinepy.splinepy_core.extract_boundaries", "_generated/splinepy.splinepy_core.extract_dim", "_generated/splinepy.splinepy_core.global_knot_insertion_matrix", "_generated/splinepy.splinepy_core.has_core", "_generated/splinepy.splinepy_core.insert_knots", "_generated/splinepy.splinepy_core.interfaces_from_boundary_centers", "_generated/splinepy.splinepy_core.is_minimal", "_generated/splinepy.splinepy_core.knot_insertion_matrix", "_generated/splinepy.splinepy_core.multiply", "_generated/splinepy.splinepy_core.null_spline", "_generated/splinepy.splinepy_core.read_iges", "_generated/splinepy.splinepy_core.remove_knots", "_generated/splinepy.splinepy_core.same_spline_with_knot_vectors", "_generated/splinepy.splinepy_core.split", "_generated/splinepy.to_derived", "_generated/splinepy.utils", "_generated/splinepy.utils.data", "_generated/splinepy.utils.data.MultipatchData", "_generated/splinepy.utils.data.MultipatchData.as_arrow", "_generated/splinepy.utils.data.MultipatchData.as_scalar", "_generated/splinepy.utils.data.MultipatchData.clear", "_generated/splinepy.utils.data.MultipatchData.get", "_generated/splinepy.utils.data.MultipatchData.items", "_generated/splinepy.utils.data.MultipatchData.keys", "_generated/splinepy.utils.data.MultipatchData.pop", "_generated/splinepy.utils.data.MultipatchData.update", "_generated/splinepy.utils.data.MultipatchData.values", "_generated/splinepy.utils.data.PhysicalSpaceArray", "_generated/splinepy.utils.data.PhysicalSpaceArray.all", "_generated/splinepy.utils.data.PhysicalSpaceArray.any", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmax", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmin", "_generated/splinepy.utils.data.PhysicalSpaceArray.argpartition", "_generated/splinepy.utils.data.PhysicalSpaceArray.argsort", "_generated/splinepy.utils.data.PhysicalSpaceArray.astype", "_generated/splinepy.utils.data.PhysicalSpaceArray.byteswap", "_generated/splinepy.utils.data.PhysicalSpaceArray.choose", "_generated/splinepy.utils.data.PhysicalSpaceArray.clip", "_generated/splinepy.utils.data.PhysicalSpaceArray.compress", "_generated/splinepy.utils.data.PhysicalSpaceArray.conj", "_generated/splinepy.utils.data.PhysicalSpaceArray.conjugate", "_generated/splinepy.utils.data.PhysicalSpaceArray.copy", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumprod", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumsum", "_generated/splinepy.utils.data.PhysicalSpaceArray.diagonal", "_generated/splinepy.utils.data.PhysicalSpaceArray.dot", "_generated/splinepy.utils.data.PhysicalSpaceArray.dump", "_generated/splinepy.utils.data.PhysicalSpaceArray.dumps", "_generated/splinepy.utils.data.PhysicalSpaceArray.fill", "_generated/splinepy.utils.data.PhysicalSpaceArray.flatten", "_generated/splinepy.utils.data.PhysicalSpaceArray.full_row_indices", "_generated/splinepy.utils.data.PhysicalSpaceArray.getfield", "_generated/splinepy.utils.data.PhysicalSpaceArray.item", "_generated/splinepy.utils.data.PhysicalSpaceArray.max", "_generated/splinepy.utils.data.PhysicalSpaceArray.mean", "_generated/splinepy.utils.data.PhysicalSpaceArray.min", "_generated/splinepy.utils.data.PhysicalSpaceArray.nonzero", "_generated/splinepy.utils.data.PhysicalSpaceArray.partition", "_generated/splinepy.utils.data.PhysicalSpaceArray.prod", "_generated/splinepy.utils.data.PhysicalSpaceArray.put", "_generated/splinepy.utils.data.PhysicalSpaceArray.ravel", "_generated/splinepy.utils.data.PhysicalSpaceArray.repeat", "_generated/splinepy.utils.data.PhysicalSpaceArray.reshape", "_generated/splinepy.utils.data.PhysicalSpaceArray.resize", "_generated/splinepy.utils.data.PhysicalSpaceArray.round", "_generated/splinepy.utils.data.PhysicalSpaceArray.row_indices", "_generated/splinepy.utils.data.PhysicalSpaceArray.searchsorted", "_generated/splinepy.utils.data.PhysicalSpaceArray.setfield", "_generated/splinepy.utils.data.PhysicalSpaceArray.setflags", "_generated/splinepy.utils.data.PhysicalSpaceArray.sort", "_generated/splinepy.utils.data.PhysicalSpaceArray.squeeze", "_generated/splinepy.utils.data.PhysicalSpaceArray.std", "_generated/splinepy.utils.data.PhysicalSpaceArray.sum", "_generated/splinepy.utils.data.PhysicalSpaceArray.swapaxes", "_generated/splinepy.utils.data.PhysicalSpaceArray.take", "_generated/splinepy.utils.data.PhysicalSpaceArray.to_device", "_generated/splinepy.utils.data.PhysicalSpaceArray.tobytes", "_generated/splinepy.utils.data.PhysicalSpaceArray.tofile", "_generated/splinepy.utils.data.PhysicalSpaceArray.tolist", "_generated/splinepy.utils.data.PhysicalSpaceArray.tostring", "_generated/splinepy.utils.data.PhysicalSpaceArray.trace", "_generated/splinepy.utils.data.PhysicalSpaceArray.transpose", "_generated/splinepy.utils.data.PhysicalSpaceArray.var", "_generated/splinepy.utils.data.PhysicalSpaceArray.view", "_generated/splinepy.utils.data.SplineData", "_generated/splinepy.utils.data.SplineData.as_arrow", "_generated/splinepy.utils.data.SplineData.as_scalar", "_generated/splinepy.utils.data.SplineData.clear", "_generated/splinepy.utils.data.SplineData.get", "_generated/splinepy.utils.data.SplineData.items", "_generated/splinepy.utils.data.SplineData.keys", "_generated/splinepy.utils.data.SplineData.pop", "_generated/splinepy.utils.data.SplineData.update", "_generated/splinepy.utils.data.SplineData.values", "_generated/splinepy.utils.data.SplineDataAdaptor", "_generated/splinepy.utils.data.SplineDataAdaptor.arrow_data_only", "_generated/splinepy.utils.data.SplineDataAdaptor.as_vertex_data", "_generated/splinepy.utils.data.SplineDataAdaptor.data", "_generated/splinepy.utils.data.SplineDataAdaptor.function", "_generated/splinepy.utils.data.SplineDataAdaptor.has_evaluate", "_generated/splinepy.utils.data.SplineDataAdaptor.has_function", "_generated/splinepy.utils.data.SplineDataAdaptor.has_locations", "_generated/splinepy.utils.data.SplineDataAdaptor.is_spline", "_generated/splinepy.utils.data.SplineDataAdaptor.locations", "_generated/splinepy.utils.data.SplineDataAdaptor.parametric_bounds", "_generated/splinepy.utils.data.cartesian_product", "_generated/splinepy.utils.data.enforce_contiguous", "_generated/splinepy.utils.data.enforce_contiguous_values", "_generated/splinepy.utils.data.make_matrix", "_generated/splinepy.utils.data.uniform_query", "_generated/splinepy.utils.log", "_generated/splinepy.utils.log.configure", "_generated/splinepy.utils.log.debug", "_generated/splinepy.utils.log.error", "_generated/splinepy.utils.log.info", "_generated/splinepy.utils.log.prepend_log", "_generated/splinepy.utils.log.warning", "api_reference", "index", "python_api", "spline_intro"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["CONTRIBUTING.rst", "_generated/splinepy.rst", "_generated/splinepy.bezier.rst", "_generated/splinepy.bezier.Bezier.rst", "_generated/splinepy.bezier.Bezier.basis.rst", "_generated/splinepy.bezier.Bezier.basis_and_support.rst", "_generated/splinepy.bezier.Bezier.basis_derivative.rst", "_generated/splinepy.bezier.Bezier.basis_derivative_and_support.rst", "_generated/splinepy.bezier.Bezier.bezier.rst", "_generated/splinepy.bezier.Bezier.bspline.rst", "_generated/splinepy.bezier.Bezier.clear.rst", "_generated/splinepy.bezier.Bezier.compose.rst", "_generated/splinepy.bezier.Bezier.composition_derivative.rst", "_generated/splinepy.bezier.Bezier.copy.rst", "_generated/splinepy.bezier.Bezier.current_core_properties.rst", "_generated/splinepy.bezier.Bezier.derivative.rst", "_generated/splinepy.bezier.Bezier.derivative_spline.rst", "_generated/splinepy.bezier.Bezier.elevate_degrees.rst", "_generated/splinepy.bezier.Bezier.evaluate.rst", "_generated/splinepy.bezier.Bezier.export.rst", "_generated/splinepy.bezier.Bezier.extract_dim.rst", "_generated/splinepy.bezier.Bezier.greville_abscissae.rst", "_generated/splinepy.bezier.Bezier.jacobian.rst", "_generated/splinepy.bezier.Bezier.mapper.rst", "_generated/splinepy.bezier.Bezier.nurbs.rst", "_generated/splinepy.bezier.Bezier.proximities.rst", "_generated/splinepy.bezier.Bezier.rationalbezier.rst", "_generated/splinepy.bezier.Bezier.reduce_degrees.rst", "_generated/splinepy.bezier.Bezier.sample.rst", "_generated/splinepy.bezier.Bezier.show.rst", "_generated/splinepy.bezier.Bezier.showable.rst", "_generated/splinepy.bezier.Bezier.split.rst", "_generated/splinepy.bezier.Bezier.support.rst", "_generated/splinepy.bezier.Bezier.todict.rst", "_generated/splinepy.bezier.BezierBase.rst", "_generated/splinepy.bezier.BezierBase.basis.rst", "_generated/splinepy.bezier.BezierBase.basis_and_support.rst", "_generated/splinepy.bezier.BezierBase.basis_derivative.rst", "_generated/splinepy.bezier.BezierBase.basis_derivative_and_support.rst", "_generated/splinepy.bezier.BezierBase.clear.rst", "_generated/splinepy.bezier.BezierBase.compose.rst", "_generated/splinepy.bezier.BezierBase.composition_derivative.rst", "_generated/splinepy.bezier.BezierBase.copy.rst", "_generated/splinepy.bezier.BezierBase.current_core_properties.rst", "_generated/splinepy.bezier.BezierBase.derivative.rst", "_generated/splinepy.bezier.BezierBase.derivative_spline.rst", "_generated/splinepy.bezier.BezierBase.elevate_degrees.rst", "_generated/splinepy.bezier.BezierBase.evaluate.rst", "_generated/splinepy.bezier.BezierBase.export.rst", "_generated/splinepy.bezier.BezierBase.extract_dim.rst", "_generated/splinepy.bezier.BezierBase.greville_abscissae.rst", "_generated/splinepy.bezier.BezierBase.jacobian.rst", "_generated/splinepy.bezier.BezierBase.mapper.rst", "_generated/splinepy.bezier.BezierBase.proximities.rst", "_generated/splinepy.bezier.BezierBase.reduce_degrees.rst", "_generated/splinepy.bezier.BezierBase.sample.rst", "_generated/splinepy.bezier.BezierBase.show.rst", "_generated/splinepy.bezier.BezierBase.showable.rst", "_generated/splinepy.bezier.BezierBase.split.rst", "_generated/splinepy.bezier.BezierBase.support.rst", "_generated/splinepy.bezier.BezierBase.todict.rst", "_generated/splinepy.bspline.rst", "_generated/splinepy.bspline.BSpline.rst", "_generated/splinepy.bspline.BSpline.basis.rst", "_generated/splinepy.bspline.BSpline.basis_and_support.rst", "_generated/splinepy.bspline.BSpline.basis_derivative.rst", "_generated/splinepy.bspline.BSpline.basis_derivative_and_support.rst", "_generated/splinepy.bspline.BSpline.bspline.rst", "_generated/splinepy.bspline.BSpline.clear.rst", "_generated/splinepy.bspline.BSpline.copy.rst", "_generated/splinepy.bspline.BSpline.current_core_properties.rst", "_generated/splinepy.bspline.BSpline.derivative.rst", "_generated/splinepy.bspline.BSpline.elevate_degrees.rst", "_generated/splinepy.bspline.BSpline.evaluate.rst", "_generated/splinepy.bspline.BSpline.export.rst", "_generated/splinepy.bspline.BSpline.extract_bezier_patches.rst", "_generated/splinepy.bspline.BSpline.greville_abscissae.rst", "_generated/splinepy.bspline.BSpline.insert_knots.rst", "_generated/splinepy.bspline.BSpline.jacobian.rst", "_generated/splinepy.bspline.BSpline.knot_insertion_matrix.rst", "_generated/splinepy.bspline.BSpline.mapper.rst", "_generated/splinepy.bspline.BSpline.normalize_knot_vectors.rst", "_generated/splinepy.bspline.BSpline.nurbs.rst", "_generated/splinepy.bspline.BSpline.proximities.rst", "_generated/splinepy.bspline.BSpline.reduce_degrees.rst", "_generated/splinepy.bspline.BSpline.remove_knots.rst", "_generated/splinepy.bspline.BSpline.sample.rst", "_generated/splinepy.bspline.BSpline.show.rst", "_generated/splinepy.bspline.BSpline.showable.rst", "_generated/splinepy.bspline.BSpline.support.rst", "_generated/splinepy.bspline.BSpline.todict.rst", "_generated/splinepy.bspline.BSpline.uniform_refine.rst", "_generated/splinepy.bspline.BSplineBase.rst", "_generated/splinepy.bspline.BSplineBase.basis.rst", "_generated/splinepy.bspline.BSplineBase.basis_and_support.rst", "_generated/splinepy.bspline.BSplineBase.basis_derivative.rst", "_generated/splinepy.bspline.BSplineBase.basis_derivative_and_support.rst", "_generated/splinepy.bspline.BSplineBase.clear.rst", "_generated/splinepy.bspline.BSplineBase.copy.rst", "_generated/splinepy.bspline.BSplineBase.current_core_properties.rst", "_generated/splinepy.bspline.BSplineBase.derivative.rst", "_generated/splinepy.bspline.BSplineBase.elevate_degrees.rst", "_generated/splinepy.bspline.BSplineBase.evaluate.rst", "_generated/splinepy.bspline.BSplineBase.export.rst", "_generated/splinepy.bspline.BSplineBase.extract_bezier_patches.rst", "_generated/splinepy.bspline.BSplineBase.greville_abscissae.rst", "_generated/splinepy.bspline.BSplineBase.insert_knots.rst", "_generated/splinepy.bspline.BSplineBase.jacobian.rst", "_generated/splinepy.bspline.BSplineBase.knot_insertion_matrix.rst", "_generated/splinepy.bspline.BSplineBase.mapper.rst", "_generated/splinepy.bspline.BSplineBase.normalize_knot_vectors.rst", "_generated/splinepy.bspline.BSplineBase.proximities.rst", "_generated/splinepy.bspline.BSplineBase.reduce_degrees.rst", "_generated/splinepy.bspline.BSplineBase.remove_knots.rst", "_generated/splinepy.bspline.BSplineBase.sample.rst", "_generated/splinepy.bspline.BSplineBase.show.rst", "_generated/splinepy.bspline.BSplineBase.showable.rst", "_generated/splinepy.bspline.BSplineBase.support.rst", "_generated/splinepy.bspline.BSplineBase.todict.rst", "_generated/splinepy.bspline.BSplineBase.uniform_refine.rst", "_generated/splinepy.cli.rst", "_generated/splinepy.cli.convert.rst", "_generated/splinepy.cli.entry.rst", "_generated/splinepy.cli.show.rst", "_generated/splinepy.helpme.rst", "_generated/splinepy.helpme.check.rst", "_generated/splinepy.helpme.check.Checker.rst", "_generated/splinepy.helpme.check.Checker.clamped_knot_vectors.rst", "_generated/splinepy.helpme.check.Checker.valid_queries.rst", "_generated/splinepy.helpme.check.clamped_knot_vectors.rst", "_generated/splinepy.helpme.check.valid_queries.rst", "_generated/splinepy.helpme.create.rst", "_generated/splinepy.helpme.create.Creator.rst", "_generated/splinepy.helpme.create.Creator.determinant_spline.rst", "_generated/splinepy.helpme.create.Creator.embedded.rst", "_generated/splinepy.helpme.create.Creator.extruded.rst", "_generated/splinepy.helpme.create.Creator.parametric_view.rst", "_generated/splinepy.helpme.create.Creator.revolved.rst", "_generated/splinepy.helpme.create.arc.rst", "_generated/splinepy.helpme.create.box.rst", "_generated/splinepy.helpme.create.circle.rst", "_generated/splinepy.helpme.create.cone.rst", "_generated/splinepy.helpme.create.determinant_spline.rst", "_generated/splinepy.helpme.create.disk.rst", "_generated/splinepy.helpme.create.embedded.rst", "_generated/splinepy.helpme.create.extruded.rst", "_generated/splinepy.helpme.create.from_bounds.rst", "_generated/splinepy.helpme.create.line.rst", "_generated/splinepy.helpme.create.parametric_view.rst", "_generated/splinepy.helpme.create.plate.rst", "_generated/splinepy.helpme.create.pyramid.rst", "_generated/splinepy.helpme.create.revolved.rst", "_generated/splinepy.helpme.create.sphere.rst", "_generated/splinepy.helpme.create.surface_circle.rst", "_generated/splinepy.helpme.create.torus.rst", "_generated/splinepy.helpme.extract.rst", "_generated/splinepy.helpme.extract.Extractor.rst", "_generated/splinepy.helpme.extract.Extractor.arrow_data.rst", "_generated/splinepy.helpme.extract.Extractor.bases.rst", "_generated/splinepy.helpme.extract.Extractor.beziers.rst", "_generated/splinepy.helpme.extract.Extractor.boundaries.rst", "_generated/splinepy.helpme.extract.Extractor.control_edges.rst", "_generated/splinepy.helpme.extract.Extractor.control_faces.rst", "_generated/splinepy.helpme.extract.Extractor.control_mesh.rst", "_generated/splinepy.helpme.extract.Extractor.control_points.rst", "_generated/splinepy.helpme.extract.Extractor.control_volumes.rst", "_generated/splinepy.helpme.extract.Extractor.edges.rst", "_generated/splinepy.helpme.extract.Extractor.faces.rst", "_generated/splinepy.helpme.extract.Extractor.spline.rst", "_generated/splinepy.helpme.extract.Extractor.volumes.rst", "_generated/splinepy.helpme.extract.arrow_data.rst", "_generated/splinepy.helpme.extract.bases.rst", "_generated/splinepy.helpme.extract.boundaries.rst", "_generated/splinepy.helpme.extract.control_edges.rst", "_generated/splinepy.helpme.extract.control_faces.rst", "_generated/splinepy.helpme.extract.control_mesh.rst", "_generated/splinepy.helpme.extract.control_points.rst", "_generated/splinepy.helpme.extract.control_volumes.rst", "_generated/splinepy.helpme.extract.edges.rst", "_generated/splinepy.helpme.extract.faces.rst", "_generated/splinepy.helpme.extract.spline.rst", "_generated/splinepy.helpme.extract.volumes.rst", "_generated/splinepy.helpme.ffd.rst", "_generated/splinepy.helpme.ffd.FFD.rst", "_generated/splinepy.helpme.ffd.FFD.mesh.rst", "_generated/splinepy.helpme.ffd.FFD.padding.rst", "_generated/splinepy.helpme.ffd.FFD.show.rst", "_generated/splinepy.helpme.ffd.FFD.showable.rst", "_generated/splinepy.helpme.ffd.FFD.spline.rst", "_generated/splinepy.helpme.fit.rst", "_generated/splinepy.helpme.fit.compute_knot_vector.rst", "_generated/splinepy.helpme.fit.curve.rst", "_generated/splinepy.helpme.fit.parameterize.rst", "_generated/splinepy.helpme.fit.solve_for_control_points.rst", "_generated/splinepy.helpme.fit.surface.rst", "_generated/splinepy.helpme.integrate.rst", "_generated/splinepy.helpme.integrate.Integrator.rst", "_generated/splinepy.helpme.integrate.Integrator.parametric_function.rst", "_generated/splinepy.helpme.integrate.Integrator.volume.rst", "_generated/splinepy.helpme.integrate.parametric_function.rst", "_generated/splinepy.helpme.integrate.physical_function.rst", "_generated/splinepy.helpme.integrate.volume.rst", "_generated/splinepy.helpme.mapper.rst", "_generated/splinepy.helpme.mapper.Mapper.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_function_derivatives.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_gradient_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_hessian_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_laplacian_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.divergence.rst", "_generated/splinepy.helpme.mapper.Mapper.field_derivatives.rst", "_generated/splinepy.helpme.mapper.Mapper.gradient.rst", "_generated/splinepy.helpme.mapper.Mapper.hessian.rst", "_generated/splinepy.helpme.mapper.Mapper.laplacian.rst", "_generated/splinepy.helpme.multi_index.rst", "_generated/splinepy.helpme.multi_index.MultiIndex.rst", "_generated/splinepy.helpme.reparametrize.rst", "_generated/splinepy.helpme.reparametrize.flip_axes.rst", "_generated/splinepy.helpme.reparametrize.permute_parametric_axes.rst", "_generated/splinepy.helpme.visualize.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.clear.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.get.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.items.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.keys.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.pop.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.update.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.valid_keys.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.values.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.clear.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.copy_valid_options.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.get.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.items.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.keys.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.pop.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.update.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.valid_keys.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.values.rst", "_generated/splinepy.helpme.visualize.make_showable.rst", "_generated/splinepy.helpme.visualize.show.rst", "_generated/splinepy.io.rst", "_generated/splinepy.io.cats.rst", "_generated/splinepy.io.cats.export.rst", "_generated/splinepy.io.cats.load.rst", "_generated/splinepy.io.default.rst", "_generated/splinepy.io.default.export.rst", "_generated/splinepy.io.default.load.rst", "_generated/splinepy.io.gismo.rst", "_generated/splinepy.io.gismo.export.rst", "_generated/splinepy.io.gismo.load.rst", "_generated/splinepy.io.iges.rst", "_generated/splinepy.io.iges.export.rst", "_generated/splinepy.io.iges.load.rst", "_generated/splinepy.io.ioutils.rst", "_generated/splinepy.io.ioutils.abs_fname.rst", "_generated/splinepy.io.ioutils.dict_to_spline.rst", "_generated/splinepy.io.ioutils.expand_tabs.rst", "_generated/splinepy.io.ioutils.form_lines.rst", "_generated/splinepy.io.ioutils.make_meaningful.rst", "_generated/splinepy.io.ioutils.next_line.rst", "_generated/splinepy.io.irit.rst", "_generated/splinepy.io.irit.export.rst", "_generated/splinepy.io.irit.load.rst", "_generated/splinepy.io.json.rst", "_generated/splinepy.io.json.export.rst", "_generated/splinepy.io.json.load.rst", "_generated/splinepy.io.mfem.rst", "_generated/splinepy.io.mfem.dof_mapping.rst", "_generated/splinepy.io.mfem.export.rst", "_generated/splinepy.io.mfem.export_cartesian.rst", "_generated/splinepy.io.mfem.load.rst", "_generated/splinepy.io.mfem.read_solution.rst", "_generated/splinepy.io.npz.rst", "_generated/splinepy.io.npz.export.rst", "_generated/splinepy.io.npz.load.rst", "_generated/splinepy.io.svg.rst", "_generated/splinepy.io.svg.export.rst", "_generated/splinepy.microstructure.rst", "_generated/splinepy.microstructure.microstructure.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.create.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.deformation_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.microtile.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.parametrization_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.show.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.tiling.rst", "_generated/splinepy.microstructure.tiles.rst", "_generated/splinepy.microstructure.tiles.armadillo.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_params.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.create_tile.rst", "_generated/splinepy.microstructure.tiles.by_dim.rst", "_generated/splinepy.microstructure.tiles.chi.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.check_params.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_2d.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_3d.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile.rst", "_generated/splinepy.microstructure.tiles.cube_void.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_params.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile.rst", "_generated/splinepy.microstructure.tiles.double_lattice.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile.rst", "_generated/splinepy.microstructure.tiles.everything.rst", "_generated/splinepy.microstructure.tiles.get.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile.rst", "_generated/splinepy.microstructure.tiles.show.rst", "_generated/splinepy.microstructure.tiles.snappy.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_params.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.create_tile.rst", "_generated/splinepy.microstructure.tiles.tile_base.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_params.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.create_tile.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.dim.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.para_dim.rst", "_generated/splinepy.multipatch.rst", "_generated/splinepy.multipatch.Multipatch.rst", "_generated/splinepy.multipatch.Multipatch.add_fields.rst", "_generated/splinepy.multipatch.Multipatch.boundaries.rst", "_generated/splinepy.multipatch.Multipatch.boundaries_from_continuity.rst", "_generated/splinepy.multipatch.Multipatch.boundary_from_function.rst", "_generated/splinepy.multipatch.Multipatch.boundary_multipatch.rst", "_generated/splinepy.multipatch.Multipatch.boundary_patch_ids.rst", "_generated/splinepy.multipatch.Multipatch.clear.rst", "_generated/splinepy.multipatch.Multipatch.combine_boundaries.rst", "_generated/splinepy.multipatch.Multipatch.control_point_offsets.rst", "_generated/splinepy.multipatch.Multipatch.determine_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.dim.rst", "_generated/splinepy.multipatch.Multipatch.evaluate.rst", "_generated/splinepy.multipatch.Multipatch.extract.rst", "_generated/splinepy.multipatch.Multipatch.fields.rst", "_generated/splinepy.multipatch.Multipatch.get_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.interface_orientations.rst", "_generated/splinepy.multipatch.Multipatch.interfaces.rst", "_generated/splinepy.multipatch.Multipatch.para_dim.rst", "_generated/splinepy.multipatch.Multipatch.patches.rst", "_generated/splinepy.multipatch.Multipatch.sample.rst", "_generated/splinepy.multipatch.Multipatch.set_boundary.rst", "_generated/splinepy.multipatch.Multipatch.set_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.show.rst", "_generated/splinepy.multipatch.Multipatch.show_options.rst", "_generated/splinepy.multipatch.Multipatch.showable.rst", "_generated/splinepy.multipatch.Multipatch.spline_data.rst", "_generated/splinepy.multipatch.Multipatch.sub_multipatch.rst", "_generated/splinepy.multipatch.Multipatch.sub_patch_centers.rst", "_generated/splinepy.nurbs.rst", "_generated/splinepy.nurbs.NURBS.rst", "_generated/splinepy.nurbs.NURBS.basis.rst", "_generated/splinepy.nurbs.NURBS.basis_and_support.rst", "_generated/splinepy.nurbs.NURBS.basis_derivative.rst", "_generated/splinepy.nurbs.NURBS.basis_derivative_and_support.rst", "_generated/splinepy.nurbs.NURBS.clear.rst", "_generated/splinepy.nurbs.NURBS.copy.rst", "_generated/splinepy.nurbs.NURBS.current_core_properties.rst", "_generated/splinepy.nurbs.NURBS.derivative.rst", "_generated/splinepy.nurbs.NURBS.elevate_degrees.rst", "_generated/splinepy.nurbs.NURBS.evaluate.rst", "_generated/splinepy.nurbs.NURBS.export.rst", "_generated/splinepy.nurbs.NURBS.extract_bezier_patches.rst", "_generated/splinepy.nurbs.NURBS.greville_abscissae.rst", "_generated/splinepy.nurbs.NURBS.insert_knots.rst", "_generated/splinepy.nurbs.NURBS.jacobian.rst", "_generated/splinepy.nurbs.NURBS.knot_insertion_matrix.rst", "_generated/splinepy.nurbs.NURBS.mapper.rst", "_generated/splinepy.nurbs.NURBS.normalize_knot_vectors.rst", "_generated/splinepy.nurbs.NURBS.nurbs.rst", "_generated/splinepy.nurbs.NURBS.proximities.rst", "_generated/splinepy.nurbs.NURBS.reduce_degrees.rst", "_generated/splinepy.nurbs.NURBS.remove_knots.rst", "_generated/splinepy.nurbs.NURBS.sample.rst", "_generated/splinepy.nurbs.NURBS.show.rst", "_generated/splinepy.nurbs.NURBS.showable.rst", "_generated/splinepy.nurbs.NURBS.support.rst", "_generated/splinepy.nurbs.NURBS.todict.rst", "_generated/splinepy.nurbs.NURBS.uniform_refine.rst", "_generated/splinepy.rational_bezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_and_support.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative_and_support.rst", "_generated/splinepy.rational_bezier.RationalBezier.clear.rst", "_generated/splinepy.rational_bezier.RationalBezier.compose.rst", "_generated/splinepy.rational_bezier.RationalBezier.composition_derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.copy.rst", "_generated/splinepy.rational_bezier.RationalBezier.current_core_properties.rst", "_generated/splinepy.rational_bezier.RationalBezier.derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.derivative_spline.rst", "_generated/splinepy.rational_bezier.RationalBezier.elevate_degrees.rst", "_generated/splinepy.rational_bezier.RationalBezier.evaluate.rst", "_generated/splinepy.rational_bezier.RationalBezier.export.rst", "_generated/splinepy.rational_bezier.RationalBezier.extract_dim.rst", "_generated/splinepy.rational_bezier.RationalBezier.greville_abscissae.rst", "_generated/splinepy.rational_bezier.RationalBezier.jacobian.rst", "_generated/splinepy.rational_bezier.RationalBezier.mapper.rst", "_generated/splinepy.rational_bezier.RationalBezier.nurbs.rst", "_generated/splinepy.rational_bezier.RationalBezier.proximities.rst", "_generated/splinepy.rational_bezier.RationalBezier.rationalbezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.reduce_degrees.rst", "_generated/splinepy.rational_bezier.RationalBezier.sample.rst", "_generated/splinepy.rational_bezier.RationalBezier.show.rst", "_generated/splinepy.rational_bezier.RationalBezier.showable.rst", "_generated/splinepy.rational_bezier.RationalBezier.split.rst", "_generated/splinepy.rational_bezier.RationalBezier.support.rst", "_generated/splinepy.rational_bezier.RationalBezier.todict.rst", "_generated/splinepy.settings.rst", "_generated/splinepy.settings.CHECK_BOUNDS.rst", "_generated/splinepy.settings.NAME_TO_TYPE.rst", "_generated/splinepy.settings.NTHREADS.rst", "_generated/splinepy.settings.TOLERANCE.rst", "_generated/splinepy.spline.rst", "_generated/splinepy.spline.RequiredProperties.rst", "_generated/splinepy.spline.RequiredProperties.intersection.rst", "_generated/splinepy.spline.RequiredProperties.of.rst", "_generated/splinepy.spline.RequiredProperties.union.rst", "_generated/splinepy.spline.Spline.rst", "_generated/splinepy.spline.Spline.basis.rst", "_generated/splinepy.spline.Spline.basis_and_support.rst", "_generated/splinepy.spline.Spline.basis_derivative.rst", "_generated/splinepy.spline.Spline.basis_derivative_and_support.rst", "_generated/splinepy.spline.Spline.check.rst", "_generated/splinepy.spline.Spline.clear.rst", "_generated/splinepy.spline.Spline.control_mesh_resolutions.rst", "_generated/splinepy.spline.Spline.control_point_bounds.rst", "_generated/splinepy.spline.Spline.control_points.rst", "_generated/splinepy.spline.Spline.copy.rst", "_generated/splinepy.spline.Spline.cps.rst", "_generated/splinepy.spline.Spline.create.rst", "_generated/splinepy.spline.Spline.current_core_properties.rst", "_generated/splinepy.spline.Spline.degrees.rst", "_generated/splinepy.spline.Spline.derivative.rst", "_generated/splinepy.spline.Spline.dim.rst", "_generated/splinepy.spline.Spline.ds.rst", "_generated/splinepy.spline.Spline.elevate_degrees.rst", "_generated/splinepy.spline.Spline.evaluate.rst", "_generated/splinepy.spline.Spline.export.rst", "_generated/splinepy.spline.Spline.extract.rst", "_generated/splinepy.spline.Spline.greville_abscissae.rst", "_generated/splinepy.spline.Spline.has_knot_vectors.rst", "_generated/splinepy.spline.Spline.integrate.rst", "_generated/splinepy.spline.Spline.is_rational.rst", "_generated/splinepy.spline.Spline.jacobian.rst", "_generated/splinepy.spline.Spline.knot_multiplicities.rst", "_generated/splinepy.spline.Spline.knot_vectors.rst", "_generated/splinepy.spline.Spline.kvs.rst", "_generated/splinepy.spline.Spline.mapper.rst", "_generated/splinepy.spline.Spline.multi_index.rst", "_generated/splinepy.spline.Spline.name.rst", "_generated/splinepy.spline.Spline.para_dim.rst", "_generated/splinepy.spline.Spline.parametric_bounds.rst", "_generated/splinepy.spline.Spline.proximities.rst", "_generated/splinepy.spline.Spline.reduce_degrees.rst", "_generated/splinepy.spline.Spline.required_properties.rst", "_generated/splinepy.spline.Spline.sample.rst", "_generated/splinepy.spline.Spline.show.rst", "_generated/splinepy.spline.Spline.show_options.rst", "_generated/splinepy.spline.Spline.showable.rst", "_generated/splinepy.spline.Spline.spline_data.rst", "_generated/splinepy.spline.Spline.support.rst", "_generated/splinepy.spline.Spline.todict.rst", "_generated/splinepy.spline.Spline.unique_knots.rst", "_generated/splinepy.spline.Spline.weights.rst", "_generated/splinepy.spline.Spline.whatami.rst", "_generated/splinepy.spline.Spline.ws.rst", "_generated/splinepy.splinepy_core.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.dim.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.len.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.set_row.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.set_rows.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.sync.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.sync_rows.rst", "_generated/splinepy.splinepy_core.KnotVector.rst", "_generated/splinepy.splinepy_core.KnotVector.find_span.rst", "_generated/splinepy.splinepy_core.KnotVector.multiplicities.rst", "_generated/splinepy.splinepy_core.KnotVector.numpy.rst", "_generated/splinepy.splinepy_core.KnotVector.scale.rst", "_generated/splinepy.splinepy_core.KnotVector.unique.rst", "_generated/splinepy.splinepy_core.ParameterSpace.rst", "_generated/splinepy.splinepy_core.ParameterSpace.copy.rst", "_generated/splinepy.splinepy_core.ParameterSpace.unique_knots.rst", "_generated/splinepy.splinepy_core.PyMultipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.add_fields.rst", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_multipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_patch_ids.rst", "_generated/splinepy.splinepy_core.PyMultipatch.clear.rst", "_generated/splinepy.splinepy_core.PyMultipatch.control_point_offsets.rst", "_generated/splinepy.splinepy_core.PyMultipatch.control_points.rst", "_generated/splinepy.splinepy_core.PyMultipatch.dim.rst", "_generated/splinepy.splinepy_core.PyMultipatch.evaluate.rst", "_generated/splinepy.splinepy_core.PyMultipatch.fields.rst", "_generated/splinepy.splinepy_core.PyMultipatch.get_interfaces.rst", "_generated/splinepy.splinepy_core.PyMultipatch.interface_orientations.rst", "_generated/splinepy.splinepy_core.PyMultipatch.n_default_threads.rst", "_generated/splinepy.splinepy_core.PyMultipatch.name.rst", "_generated/splinepy.splinepy_core.PyMultipatch.para_dim.rst", "_generated/splinepy.splinepy_core.PyMultipatch.patches.rst", "_generated/splinepy.splinepy_core.PyMultipatch.same_parametric_bounds.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sample.rst", "_generated/splinepy.splinepy_core.PyMultipatch.set_interfaces.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sub_multipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sub_patch_centers.rst", "_generated/splinepy.splinepy_core.PyMultipatch.tolerance.rst", "_generated/splinepy.splinepy_core.PyMultipatch.whatami.rst", "_generated/splinepy.splinepy_core.PySpline.rst", "_generated/splinepy.splinepy_core.PySpline.basis.rst", "_generated/splinepy.splinepy_core.PySpline.basis_and_support.rst", "_generated/splinepy.splinepy_core.PySpline.basis_derivative.rst", "_generated/splinepy.splinepy_core.PySpline.basis_derivative_and_support.rst", "_generated/splinepy.splinepy_core.PySpline.control_mesh_resolutions.rst", "_generated/splinepy.splinepy_core.PySpline.current_core_properties.rst", "_generated/splinepy.splinepy_core.PySpline.derivative.rst", "_generated/splinepy.splinepy_core.PySpline.dim.rst", "_generated/splinepy.splinepy_core.PySpline.elevate_degrees.rst", "_generated/splinepy.splinepy_core.PySpline.evaluate.rst", "_generated/splinepy.splinepy_core.PySpline.has_knot_vectors.rst", "_generated/splinepy.splinepy_core.PySpline.is_rational.rst", "_generated/splinepy.splinepy_core.PySpline.jacobian.rst", "_generated/splinepy.splinepy_core.PySpline.name.rst", "_generated/splinepy.splinepy_core.PySpline.para_dim.rst", "_generated/splinepy.splinepy_core.PySpline.parametric_bounds.rst", "_generated/splinepy.splinepy_core.PySpline.proximities.rst", "_generated/splinepy.splinepy_core.PySpline.reduce_degrees.rst", "_generated/splinepy.splinepy_core.PySpline.sample.rst", "_generated/splinepy.splinepy_core.PySpline.support.rst", "_generated/splinepy.splinepy_core.PySpline.whatami.rst", "_generated/splinepy.splinepy_core.WeightPointers.rst", "_generated/splinepy.splinepy_core.WeightPointers.dim.rst", "_generated/splinepy.splinepy_core.WeightPointers.len.rst", "_generated/splinepy.splinepy_core.WeightPointers.set_row.rst", "_generated/splinepy.splinepy_core.WeightPointers.set_rows.rst", "_generated/splinepy.splinepy_core.WeightPointers.sync.rst", "_generated/splinepy.splinepy_core.WeightPointers.sync_rows.rst", "_generated/splinepy.splinepy_core.add.rst", "_generated/splinepy.splinepy_core.annul_core.rst", "_generated/splinepy.splinepy_core.bezier_extraction_matrix.rst", "_generated/splinepy.splinepy_core.boundaries_from_continuity.rst", "_generated/splinepy.splinepy_core.boundary_centers.rst", "_generated/splinepy.splinepy_core.build_type.rst", "_generated/splinepy.splinepy_core.compose.rst", "_generated/splinepy.splinepy_core.compose_sensitivities.rst", "_generated/splinepy.splinepy_core.composition_derivative.rst", "_generated/splinepy.splinepy_core.core_id.rst", "_generated/splinepy.splinepy_core.core_ref_count.rst", "_generated/splinepy.splinepy_core.derivative_spline.rst", "_generated/splinepy.splinepy_core.export_iges.rst", "_generated/splinepy.splinepy_core.extract_all_boundary_splines.rst", "_generated/splinepy.splinepy_core.extract_bezier_patches.rst", "_generated/splinepy.splinepy_core.extract_boundaries.rst", "_generated/splinepy.splinepy_core.extract_dim.rst", "_generated/splinepy.splinepy_core.global_knot_insertion_matrix.rst", "_generated/splinepy.splinepy_core.has_core.rst", "_generated/splinepy.splinepy_core.insert_knots.rst", "_generated/splinepy.splinepy_core.interfaces_from_boundary_centers.rst", "_generated/splinepy.splinepy_core.is_minimal.rst", "_generated/splinepy.splinepy_core.knot_insertion_matrix.rst", "_generated/splinepy.splinepy_core.multiply.rst", "_generated/splinepy.splinepy_core.null_spline.rst", "_generated/splinepy.splinepy_core.read_iges.rst", "_generated/splinepy.splinepy_core.remove_knots.rst", "_generated/splinepy.splinepy_core.same_spline_with_knot_vectors.rst", "_generated/splinepy.splinepy_core.split.rst", "_generated/splinepy.to_derived.rst", "_generated/splinepy.utils.rst", "_generated/splinepy.utils.data.rst", "_generated/splinepy.utils.data.MultipatchData.rst", "_generated/splinepy.utils.data.MultipatchData.as_arrow.rst", "_generated/splinepy.utils.data.MultipatchData.as_scalar.rst", "_generated/splinepy.utils.data.MultipatchData.clear.rst", "_generated/splinepy.utils.data.MultipatchData.get.rst", "_generated/splinepy.utils.data.MultipatchData.items.rst", "_generated/splinepy.utils.data.MultipatchData.keys.rst", "_generated/splinepy.utils.data.MultipatchData.pop.rst", "_generated/splinepy.utils.data.MultipatchData.update.rst", "_generated/splinepy.utils.data.MultipatchData.values.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.all.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.any.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmax.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmin.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argpartition.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argsort.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.astype.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.byteswap.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.choose.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.clip.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.compress.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.conj.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.conjugate.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.copy.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumprod.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumsum.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.diagonal.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dot.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dump.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dumps.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.fill.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.flatten.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.full_row_indices.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.getfield.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.item.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.max.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.mean.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.min.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.nonzero.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.partition.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.prod.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.put.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.ravel.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.repeat.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.reshape.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.resize.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.round.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.row_indices.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.searchsorted.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.setfield.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.setflags.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.sort.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.squeeze.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.std.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.sum.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.swapaxes.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.take.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.to_device.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tobytes.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tofile.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tolist.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tostring.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.trace.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.transpose.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.var.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.view.rst", "_generated/splinepy.utils.data.SplineData.rst", "_generated/splinepy.utils.data.SplineData.as_arrow.rst", "_generated/splinepy.utils.data.SplineData.as_scalar.rst", "_generated/splinepy.utils.data.SplineData.clear.rst", "_generated/splinepy.utils.data.SplineData.get.rst", "_generated/splinepy.utils.data.SplineData.items.rst", "_generated/splinepy.utils.data.SplineData.keys.rst", "_generated/splinepy.utils.data.SplineData.pop.rst", "_generated/splinepy.utils.data.SplineData.update.rst", "_generated/splinepy.utils.data.SplineData.values.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.arrow_data_only.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.as_vertex_data.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.data.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.function.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_evaluate.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_function.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_locations.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.is_spline.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.locations.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.parametric_bounds.rst", "_generated/splinepy.utils.data.cartesian_product.rst", "_generated/splinepy.utils.data.enforce_contiguous.rst", "_generated/splinepy.utils.data.enforce_contiguous_values.rst", "_generated/splinepy.utils.data.make_matrix.rst", "_generated/splinepy.utils.data.uniform_query.rst", "_generated/splinepy.utils.log.rst", "_generated/splinepy.utils.log.configure.rst", "_generated/splinepy.utils.log.debug.rst", "_generated/splinepy.utils.log.error.rst", "_generated/splinepy.utils.log.info.rst", "_generated/splinepy.utils.log.prepend_log.rst", "_generated/splinepy.utils.log.warning.rst", "api_reference.rst", "index.rst", "python_api.rst", "spline_intro.rst"], "indexentries": {"abs_fname() (in module splinepy.io.ioutils)": [[255, "splinepy.io.ioutils.abs_fname", false]], "add() (in module splinepy.splinepy_core)": [[585, "splinepy.splinepy_core.add", false]], "add_fields() (splinepy.multipatch.multipatch method)": [[369, "splinepy.multipatch.Multipatch.add_fields", false]], "add_fields() (splinepy.splinepy_core.pymultipatch method)": [[534, "splinepy.splinepy_core.PyMultipatch.add_fields", false]], "all() (splinepy.utils.data.physicalspacearray method)": [[628, "splinepy.utils.data.PhysicalSpaceArray.all", false]], "annul_core() (in module splinepy.splinepy_core)": [[586, "splinepy.splinepy_core.annul_core", false]], "any() (splinepy.utils.data.physicalspacearray method)": [[629, "splinepy.utils.data.PhysicalSpaceArray.any", false]], "arc() (in module splinepy.helpme.create)": [[138, "splinepy.helpme.create.arc", false]], "argmax() (splinepy.utils.data.physicalspacearray method)": [[630, "splinepy.utils.data.PhysicalSpaceArray.argmax", false]], "argmin() (splinepy.utils.data.physicalspacearray method)": [[631, "splinepy.utils.data.PhysicalSpaceArray.argmin", false]], "argpartition() (splinepy.utils.data.physicalspacearray method)": [[632, "splinepy.utils.data.PhysicalSpaceArray.argpartition", false]], "argsort() (splinepy.utils.data.physicalspacearray method)": [[633, "splinepy.utils.data.PhysicalSpaceArray.argsort", false]], "armadillo (class in splinepy.microstructure.tiles.armadillo)": [[290, "splinepy.microstructure.tiles.armadillo.Armadillo", false]], "arrow_data() (in module splinepy.helpme.extract)": [[170, "splinepy.helpme.extract.arrow_data", false]], "arrow_data() (splinepy.helpme.extract.extractor method)": [[157, "splinepy.helpme.extract.Extractor.arrow_data", false]], "arrow_data_only (splinepy.utils.data.splinedataadaptor attribute)": [[695, "splinepy.utils.data.SplineDataAdaptor.arrow_data_only", false]], "as_arrow() (splinepy.utils.data.multipatchdata method)": [[618, "splinepy.utils.data.MultipatchData.as_arrow", false]], "as_arrow() (splinepy.utils.data.splinedata method)": [[685, "splinepy.utils.data.SplineData.as_arrow", false]], "as_scalar() (splinepy.utils.data.multipatchdata method)": [[619, "splinepy.utils.data.MultipatchData.as_scalar", false]], "as_scalar() (splinepy.utils.data.splinedata method)": [[686, "splinepy.utils.data.SplineData.as_scalar", false]], "as_vertex_data() (splinepy.utils.data.splinedataadaptor method)": [[696, "splinepy.utils.data.SplineDataAdaptor.as_vertex_data", false]], "astype() (splinepy.utils.data.physicalspacearray method)": [[634, "splinepy.utils.data.PhysicalSpaceArray.astype", false]], "bases() (in module splinepy.helpme.extract)": [[171, "splinepy.helpme.extract.bases", false]], "bases() (splinepy.helpme.extract.extractor method)": [[158, "splinepy.helpme.extract.Extractor.bases", false]], "basis() (splinepy.bezier.bezier method)": [[4, "splinepy.bezier.Bezier.basis", false]], "basis() (splinepy.bezier.bezierbase method)": [[35, "splinepy.bezier.BezierBase.basis", false]], "basis() (splinepy.bspline.bspline method)": [[63, "splinepy.bspline.BSpline.basis", false]], "basis() (splinepy.bspline.bsplinebase method)": [[93, "splinepy.bspline.BSplineBase.basis", false]], "basis() (splinepy.nurbs.nurbs method)": [[399, "splinepy.nurbs.NURBS.basis", false]], "basis() (splinepy.rational_bezier.rationalbezier method)": [[429, "splinepy.rational_bezier.RationalBezier.basis", false]], "basis() (splinepy.spline.spline method)": [[468, "splinepy.spline.Spline.basis", false]], "basis() (splinepy.splinepy_core.pyspline method)": [[557, "splinepy.splinepy_core.PySpline.basis", false]], "basis_and_support() (splinepy.bezier.bezier method)": [[5, "splinepy.bezier.Bezier.basis_and_support", false]], "basis_and_support() (splinepy.bezier.bezierbase method)": [[36, "splinepy.bezier.BezierBase.basis_and_support", false]], "basis_and_support() (splinepy.bspline.bspline method)": [[64, "splinepy.bspline.BSpline.basis_and_support", false]], "basis_and_support() (splinepy.bspline.bsplinebase method)": [[94, "splinepy.bspline.BSplineBase.basis_and_support", false]], "basis_and_support() (splinepy.nurbs.nurbs method)": [[400, "splinepy.nurbs.NURBS.basis_and_support", false]], "basis_and_support() (splinepy.rational_bezier.rationalbezier method)": [[430, "splinepy.rational_bezier.RationalBezier.basis_and_support", false]], "basis_and_support() (splinepy.spline.spline method)": [[469, "splinepy.spline.Spline.basis_and_support", false]], "basis_and_support() (splinepy.splinepy_core.pyspline method)": [[558, "splinepy.splinepy_core.PySpline.basis_and_support", false]], "basis_derivative() (splinepy.bezier.bezier method)": [[6, "splinepy.bezier.Bezier.basis_derivative", false]], "basis_derivative() (splinepy.bezier.bezierbase method)": [[37, "splinepy.bezier.BezierBase.basis_derivative", false]], "basis_derivative() (splinepy.bspline.bspline method)": [[65, "splinepy.bspline.BSpline.basis_derivative", false]], "basis_derivative() (splinepy.bspline.bsplinebase method)": [[95, "splinepy.bspline.BSplineBase.basis_derivative", false]], "basis_derivative() (splinepy.nurbs.nurbs method)": [[401, "splinepy.nurbs.NURBS.basis_derivative", false]], "basis_derivative() (splinepy.rational_bezier.rationalbezier method)": [[431, "splinepy.rational_bezier.RationalBezier.basis_derivative", false]], "basis_derivative() (splinepy.spline.spline method)": [[470, "splinepy.spline.Spline.basis_derivative", false]], "basis_derivative() (splinepy.splinepy_core.pyspline method)": [[559, "splinepy.splinepy_core.PySpline.basis_derivative", false]], "basis_derivative_and_support() (splinepy.bezier.bezier method)": [[7, "splinepy.bezier.Bezier.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.bezier.bezierbase method)": [[38, "splinepy.bezier.BezierBase.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.bspline.bspline method)": [[66, "splinepy.bspline.BSpline.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.bspline.bsplinebase method)": [[96, "splinepy.bspline.BSplineBase.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.nurbs.nurbs method)": [[402, "splinepy.nurbs.NURBS.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.rational_bezier.rationalbezier method)": [[432, "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.spline.spline method)": [[471, "splinepy.spline.Spline.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.splinepy_core.pyspline method)": [[560, "splinepy.splinepy_core.PySpline.basis_derivative_and_support", false]], "basis_function_derivatives() (splinepy.helpme.mapper.mapper method)": [[204, "splinepy.helpme.mapper.Mapper.basis_function_derivatives", false]], "basis_gradient_and_support() (splinepy.helpme.mapper.mapper method)": [[205, "splinepy.helpme.mapper.Mapper.basis_gradient_and_support", false]], "basis_hessian_and_support() (splinepy.helpme.mapper.mapper method)": [[206, "splinepy.helpme.mapper.Mapper.basis_hessian_and_support", false]], "basis_laplacian_and_support() (splinepy.helpme.mapper.mapper method)": [[207, "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", false]], "bezier (class in splinepy.bezier)": [[3, "splinepy.bezier.Bezier", false]], "bezier (splinepy.bezier.bezier property)": [[8, "splinepy.bezier.Bezier.bezier", false]], "bezier_extraction_matrix() (in module splinepy.splinepy_core)": [[587, "splinepy.splinepy_core.bezier_extraction_matrix", false]], "bezierbase (class in splinepy.bezier)": [[34, "splinepy.bezier.BezierBase", false]], "beziers() (splinepy.helpme.extract.extractor method)": [[159, "splinepy.helpme.extract.Extractor.beziers", false]], "boundaries (splinepy.multipatch.multipatch property)": [[370, "splinepy.multipatch.Multipatch.boundaries", false]], "boundaries() (in module splinepy.helpme.extract)": [[172, "splinepy.helpme.extract.boundaries", false]], "boundaries() (splinepy.helpme.extract.extractor method)": [[160, "splinepy.helpme.extract.Extractor.boundaries", false]], "boundaries_from_continuity() (in module splinepy.splinepy_core)": [[588, "splinepy.splinepy_core.boundaries_from_continuity", false]], "boundaries_from_continuity() (splinepy.multipatch.multipatch method)": [[371, "splinepy.multipatch.Multipatch.boundaries_from_continuity", false]], "boundary_centers() (in module splinepy.splinepy_core)": [[589, "splinepy.splinepy_core.boundary_centers", false]], "boundary_from_function() (splinepy.multipatch.multipatch method)": [[372, "splinepy.multipatch.Multipatch.boundary_from_function", false]], "boundary_multipatch() (splinepy.multipatch.multipatch method)": [[373, "splinepy.multipatch.Multipatch.boundary_multipatch", false]], "boundary_multipatch() (splinepy.splinepy_core.pymultipatch method)": [[535, "splinepy.splinepy_core.PyMultipatch.boundary_multipatch", false]], "boundary_patch_ids() (splinepy.multipatch.multipatch method)": [[374, "splinepy.multipatch.Multipatch.boundary_patch_ids", false]], "boundary_patch_ids() (splinepy.splinepy_core.pymultipatch method)": [[536, "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", false]], "box() (in module splinepy.helpme.create)": [[139, "splinepy.helpme.create.box", false]], "bspline (class in splinepy.bspline)": [[62, "splinepy.bspline.BSpline", false]], "bspline (splinepy.bezier.bezier property)": [[9, "splinepy.bezier.Bezier.bspline", false]], "bspline (splinepy.bspline.bspline property)": [[67, "splinepy.bspline.BSpline.bspline", false]], "bsplinebase (class in splinepy.bspline)": [[92, "splinepy.bspline.BSplineBase", false]], "build_type() (in module splinepy.splinepy_core)": [[590, "splinepy.splinepy_core.build_type", false]], "by_dim() (in module splinepy.microstructure.tiles)": [[294, "splinepy.microstructure.tiles.by_dim", false]], "byteswap() (splinepy.utils.data.physicalspacearray method)": [[635, "splinepy.utils.data.PhysicalSpaceArray.byteswap", false]], "cartesian_product() (in module splinepy.utils.data)": [[705, "splinepy.utils.data.cartesian_product", false]], "check (splinepy.spline.spline property)": [[472, "splinepy.spline.Spline.check", false]], "check_bounds (in module splinepy.settings)": [[458, "splinepy.settings.CHECK_BOUNDS", false]], "check_param_derivatives() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[291, "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.chi.chi method)": [[297, "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[302, "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[307, "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_3d_linear.cross3dlinear method)": [[312, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[317, "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[322, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[327, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[334, "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[339, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[344, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[350, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.snappy.snappy method)": [[356, "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[361, "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", false]], "check_params() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[292, "splinepy.microstructure.tiles.armadillo.Armadillo.check_params", false]], "check_params() (splinepy.microstructure.tiles.chi.chi method)": [[298, "splinepy.microstructure.tiles.chi.Chi.check_params", false]], "check_params() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[303, "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", false]], "check_params() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[308, "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", false]], "check_params() (splinepy.microstructure.tiles.cross_3d_linear.cross3dlinear method)": [[313, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params", false]], "check_params() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[318, "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", false]], "check_params() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[323, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", false]], "check_params() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[328, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", false]], "check_params() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[335, "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", false]], "check_params() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[340, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", false]], "check_params() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[345, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", false]], "check_params() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[351, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", false]], "check_params() (splinepy.microstructure.tiles.snappy.snappy method)": [[357, "splinepy.microstructure.tiles.snappy.Snappy.check_params", false]], "check_params() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[362, "splinepy.microstructure.tiles.tile_base.TileBase.check_params", false]], "checker (class in splinepy.helpme.check)": [[126, "splinepy.helpme.check.Checker", false]], "chi (class in splinepy.microstructure.tiles.chi)": [[296, "splinepy.microstructure.tiles.chi.Chi", false]], "choose() (splinepy.utils.data.physicalspacearray method)": [[636, "splinepy.utils.data.PhysicalSpaceArray.choose", false]], "circle() (in module splinepy.helpme.create)": [[140, "splinepy.helpme.create.circle", false]], "clamped_knot_vectors() (in module splinepy.helpme.check)": [[129, "splinepy.helpme.check.clamped_knot_vectors", false]], "clamped_knot_vectors() (splinepy.helpme.check.checker method)": [[127, "splinepy.helpme.check.Checker.clamped_knot_vectors", false]], "clear() (splinepy.bezier.bezier method)": [[10, "splinepy.bezier.Bezier.clear", false]], "clear() (splinepy.bezier.bezierbase method)": [[39, "splinepy.bezier.BezierBase.clear", false]], "clear() (splinepy.bspline.bspline method)": [[68, "splinepy.bspline.BSpline.clear", false]], "clear() (splinepy.bspline.bsplinebase method)": [[97, "splinepy.bspline.BSplineBase.clear", false]], "clear() (splinepy.helpme.visualize.multipatchshowoption method)": [[220, "splinepy.helpme.visualize.MultipatchShowOption.clear", false]], "clear() (splinepy.helpme.visualize.splineshowoption method)": [[230, "splinepy.helpme.visualize.SplineShowOption.clear", false]], "clear() (splinepy.multipatch.multipatch method)": [[375, "splinepy.multipatch.Multipatch.clear", false]], "clear() (splinepy.nurbs.nurbs method)": [[403, "splinepy.nurbs.NURBS.clear", false]], "clear() (splinepy.rational_bezier.rationalbezier method)": [[433, "splinepy.rational_bezier.RationalBezier.clear", false]], "clear() (splinepy.spline.spline method)": [[473, "splinepy.spline.Spline.clear", false]], "clear() (splinepy.splinepy_core.pymultipatch method)": [[537, "splinepy.splinepy_core.PyMultipatch.clear", false]], "clear() (splinepy.utils.data.multipatchdata method)": [[620, "splinepy.utils.data.MultipatchData.clear", false]], "clear() (splinepy.utils.data.splinedata method)": [[687, "splinepy.utils.data.SplineData.clear", false]], "clip() (splinepy.utils.data.physicalspacearray method)": [[637, "splinepy.utils.data.PhysicalSpaceArray.clip", false]], "closing_tile() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[346, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", false]], "combine_boundaries() (splinepy.multipatch.multipatch method)": [[376, "splinepy.multipatch.Multipatch.combine_boundaries", false]], "compose() (in module splinepy.splinepy_core)": [[591, "splinepy.splinepy_core.compose", false]], "compose() (splinepy.bezier.bezier method)": [[11, "splinepy.bezier.Bezier.compose", false]], "compose() (splinepy.bezier.bezierbase method)": [[40, "splinepy.bezier.BezierBase.compose", false]], "compose() (splinepy.rational_bezier.rationalbezier method)": [[434, "splinepy.rational_bezier.RationalBezier.compose", false]], "compose_sensitivities() (in module splinepy.splinepy_core)": [[592, "splinepy.splinepy_core.compose_sensitivities", false]], "composition_derivative() (in module splinepy.splinepy_core)": [[593, "splinepy.splinepy_core.composition_derivative", false]], "composition_derivative() (splinepy.bezier.bezier method)": [[12, "splinepy.bezier.Bezier.composition_derivative", false]], "composition_derivative() (splinepy.bezier.bezierbase method)": [[41, "splinepy.bezier.BezierBase.composition_derivative", false]], "composition_derivative() (splinepy.rational_bezier.rationalbezier method)": [[435, "splinepy.rational_bezier.RationalBezier.composition_derivative", false]], "compress() (splinepy.utils.data.physicalspacearray method)": [[638, "splinepy.utils.data.PhysicalSpaceArray.compress", false]], "compute_knot_vector() (in module splinepy.helpme.fit)": [[190, "splinepy.helpme.fit.compute_knot_vector", false]], "cone() (in module splinepy.helpme.create)": [[141, "splinepy.helpme.create.cone", false]], "configure() (in module splinepy.utils.log)": [[711, "splinepy.utils.log.configure", false]], "conj() (splinepy.utils.data.physicalspacearray method)": [[639, "splinepy.utils.data.PhysicalSpaceArray.conj", false]], "conjugate() (splinepy.utils.data.physicalspacearray method)": [[640, "splinepy.utils.data.PhysicalSpaceArray.conjugate", false]], "control_edges() (in module splinepy.helpme.extract)": [[173, "splinepy.helpme.extract.control_edges", false]], "control_edges() (splinepy.helpme.extract.extractor method)": [[161, "splinepy.helpme.extract.Extractor.control_edges", false]], "control_faces() (in module splinepy.helpme.extract)": [[174, "splinepy.helpme.extract.control_faces", false]], "control_faces() (splinepy.helpme.extract.extractor method)": [[162, "splinepy.helpme.extract.Extractor.control_faces", false]], "control_mesh() (in module splinepy.helpme.extract)": [[175, "splinepy.helpme.extract.control_mesh", false]], "control_mesh() (splinepy.helpme.extract.extractor method)": [[163, "splinepy.helpme.extract.Extractor.control_mesh", false]], "control_mesh_resolutions (splinepy.spline.spline property)": [[474, "splinepy.spline.Spline.control_mesh_resolutions", false]], "control_mesh_resolutions (splinepy.splinepy_core.pyspline property)": [[561, "splinepy.splinepy_core.PySpline.control_mesh_resolutions", false]], "control_point_bounds (splinepy.spline.spline property)": [[475, "splinepy.spline.Spline.control_point_bounds", false]], "control_point_offsets() (splinepy.multipatch.multipatch method)": [[377, "splinepy.multipatch.Multipatch.control_point_offsets", false]], "control_point_offsets() (splinepy.splinepy_core.pymultipatch method)": [[538, "splinepy.splinepy_core.PyMultipatch.control_point_offsets", false]], "control_points (splinepy.spline.spline property)": [[476, "splinepy.spline.Spline.control_points", false]], "control_points (splinepy.splinepy_core.pymultipatch property)": [[539, "splinepy.splinepy_core.PyMultipatch.control_points", false]], "control_points() (in module splinepy.helpme.extract)": [[176, "splinepy.helpme.extract.control_points", false]], "control_points() (splinepy.helpme.extract.extractor method)": [[164, "splinepy.helpme.extract.Extractor.control_points", false]], "control_volumes() (in module splinepy.helpme.extract)": [[177, "splinepy.helpme.extract.control_volumes", false]], "control_volumes() (splinepy.helpme.extract.extractor method)": [[165, "splinepy.helpme.extract.Extractor.control_volumes", false]], "controlpointpointers (class in splinepy.splinepy_core)": [[517, "splinepy.splinepy_core.ControlPointPointers", false]], "convert() (in module splinepy.cli)": [[121, "splinepy.cli.convert", false]], "copy() (splinepy.bezier.bezier method)": [[13, "splinepy.bezier.Bezier.copy", false]], "copy() (splinepy.bezier.bezierbase method)": [[42, "splinepy.bezier.BezierBase.copy", false]], "copy() (splinepy.bspline.bspline method)": [[69, "splinepy.bspline.BSpline.copy", false]], "copy() (splinepy.bspline.bsplinebase method)": [[98, "splinepy.bspline.BSplineBase.copy", false]], "copy() (splinepy.nurbs.nurbs method)": [[404, "splinepy.nurbs.NURBS.copy", false]], "copy() (splinepy.rational_bezier.rationalbezier method)": [[436, "splinepy.rational_bezier.RationalBezier.copy", false]], "copy() (splinepy.spline.spline method)": [[477, "splinepy.spline.Spline.copy", false]], "copy() (splinepy.splinepy_core.parameterspace method)": [[531, "splinepy.splinepy_core.ParameterSpace.copy", false]], "copy() (splinepy.utils.data.physicalspacearray method)": [[641, "splinepy.utils.data.PhysicalSpaceArray.copy", false]], "copy_valid_options() (splinepy.helpme.visualize.multipatchshowoption method)": [[221, "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", false]], "copy_valid_options() (splinepy.helpme.visualize.splineshowoption method)": [[231, "splinepy.helpme.visualize.SplineShowOption.copy_valid_options", false]], "core_id() (in module splinepy.splinepy_core)": [[594, "splinepy.splinepy_core.core_id", false]], "core_ref_count() (in module splinepy.splinepy_core)": [[595, "splinepy.splinepy_core.core_ref_count", false]], "cps (splinepy.spline.spline property)": [[478, "splinepy.spline.Spline.cps", false]], "create (splinepy.spline.spline property)": [[479, "splinepy.spline.Spline.create", false]], "create() (splinepy.microstructure.microstructure.microstructure method)": [[281, "splinepy.microstructure.microstructure.Microstructure.create", false]], "create_tile() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[293, "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.chi.chi method)": [[299, "splinepy.microstructure.tiles.chi.Chi.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[304, "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[309, "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.cross_3d_linear.cross3dlinear method)": [[314, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[319, "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[324, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[329, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[336, "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[341, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[347, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[352, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.snappy.snappy method)": [[358, "splinepy.microstructure.tiles.snappy.Snappy.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[363, "splinepy.microstructure.tiles.tile_base.TileBase.create_tile", false]], "creator (class in splinepy.helpme.create)": [[132, "splinepy.helpme.create.Creator", false]], "cross2d (class in splinepy.microstructure.tiles.cross_2d)": [[301, "splinepy.microstructure.tiles.cross_2d.Cross2D", false]], "cross3d (class in splinepy.microstructure.tiles.cross_3d)": [[306, "splinepy.microstructure.tiles.cross_3d.Cross3D", false]], "cross3dlinear (class in splinepy.microstructure.tiles.cross_3d_linear)": [[311, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear", false]], "cubevoid (class in splinepy.microstructure.tiles.cube_void)": [[316, "splinepy.microstructure.tiles.cube_void.CubeVoid", false]], "cumprod() (splinepy.utils.data.physicalspacearray method)": [[642, "splinepy.utils.data.PhysicalSpaceArray.cumprod", false]], "cumsum() (splinepy.utils.data.physicalspacearray method)": [[643, "splinepy.utils.data.PhysicalSpaceArray.cumsum", false]], "current_core_properties() (splinepy.bezier.bezier method)": [[14, "splinepy.bezier.Bezier.current_core_properties", false]], "current_core_properties() (splinepy.bezier.bezierbase method)": [[43, "splinepy.bezier.BezierBase.current_core_properties", false]], "current_core_properties() (splinepy.bspline.bspline method)": [[70, "splinepy.bspline.BSpline.current_core_properties", false]], "current_core_properties() (splinepy.bspline.bsplinebase method)": [[99, "splinepy.bspline.BSplineBase.current_core_properties", false]], "current_core_properties() (splinepy.nurbs.nurbs method)": [[405, "splinepy.nurbs.NURBS.current_core_properties", false]], "current_core_properties() (splinepy.rational_bezier.rationalbezier method)": [[437, "splinepy.rational_bezier.RationalBezier.current_core_properties", false]], "current_core_properties() (splinepy.spline.spline method)": [[480, "splinepy.spline.Spline.current_core_properties", false]], "current_core_properties() (splinepy.splinepy_core.pyspline method)": [[562, "splinepy.splinepy_core.PySpline.current_core_properties", false]], "curve() (in module splinepy.helpme.fit)": [[191, "splinepy.helpme.fit.curve", false]], "data (splinepy.utils.data.splinedataadaptor attribute)": [[697, "splinepy.utils.data.SplineDataAdaptor.data", false]], "debug() (in module splinepy.utils.log)": [[712, "splinepy.utils.log.debug", false]], "deformation_function (splinepy.microstructure.microstructure.microstructure property)": [[282, "splinepy.microstructure.microstructure.Microstructure.deformation_function", false]], "degrees (splinepy.spline.spline property)": [[481, "splinepy.spline.Spline.degrees", false]], "derivative() (splinepy.bezier.bezier method)": [[15, "splinepy.bezier.Bezier.derivative", false]], "derivative() (splinepy.bezier.bezierbase method)": [[44, "splinepy.bezier.BezierBase.derivative", false]], "derivative() (splinepy.bspline.bspline method)": [[71, "splinepy.bspline.BSpline.derivative", false]], "derivative() (splinepy.bspline.bsplinebase method)": [[100, "splinepy.bspline.BSplineBase.derivative", false]], "derivative() (splinepy.nurbs.nurbs method)": [[406, "splinepy.nurbs.NURBS.derivative", false]], "derivative() (splinepy.rational_bezier.rationalbezier method)": [[438, "splinepy.rational_bezier.RationalBezier.derivative", false]], "derivative() (splinepy.spline.spline method)": [[482, "splinepy.spline.Spline.derivative", false]], "derivative() (splinepy.splinepy_core.pyspline method)": [[563, "splinepy.splinepy_core.PySpline.derivative", false]], "derivative_spline() (in module splinepy.splinepy_core)": [[596, "splinepy.splinepy_core.derivative_spline", false]], "derivative_spline() (splinepy.bezier.bezier method)": [[16, "splinepy.bezier.Bezier.derivative_spline", false]], "derivative_spline() (splinepy.bezier.bezierbase method)": [[45, "splinepy.bezier.BezierBase.derivative_spline", false]], "derivative_spline() (splinepy.rational_bezier.rationalbezier method)": [[439, "splinepy.rational_bezier.RationalBezier.derivative_spline", false]], "determinant_spline() (in module splinepy.helpme.create)": [[142, "splinepy.helpme.create.determinant_spline", false]], "determinant_spline() (splinepy.helpme.create.creator method)": [[133, "splinepy.helpme.create.Creator.determinant_spline", false]], "determine_interfaces() (splinepy.multipatch.multipatch method)": [[378, "splinepy.multipatch.Multipatch.determine_interfaces", false]], "diagonal() (splinepy.utils.data.physicalspacearray method)": [[644, "splinepy.utils.data.PhysicalSpaceArray.diagonal", false]], "dict_to_spline() (in module splinepy.io.ioutils)": [[256, "splinepy.io.ioutils.dict_to_spline", false]], "dim (splinepy.microstructure.tiles.tile_base.tilebase attribute)": [[364, "splinepy.microstructure.tiles.tile_base.TileBase.dim", false]], "dim (splinepy.multipatch.multipatch property)": [[379, "splinepy.multipatch.Multipatch.dim", false]], "dim (splinepy.spline.spline property)": [[483, "splinepy.spline.Spline.dim", false]], "dim (splinepy.splinepy_core.pymultipatch property)": [[540, "splinepy.splinepy_core.PyMultipatch.dim", false]], "dim (splinepy.splinepy_core.pyspline property)": [[564, "splinepy.splinepy_core.PySpline.dim", false]], "dim() (splinepy.splinepy_core.controlpointpointers method)": [[518, "splinepy.splinepy_core.ControlPointPointers.dim", false]], "dim() (splinepy.splinepy_core.weightpointers method)": [[579, "splinepy.splinepy_core.WeightPointers.dim", false]], "disk() (in module splinepy.helpme.create)": [[143, "splinepy.helpme.create.disk", false]], "divergence() (splinepy.helpme.mapper.mapper method)": [[208, "splinepy.helpme.mapper.Mapper.divergence", false]], "dof_mapping() (in module splinepy.io.mfem)": [[268, "splinepy.io.mfem.dof_mapping", false]], "dot() (splinepy.utils.data.physicalspacearray method)": [[645, "splinepy.utils.data.PhysicalSpaceArray.dot", false]], "doublelattice (class in splinepy.microstructure.tiles.double_lattice)": [[321, "splinepy.microstructure.tiles.double_lattice.DoubleLattice", false]], "ds (splinepy.spline.spline property)": [[484, "splinepy.spline.Spline.ds", false]], "dump() (splinepy.utils.data.physicalspacearray method)": [[646, "splinepy.utils.data.PhysicalSpaceArray.dump", false]], "dumps() (splinepy.utils.data.physicalspacearray method)": [[647, "splinepy.utils.data.PhysicalSpaceArray.dumps", false]], "edges() (in module splinepy.helpme.extract)": [[178, "splinepy.helpme.extract.edges", false]], "edges() (splinepy.helpme.extract.extractor method)": [[166, "splinepy.helpme.extract.Extractor.edges", false]], "elevate_degrees() (splinepy.bezier.bezier method)": [[17, "splinepy.bezier.Bezier.elevate_degrees", false]], "elevate_degrees() (splinepy.bezier.bezierbase method)": [[46, "splinepy.bezier.BezierBase.elevate_degrees", false]], "elevate_degrees() (splinepy.bspline.bspline method)": [[72, "splinepy.bspline.BSpline.elevate_degrees", false]], "elevate_degrees() (splinepy.bspline.bsplinebase method)": [[101, "splinepy.bspline.BSplineBase.elevate_degrees", false]], "elevate_degrees() (splinepy.nurbs.nurbs method)": [[407, "splinepy.nurbs.NURBS.elevate_degrees", false]], "elevate_degrees() (splinepy.rational_bezier.rationalbezier method)": [[440, "splinepy.rational_bezier.RationalBezier.elevate_degrees", false]], "elevate_degrees() (splinepy.spline.spline method)": [[485, "splinepy.spline.Spline.elevate_degrees", false]], "elevate_degrees() (splinepy.splinepy_core.pyspline method)": [[565, "splinepy.splinepy_core.PySpline.elevate_degrees", false]], "ellipsvoid (class in splinepy.microstructure.tiles.ellips_v_oid)": [[326, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", false]], "embedded() (in module splinepy.helpme.create)": [[144, "splinepy.helpme.create.embedded", false]], "embedded() (splinepy.helpme.create.creator method)": [[134, "splinepy.helpme.create.Creator.embedded", false]], "enforce_contiguous() (in module splinepy.utils.data)": [[706, "splinepy.utils.data.enforce_contiguous", false]], "enforce_contiguous_values() (in module splinepy.utils.data)": [[707, "splinepy.utils.data.enforce_contiguous_values", false]], "entry() (in module splinepy.cli)": [[122, "splinepy.cli.entry", false]], "error() (in module splinepy.utils.log)": [[713, "splinepy.utils.log.error", false]], "evaluate() (splinepy.bezier.bezier method)": [[18, "splinepy.bezier.Bezier.evaluate", false]], "evaluate() (splinepy.bezier.bezierbase method)": [[47, "splinepy.bezier.BezierBase.evaluate", false]], "evaluate() (splinepy.bspline.bspline method)": [[73, "splinepy.bspline.BSpline.evaluate", false]], "evaluate() (splinepy.bspline.bsplinebase method)": [[102, "splinepy.bspline.BSplineBase.evaluate", false]], "evaluate() (splinepy.multipatch.multipatch method)": [[380, "splinepy.multipatch.Multipatch.evaluate", false]], "evaluate() (splinepy.nurbs.nurbs method)": [[408, "splinepy.nurbs.NURBS.evaluate", false]], "evaluate() (splinepy.rational_bezier.rationalbezier method)": [[441, "splinepy.rational_bezier.RationalBezier.evaluate", false]], "evaluate() (splinepy.spline.spline method)": [[486, "splinepy.spline.Spline.evaluate", false]], "evaluate() (splinepy.splinepy_core.pymultipatch method)": [[541, "splinepy.splinepy_core.PyMultipatch.evaluate", false]], "evaluate() (splinepy.splinepy_core.pyspline method)": [[566, "splinepy.splinepy_core.PySpline.evaluate", false]], "evaluation_points (splinepy.microstructure.tiles.tile_base.tilebase attribute)": [[365, "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", false]], "everything() (in module splinepy.microstructure.tiles)": [[330, "splinepy.microstructure.tiles.everything", false]], "expand_tabs() (in module splinepy.io.ioutils)": [[257, "splinepy.io.ioutils.expand_tabs", false]], "export() (in module splinepy.io.cats)": [[243, "splinepy.io.cats.export", false]], "export() (in module splinepy.io.default)": [[246, "splinepy.io.default.export", false]], "export() (in module splinepy.io.gismo)": [[249, "splinepy.io.gismo.export", false]], "export() (in module splinepy.io.iges)": [[252, "splinepy.io.iges.export", false]], "export() (in module splinepy.io.irit)": [[262, "splinepy.io.irit.export", false]], "export() (in module splinepy.io.json)": [[265, "splinepy.io.json.export", false]], "export() (in module splinepy.io.mfem)": [[269, "splinepy.io.mfem.export", false]], "export() (in module splinepy.io.npz)": [[274, "splinepy.io.npz.export", false]], "export() (in module splinepy.io.svg)": [[277, "splinepy.io.svg.export", false]], "export() (splinepy.bezier.bezier method)": [[19, "splinepy.bezier.Bezier.export", false]], "export() (splinepy.bezier.bezierbase method)": [[48, "splinepy.bezier.BezierBase.export", false]], "export() (splinepy.bspline.bspline method)": [[74, "splinepy.bspline.BSpline.export", false]], "export() (splinepy.bspline.bsplinebase method)": [[103, "splinepy.bspline.BSplineBase.export", false]], "export() (splinepy.nurbs.nurbs method)": [[409, "splinepy.nurbs.NURBS.export", false]], "export() (splinepy.rational_bezier.rationalbezier method)": [[442, "splinepy.rational_bezier.RationalBezier.export", false]], "export() (splinepy.spline.spline method)": [[487, "splinepy.spline.Spline.export", false]], "export_cartesian() (in module splinepy.io.mfem)": [[270, "splinepy.io.mfem.export_cartesian", false]], "export_iges() (in module splinepy.splinepy_core)": [[597, "splinepy.splinepy_core.export_iges", false]], "extract (splinepy.multipatch.multipatch property)": [[381, "splinepy.multipatch.Multipatch.extract", false]], "extract (splinepy.spline.spline property)": [[488, "splinepy.spline.Spline.extract", false]], "extract_all_boundary_splines() (in module splinepy.splinepy_core)": [[598, "splinepy.splinepy_core.extract_all_boundary_splines", false]], "extract_bezier_patches() (in module splinepy.splinepy_core)": [[599, "splinepy.splinepy_core.extract_bezier_patches", false]], "extract_bezier_patches() (splinepy.bspline.bspline method)": [[75, "splinepy.bspline.BSpline.extract_bezier_patches", false]], "extract_bezier_patches() (splinepy.bspline.bsplinebase method)": [[104, "splinepy.bspline.BSplineBase.extract_bezier_patches", false]], "extract_bezier_patches() (splinepy.nurbs.nurbs method)": [[410, "splinepy.nurbs.NURBS.extract_bezier_patches", false]], "extract_boundaries() (in module splinepy.splinepy_core)": [[600, "splinepy.splinepy_core.extract_boundaries", false]], "extract_dim() (in module splinepy.splinepy_core)": [[601, "splinepy.splinepy_core.extract_dim", false]], "extract_dim() (splinepy.bezier.bezier method)": [[20, "splinepy.bezier.Bezier.extract_dim", false]], "extract_dim() (splinepy.bezier.bezierbase method)": [[49, "splinepy.bezier.BezierBase.extract_dim", false]], "extract_dim() (splinepy.rational_bezier.rationalbezier method)": [[443, "splinepy.rational_bezier.RationalBezier.extract_dim", false]], "extractor (class in splinepy.helpme.extract)": [[156, "splinepy.helpme.extract.Extractor", false]], "extruded() (in module splinepy.helpme.create)": [[145, "splinepy.helpme.create.extruded", false]], "extruded() (splinepy.helpme.create.creator method)": [[135, "splinepy.helpme.create.Creator.extruded", false]], "faces() (in module splinepy.helpme.extract)": [[179, "splinepy.helpme.extract.faces", false]], "faces() (splinepy.helpme.extract.extractor method)": [[167, "splinepy.helpme.extract.Extractor.faces", false]], "ffd (class in splinepy.helpme.ffd)": [[183, "splinepy.helpme.ffd.FFD", false]], "field_derivatives() (splinepy.helpme.mapper.mapper method)": [[209, "splinepy.helpme.mapper.Mapper.field_derivatives", false]], "fields (splinepy.multipatch.multipatch property)": [[382, "splinepy.multipatch.Multipatch.fields", false]], "fields() (splinepy.splinepy_core.pymultipatch method)": [[542, "splinepy.splinepy_core.PyMultipatch.fields", false]], "fill() (splinepy.utils.data.physicalspacearray method)": [[648, "splinepy.utils.data.PhysicalSpaceArray.fill", false]], "find_span() (splinepy.splinepy_core.knotvector method)": [[525, "splinepy.splinepy_core.KnotVector.find_span", false]], "flatten() (splinepy.utils.data.physicalspacearray method)": [[649, "splinepy.utils.data.PhysicalSpaceArray.flatten", false]], "flip_axes() (in module splinepy.helpme.reparametrize)": [[216, "splinepy.helpme.reparametrize.flip_axes", false]], "form_lines() (in module splinepy.io.ioutils)": [[258, "splinepy.io.ioutils.form_lines", false]], "from_bounds() (in module splinepy.helpme.create)": [[146, "splinepy.helpme.create.from_bounds", false]], "full_row_indices() (splinepy.utils.data.physicalspacearray method)": [[650, "splinepy.utils.data.PhysicalSpaceArray.full_row_indices", false]], "function (splinepy.utils.data.splinedataadaptor attribute)": [[698, "splinepy.utils.data.SplineDataAdaptor.function", false]], "get() (in module splinepy.microstructure.tiles)": [[331, "splinepy.microstructure.tiles.get", false]], "get() (splinepy.helpme.visualize.multipatchshowoption method)": [[222, "splinepy.helpme.visualize.MultipatchShowOption.get", false]], "get() (splinepy.helpme.visualize.splineshowoption method)": [[232, "splinepy.helpme.visualize.SplineShowOption.get", false]], "get() (splinepy.utils.data.multipatchdata method)": [[621, "splinepy.utils.data.MultipatchData.get", false]], "get() (splinepy.utils.data.splinedata method)": [[688, "splinepy.utils.data.SplineData.get", false]], "get_interfaces() (splinepy.multipatch.multipatch method)": [[383, "splinepy.multipatch.Multipatch.get_interfaces", false]], "get_interfaces() (splinepy.splinepy_core.pymultipatch method)": [[543, "splinepy.splinepy_core.PyMultipatch.get_interfaces", false]], "getfield() (splinepy.utils.data.physicalspacearray method)": [[651, "splinepy.utils.data.PhysicalSpaceArray.getfield", false]], "global_knot_insertion_matrix() (in module splinepy.splinepy_core)": [[602, "splinepy.splinepy_core.global_knot_insertion_matrix", false]], "gradient() (splinepy.helpme.mapper.mapper method)": [[210, "splinepy.helpme.mapper.Mapper.gradient", false]], "greville_abscissae() (splinepy.bezier.bezier method)": [[21, "splinepy.bezier.Bezier.greville_abscissae", false]], "greville_abscissae() (splinepy.bezier.bezierbase method)": [[50, "splinepy.bezier.BezierBase.greville_abscissae", false]], "greville_abscissae() (splinepy.bspline.bspline method)": [[76, "splinepy.bspline.BSpline.greville_abscissae", false]], "greville_abscissae() (splinepy.bspline.bsplinebase method)": [[105, "splinepy.bspline.BSplineBase.greville_abscissae", false]], "greville_abscissae() (splinepy.nurbs.nurbs method)": [[411, "splinepy.nurbs.NURBS.greville_abscissae", false]], "greville_abscissae() (splinepy.rational_bezier.rationalbezier method)": [[444, "splinepy.rational_bezier.RationalBezier.greville_abscissae", false]], "greville_abscissae() (splinepy.spline.spline method)": [[489, "splinepy.spline.Spline.greville_abscissae", false]], "has_core() (in module splinepy.splinepy_core)": [[603, "splinepy.splinepy_core.has_core", false]], "has_evaluate (splinepy.utils.data.splinedataadaptor attribute)": [[699, "splinepy.utils.data.SplineDataAdaptor.has_evaluate", false]], "has_function (splinepy.utils.data.splinedataadaptor attribute)": [[700, "splinepy.utils.data.SplineDataAdaptor.has_function", false]], "has_knot_vectors (splinepy.spline.spline property)": [[490, "splinepy.spline.Spline.has_knot_vectors", false]], "has_knot_vectors (splinepy.splinepy_core.pyspline property)": [[567, "splinepy.splinepy_core.PySpline.has_knot_vectors", false]], "has_locations (splinepy.utils.data.splinedataadaptor attribute)": [[701, "splinepy.utils.data.SplineDataAdaptor.has_locations", false]], "hessian() (splinepy.helpme.mapper.mapper method)": [[211, "splinepy.helpme.mapper.Mapper.hessian", false]], "hollowcube (class in splinepy.microstructure.tiles.hollow_cube)": [[333, "splinepy.microstructure.tiles.hollow_cube.HollowCube", false]], "hollowoctagon (class in splinepy.microstructure.tiles.hollow_octagon)": [[338, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", false]], "hollowoctagonextrude (class in splinepy.microstructure.tiles.hollow_octagon_extrude)": [[343, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", false]], "info() (in module splinepy.utils.log)": [[714, "splinepy.utils.log.info", false]], "insert_knots() (in module splinepy.splinepy_core)": [[604, "splinepy.splinepy_core.insert_knots", false]], "insert_knots() (splinepy.bspline.bspline method)": [[77, "splinepy.bspline.BSpline.insert_knots", false]], "insert_knots() (splinepy.bspline.bsplinebase method)": [[106, "splinepy.bspline.BSplineBase.insert_knots", false]], "insert_knots() (splinepy.nurbs.nurbs method)": [[412, "splinepy.nurbs.NURBS.insert_knots", false]], "integrate (splinepy.spline.spline property)": [[491, "splinepy.spline.Spline.integrate", false]], "integrator (class in splinepy.helpme.integrate)": [[196, "splinepy.helpme.integrate.Integrator", false]], "interface_orientations() (splinepy.multipatch.multipatch method)": [[384, "splinepy.multipatch.Multipatch.interface_orientations", false]], "interface_orientations() (splinepy.splinepy_core.pymultipatch method)": [[544, "splinepy.splinepy_core.PyMultipatch.interface_orientations", false]], "interfaces (splinepy.multipatch.multipatch property)": [[385, "splinepy.multipatch.Multipatch.interfaces", false]], "interfaces_from_boundary_centers() (in module splinepy.splinepy_core)": [[605, "splinepy.splinepy_core.interfaces_from_boundary_centers", false]], "intersection() (splinepy.spline.requiredproperties class method)": [[464, "splinepy.spline.RequiredProperties.intersection", false]], "inversecross3d (class in splinepy.microstructure.tiles.inverse_cross_3d)": [[349, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", false]], "is_minimal() (in module splinepy.splinepy_core)": [[606, "splinepy.splinepy_core.is_minimal", false]], "is_rational (splinepy.spline.spline property)": [[492, "splinepy.spline.Spline.is_rational", false]], "is_rational (splinepy.splinepy_core.pyspline property)": [[568, "splinepy.splinepy_core.PySpline.is_rational", false]], "is_spline (splinepy.utils.data.splinedataadaptor attribute)": [[702, "splinepy.utils.data.SplineDataAdaptor.is_spline", false]], "item() (splinepy.utils.data.physicalspacearray method)": [[652, "splinepy.utils.data.PhysicalSpaceArray.item", false]], "items() (splinepy.helpme.visualize.multipatchshowoption method)": [[223, "splinepy.helpme.visualize.MultipatchShowOption.items", false]], "items() (splinepy.helpme.visualize.splineshowoption method)": [[233, "splinepy.helpme.visualize.SplineShowOption.items", false]], "items() (splinepy.utils.data.multipatchdata method)": [[622, "splinepy.utils.data.MultipatchData.items", false]], "items() (splinepy.utils.data.splinedata method)": [[689, "splinepy.utils.data.SplineData.items", false]], "jacobian() (splinepy.bezier.bezier method)": [[22, "splinepy.bezier.Bezier.jacobian", false]], "jacobian() (splinepy.bezier.bezierbase method)": [[51, "splinepy.bezier.BezierBase.jacobian", false]], "jacobian() (splinepy.bspline.bspline method)": [[78, "splinepy.bspline.BSpline.jacobian", false]], "jacobian() (splinepy.bspline.bsplinebase method)": [[107, "splinepy.bspline.BSplineBase.jacobian", false]], "jacobian() (splinepy.nurbs.nurbs method)": [[413, "splinepy.nurbs.NURBS.jacobian", false]], "jacobian() (splinepy.rational_bezier.rationalbezier method)": [[445, "splinepy.rational_bezier.RationalBezier.jacobian", false]], "jacobian() (splinepy.spline.spline method)": [[493, "splinepy.spline.Spline.jacobian", false]], "jacobian() (splinepy.splinepy_core.pyspline method)": [[569, "splinepy.splinepy_core.PySpline.jacobian", false]], "keys() (splinepy.helpme.visualize.multipatchshowoption method)": [[224, "splinepy.helpme.visualize.MultipatchShowOption.keys", false]], "keys() (splinepy.helpme.visualize.splineshowoption method)": [[234, "splinepy.helpme.visualize.SplineShowOption.keys", false]], "keys() (splinepy.utils.data.multipatchdata method)": [[623, "splinepy.utils.data.MultipatchData.keys", false]], "keys() (splinepy.utils.data.splinedata method)": [[690, "splinepy.utils.data.SplineData.keys", false]], "knot_insertion_matrix() (in module splinepy.splinepy_core)": [[607, "splinepy.splinepy_core.knot_insertion_matrix", false]], "knot_insertion_matrix() (splinepy.bspline.bspline method)": [[79, "splinepy.bspline.BSpline.knot_insertion_matrix", false]], "knot_insertion_matrix() (splinepy.bspline.bsplinebase method)": [[108, "splinepy.bspline.BSplineBase.knot_insertion_matrix", false]], "knot_insertion_matrix() (splinepy.nurbs.nurbs method)": [[414, "splinepy.nurbs.NURBS.knot_insertion_matrix", false]], "knot_multiplicities (splinepy.spline.spline property)": [[494, "splinepy.spline.Spline.knot_multiplicities", false]], "knot_vectors (splinepy.spline.spline property)": [[495, "splinepy.spline.Spline.knot_vectors", false]], "knotvector (class in splinepy.splinepy_core)": [[524, "splinepy.splinepy_core.KnotVector", false]], "kvs (splinepy.spline.spline property)": [[496, "splinepy.spline.Spline.kvs", false]], "laplacian() (splinepy.helpme.mapper.mapper method)": [[212, "splinepy.helpme.mapper.Mapper.laplacian", false]], "len() (splinepy.splinepy_core.controlpointpointers method)": [[519, "splinepy.splinepy_core.ControlPointPointers.len", false]], "len() (splinepy.splinepy_core.weightpointers method)": [[580, "splinepy.splinepy_core.WeightPointers.len", false]], "line() (in module splinepy.helpme.create)": [[147, "splinepy.helpme.create.line", false]], "load() (in module splinepy.io.cats)": [[244, "splinepy.io.cats.load", false]], "load() (in module splinepy.io.default)": [[247, "splinepy.io.default.load", false]], "load() (in module splinepy.io.gismo)": [[250, "splinepy.io.gismo.load", false]], "load() (in module splinepy.io.iges)": [[253, "splinepy.io.iges.load", false]], "load() (in module splinepy.io.irit)": [[263, "splinepy.io.irit.load", false]], "load() (in module splinepy.io.json)": [[266, "splinepy.io.json.load", false]], "load() (in module splinepy.io.mfem)": [[271, "splinepy.io.mfem.load", false]], "load() (in module splinepy.io.npz)": [[275, "splinepy.io.npz.load", false]], "locations (splinepy.utils.data.splinedataadaptor attribute)": [[703, "splinepy.utils.data.SplineDataAdaptor.locations", false]], "make_matrix() (in module splinepy.utils.data)": [[708, "splinepy.utils.data.make_matrix", false]], "make_meaningful() (in module splinepy.io.ioutils)": [[259, "splinepy.io.ioutils.make_meaningful", false]], "make_showable() (in module splinepy.helpme.visualize)": [[239, "splinepy.helpme.visualize.make_showable", false]], "mapper (class in splinepy.helpme.mapper)": [[203, "splinepy.helpme.mapper.Mapper", false]], "mapper() (splinepy.bezier.bezier method)": [[23, "splinepy.bezier.Bezier.mapper", false]], "mapper() (splinepy.bezier.bezierbase method)": [[52, "splinepy.bezier.BezierBase.mapper", false]], "mapper() (splinepy.bspline.bspline method)": [[80, "splinepy.bspline.BSpline.mapper", false]], "mapper() (splinepy.bspline.bsplinebase method)": [[109, "splinepy.bspline.BSplineBase.mapper", false]], "mapper() (splinepy.nurbs.nurbs method)": [[415, "splinepy.nurbs.NURBS.mapper", false]], "mapper() (splinepy.rational_bezier.rationalbezier method)": [[446, "splinepy.rational_bezier.RationalBezier.mapper", false]], "mapper() (splinepy.spline.spline method)": [[497, "splinepy.spline.Spline.mapper", false]], "max() (splinepy.utils.data.physicalspacearray method)": [[653, "splinepy.utils.data.PhysicalSpaceArray.max", false]], "mean() (splinepy.utils.data.physicalspacearray method)": [[654, "splinepy.utils.data.PhysicalSpaceArray.mean", false]], "mesh (splinepy.helpme.ffd.ffd property)": [[184, "splinepy.helpme.ffd.FFD.mesh", false]], "microstructure (class in splinepy.microstructure.microstructure)": [[280, "splinepy.microstructure.microstructure.Microstructure", false]], "microtile (splinepy.microstructure.microstructure.microstructure property)": [[283, "splinepy.microstructure.microstructure.Microstructure.microtile", false]], "min() (splinepy.utils.data.physicalspacearray method)": [[655, "splinepy.utils.data.PhysicalSpaceArray.min", false]], "module": [[1, "module-splinepy", false], [2, "module-splinepy.bezier", false], [61, "module-splinepy.bspline", false], [120, "module-splinepy.cli", false], [124, "module-splinepy.helpme", false], [125, "module-splinepy.helpme.check", false], [131, "module-splinepy.helpme.create", false], [155, "module-splinepy.helpme.extract", false], [182, "module-splinepy.helpme.ffd", false], [189, "module-splinepy.helpme.fit", false], [195, "module-splinepy.helpme.integrate", false], [202, "module-splinepy.helpme.mapper", false], [213, "module-splinepy.helpme.multi_index", false], [215, "module-splinepy.helpme.reparametrize", false], [218, "module-splinepy.helpme.visualize", false], [241, "module-splinepy.io", false], [242, "module-splinepy.io.cats", false], [245, "module-splinepy.io.default", false], [248, "module-splinepy.io.gismo", false], [251, "module-splinepy.io.iges", false], [254, "module-splinepy.io.ioutils", false], [261, "module-splinepy.io.irit", false], [264, "module-splinepy.io.json", false], [267, "module-splinepy.io.mfem", false], [273, "module-splinepy.io.npz", false], [276, "module-splinepy.io.svg", false], [278, "module-splinepy.microstructure", false], [279, "module-splinepy.microstructure.microstructure", false], [288, "module-splinepy.microstructure.tiles", false], [289, "module-splinepy.microstructure.tiles.armadillo", false], [295, "module-splinepy.microstructure.tiles.chi", false], [300, "module-splinepy.microstructure.tiles.cross_2d", false], [305, "module-splinepy.microstructure.tiles.cross_3d", false], [310, "module-splinepy.microstructure.tiles.cross_3d_linear", false], [315, "module-splinepy.microstructure.tiles.cube_void", false], [320, "module-splinepy.microstructure.tiles.double_lattice", false], [325, "module-splinepy.microstructure.tiles.ellips_v_oid", false], [332, "module-splinepy.microstructure.tiles.hollow_cube", false], [337, "module-splinepy.microstructure.tiles.hollow_octagon", false], [342, "module-splinepy.microstructure.tiles.hollow_octagon_extrude", false], [348, "module-splinepy.microstructure.tiles.inverse_cross_3d", false], [354, "module-splinepy.microstructure.tiles.snappy", false], [359, "module-splinepy.microstructure.tiles.tile_base", false], [367, "module-splinepy.multipatch", false], [397, "module-splinepy.nurbs", false], [427, "module-splinepy.rational_bezier", false], [457, "module-splinepy.settings", false], [462, "module-splinepy.spline", false], [516, "module-splinepy.splinepy_core", false], [615, "module-splinepy.utils", false], [616, "module-splinepy.utils.data", false], [710, "module-splinepy.utils.log", false]], "multi_index (splinepy.spline.spline property)": [[498, "splinepy.spline.Spline.multi_index", false]], "multiindex (class in splinepy.helpme.multi_index)": [[214, "splinepy.helpme.multi_index.MultiIndex", false]], "multipatch (class in splinepy.multipatch)": [[368, "splinepy.multipatch.Multipatch", false]], "multipatchdata (class in splinepy.utils.data)": [[617, "splinepy.utils.data.MultipatchData", false]], "multipatchshowoption (class in splinepy.helpme.visualize)": [[219, "splinepy.helpme.visualize.MultipatchShowOption", false]], "multiplicities() (splinepy.splinepy_core.knotvector method)": [[526, "splinepy.splinepy_core.KnotVector.multiplicities", false]], "multiply() (in module splinepy.splinepy_core)": [[608, "splinepy.splinepy_core.multiply", false]], "n_default_threads (splinepy.splinepy_core.pymultipatch property)": [[545, "splinepy.splinepy_core.PyMultipatch.n_default_threads", false]], "name (splinepy.spline.spline property)": [[499, "splinepy.spline.Spline.name", false]], "name (splinepy.splinepy_core.pymultipatch property)": [[546, "splinepy.splinepy_core.PyMultipatch.name", false]], "name (splinepy.splinepy_core.pyspline property)": [[570, "splinepy.splinepy_core.PySpline.name", false]], "name_to_type (in module splinepy.settings)": [[459, "splinepy.settings.NAME_TO_TYPE", false]], "next_line() (in module splinepy.io.ioutils)": [[260, "splinepy.io.ioutils.next_line", false]], "nonzero() (splinepy.utils.data.physicalspacearray method)": [[656, "splinepy.utils.data.PhysicalSpaceArray.nonzero", false]], "normalize_knot_vectors() (splinepy.bspline.bspline method)": [[81, "splinepy.bspline.BSpline.normalize_knot_vectors", false]], "normalize_knot_vectors() (splinepy.bspline.bsplinebase method)": [[110, "splinepy.bspline.BSplineBase.normalize_knot_vectors", false]], "normalize_knot_vectors() (splinepy.nurbs.nurbs method)": [[416, "splinepy.nurbs.NURBS.normalize_knot_vectors", false]], "nthreads (in module splinepy.settings)": [[460, "splinepy.settings.NTHREADS", false]], "null_spline() (in module splinepy.splinepy_core)": [[609, "splinepy.splinepy_core.null_spline", false]], "numpy() (splinepy.splinepy_core.knotvector method)": [[527, "splinepy.splinepy_core.KnotVector.numpy", false]], "nurbs (class in splinepy.nurbs)": [[398, "splinepy.nurbs.NURBS", false]], "nurbs (splinepy.bezier.bezier property)": [[24, "splinepy.bezier.Bezier.nurbs", false]], "nurbs (splinepy.bspline.bspline property)": [[82, "splinepy.bspline.BSpline.nurbs", false]], "nurbs (splinepy.nurbs.nurbs property)": [[417, "splinepy.nurbs.NURBS.nurbs", false]], "nurbs (splinepy.rational_bezier.rationalbezier property)": [[447, "splinepy.rational_bezier.RationalBezier.nurbs", false]], "of() (splinepy.spline.requiredproperties class method)": [[465, "splinepy.spline.RequiredProperties.of", false]], "padding (splinepy.helpme.ffd.ffd property)": [[185, "splinepy.helpme.ffd.FFD.padding", false]], "para_dim (splinepy.microstructure.tiles.tile_base.tilebase attribute)": [[366, "splinepy.microstructure.tiles.tile_base.TileBase.para_dim", false]], "para_dim (splinepy.multipatch.multipatch property)": [[386, "splinepy.multipatch.Multipatch.para_dim", false]], "para_dim (splinepy.spline.spline property)": [[500, "splinepy.spline.Spline.para_dim", false]], "para_dim (splinepy.splinepy_core.pymultipatch property)": [[547, "splinepy.splinepy_core.PyMultipatch.para_dim", false]], "para_dim (splinepy.splinepy_core.pyspline property)": [[571, "splinepy.splinepy_core.PySpline.para_dim", false]], "parameter_sensitivity_function (splinepy.microstructure.microstructure.microstructure property)": [[284, "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", false]], "parameterize() (in module splinepy.helpme.fit)": [[192, "splinepy.helpme.fit.parameterize", false]], "parameterspace (class in splinepy.splinepy_core)": [[530, "splinepy.splinepy_core.ParameterSpace", false]], "parametric_bounds (splinepy.spline.spline property)": [[501, "splinepy.spline.Spline.parametric_bounds", false]], "parametric_bounds (splinepy.splinepy_core.pyspline property)": [[572, "splinepy.splinepy_core.PySpline.parametric_bounds", false]], "parametric_bounds (splinepy.utils.data.splinedataadaptor attribute)": [[704, "splinepy.utils.data.SplineDataAdaptor.parametric_bounds", false]], "parametric_function() (in module splinepy.helpme.integrate)": [[199, "splinepy.helpme.integrate.parametric_function", false]], "parametric_function() (splinepy.helpme.integrate.integrator method)": [[197, "splinepy.helpme.integrate.Integrator.parametric_function", false]], "parametric_view() (in module splinepy.helpme.create)": [[148, "splinepy.helpme.create.parametric_view", false]], "parametric_view() (splinepy.helpme.create.creator method)": [[136, "splinepy.helpme.create.Creator.parametric_view", false]], "parametrization_function (splinepy.microstructure.microstructure.microstructure property)": [[285, "splinepy.microstructure.microstructure.Microstructure.parametrization_function", false]], "partition() (splinepy.utils.data.physicalspacearray method)": [[657, "splinepy.utils.data.PhysicalSpaceArray.partition", false]], "patches (splinepy.multipatch.multipatch property)": [[387, "splinepy.multipatch.Multipatch.patches", false]], "patches (splinepy.splinepy_core.pymultipatch property)": [[548, "splinepy.splinepy_core.PyMultipatch.patches", false]], "permute_parametric_axes() (in module splinepy.helpme.reparametrize)": [[217, "splinepy.helpme.reparametrize.permute_parametric_axes", false]], "physical_function() (in module splinepy.helpme.integrate)": [[200, "splinepy.helpme.integrate.physical_function", false]], "physicalspacearray (class in splinepy.utils.data)": [[627, "splinepy.utils.data.PhysicalSpaceArray", false]], "plate() (in module splinepy.helpme.create)": [[149, "splinepy.helpme.create.plate", false]], "pop() (splinepy.helpme.visualize.multipatchshowoption method)": [[225, "splinepy.helpme.visualize.MultipatchShowOption.pop", false]], "pop() (splinepy.helpme.visualize.splineshowoption method)": [[235, "splinepy.helpme.visualize.SplineShowOption.pop", false]], "pop() (splinepy.utils.data.multipatchdata method)": [[624, "splinepy.utils.data.MultipatchData.pop", false]], "pop() (splinepy.utils.data.splinedata method)": [[691, "splinepy.utils.data.SplineData.pop", false]], "prepend_log() (in module splinepy.utils.log)": [[715, "splinepy.utils.log.prepend_log", false]], "prod() (splinepy.utils.data.physicalspacearray method)": [[658, "splinepy.utils.data.PhysicalSpaceArray.prod", false]], "proximities() (splinepy.bezier.bezier method)": [[25, "splinepy.bezier.Bezier.proximities", false]], "proximities() (splinepy.bezier.bezierbase method)": [[53, "splinepy.bezier.BezierBase.proximities", false]], "proximities() (splinepy.bspline.bspline method)": [[83, "splinepy.bspline.BSpline.proximities", false]], "proximities() (splinepy.bspline.bsplinebase method)": [[111, "splinepy.bspline.BSplineBase.proximities", false]], "proximities() (splinepy.nurbs.nurbs method)": [[418, "splinepy.nurbs.NURBS.proximities", false]], "proximities() (splinepy.rational_bezier.rationalbezier method)": [[448, "splinepy.rational_bezier.RationalBezier.proximities", false]], "proximities() (splinepy.spline.spline method)": [[502, "splinepy.spline.Spline.proximities", false]], "proximities() (splinepy.splinepy_core.pyspline method)": [[573, "splinepy.splinepy_core.PySpline.proximities", false]], "put() (splinepy.utils.data.physicalspacearray method)": [[659, "splinepy.utils.data.PhysicalSpaceArray.put", false]], "pymultipatch (class in splinepy.splinepy_core)": [[533, "splinepy.splinepy_core.PyMultipatch", false]], "pyramid() (in module splinepy.helpme.create)": [[150, "splinepy.helpme.create.pyramid", false]], "pyspline (class in splinepy.splinepy_core)": [[556, "splinepy.splinepy_core.PySpline", false]], "rationalbezier (class in splinepy.rational_bezier)": [[428, "splinepy.rational_bezier.RationalBezier", false]], "rationalbezier (splinepy.bezier.bezier property)": [[26, "splinepy.bezier.Bezier.rationalbezier", false]], "rationalbezier (splinepy.rational_bezier.rationalbezier property)": [[449, "splinepy.rational_bezier.RationalBezier.rationalbezier", false]], "ravel() (splinepy.utils.data.physicalspacearray method)": [[660, "splinepy.utils.data.PhysicalSpaceArray.ravel", false]], "read_iges() (in module splinepy.splinepy_core)": [[610, "splinepy.splinepy_core.read_iges", false]], "read_solution() (in module splinepy.io.mfem)": [[272, "splinepy.io.mfem.read_solution", false]], "reduce_degrees() (splinepy.bezier.bezier method)": [[27, "splinepy.bezier.Bezier.reduce_degrees", false]], "reduce_degrees() (splinepy.bezier.bezierbase method)": [[54, "splinepy.bezier.BezierBase.reduce_degrees", false]], "reduce_degrees() (splinepy.bspline.bspline method)": [[84, "splinepy.bspline.BSpline.reduce_degrees", false]], "reduce_degrees() (splinepy.bspline.bsplinebase method)": [[112, "splinepy.bspline.BSplineBase.reduce_degrees", false]], "reduce_degrees() (splinepy.nurbs.nurbs method)": [[419, "splinepy.nurbs.NURBS.reduce_degrees", false]], "reduce_degrees() (splinepy.rational_bezier.rationalbezier method)": [[450, "splinepy.rational_bezier.RationalBezier.reduce_degrees", false]], "reduce_degrees() (splinepy.spline.spline method)": [[503, "splinepy.spline.Spline.reduce_degrees", false]], "reduce_degrees() (splinepy.splinepy_core.pyspline method)": [[574, "splinepy.splinepy_core.PySpline.reduce_degrees", false]], "remove_knots() (in module splinepy.splinepy_core)": [[611, "splinepy.splinepy_core.remove_knots", false]], "remove_knots() (splinepy.bspline.bspline method)": [[85, "splinepy.bspline.BSpline.remove_knots", false]], "remove_knots() (splinepy.bspline.bsplinebase method)": [[113, "splinepy.bspline.BSplineBase.remove_knots", false]], "remove_knots() (splinepy.nurbs.nurbs method)": [[420, "splinepy.nurbs.NURBS.remove_knots", false]], "repeat() (splinepy.utils.data.physicalspacearray method)": [[661, "splinepy.utils.data.PhysicalSpaceArray.repeat", false]], "required_properties (splinepy.spline.spline property)": [[504, "splinepy.spline.Spline.required_properties", false]], "requiredproperties (class in splinepy.spline)": [[463, "splinepy.spline.RequiredProperties", false]], "reshape() (splinepy.utils.data.physicalspacearray method)": [[662, "splinepy.utils.data.PhysicalSpaceArray.reshape", false]], "resize() (splinepy.utils.data.physicalspacearray method)": [[663, "splinepy.utils.data.PhysicalSpaceArray.resize", false]], "revolved() (in module splinepy.helpme.create)": [[151, "splinepy.helpme.create.revolved", false]], "revolved() (splinepy.helpme.create.creator method)": [[137, "splinepy.helpme.create.Creator.revolved", false]], "round() (splinepy.utils.data.physicalspacearray method)": [[664, "splinepy.utils.data.PhysicalSpaceArray.round", false]], "row_indices() (splinepy.utils.data.physicalspacearray method)": [[665, "splinepy.utils.data.PhysicalSpaceArray.row_indices", false]], "same_parametric_bounds (splinepy.splinepy_core.pymultipatch property)": [[549, "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", false]], "same_spline_with_knot_vectors() (in module splinepy.splinepy_core)": [[612, "splinepy.splinepy_core.same_spline_with_knot_vectors", false]], "sample() (splinepy.bezier.bezier method)": [[28, "splinepy.bezier.Bezier.sample", false]], "sample() (splinepy.bezier.bezierbase method)": [[55, "splinepy.bezier.BezierBase.sample", false]], "sample() (splinepy.bspline.bspline method)": [[86, "splinepy.bspline.BSpline.sample", false]], "sample() (splinepy.bspline.bsplinebase method)": [[114, "splinepy.bspline.BSplineBase.sample", false]], "sample() (splinepy.multipatch.multipatch method)": [[388, "splinepy.multipatch.Multipatch.sample", false]], "sample() (splinepy.nurbs.nurbs method)": [[421, "splinepy.nurbs.NURBS.sample", false]], "sample() (splinepy.rational_bezier.rationalbezier method)": [[451, "splinepy.rational_bezier.RationalBezier.sample", false]], "sample() (splinepy.spline.spline method)": [[505, "splinepy.spline.Spline.sample", false]], "sample() (splinepy.splinepy_core.pymultipatch method)": [[550, "splinepy.splinepy_core.PyMultipatch.sample", false]], "sample() (splinepy.splinepy_core.pyspline method)": [[575, "splinepy.splinepy_core.PySpline.sample", false]], "scale() (splinepy.splinepy_core.knotvector method)": [[528, "splinepy.splinepy_core.KnotVector.scale", false]], "searchsorted() (splinepy.utils.data.physicalspacearray method)": [[666, "splinepy.utils.data.PhysicalSpaceArray.searchsorted", false]], "set_boundary() (splinepy.multipatch.multipatch method)": [[389, "splinepy.multipatch.Multipatch.set_boundary", false]], "set_interfaces() (splinepy.multipatch.multipatch method)": [[390, "splinepy.multipatch.Multipatch.set_interfaces", false]], "set_interfaces() (splinepy.splinepy_core.pymultipatch method)": [[551, "splinepy.splinepy_core.PyMultipatch.set_interfaces", false]], "set_row() (splinepy.splinepy_core.controlpointpointers method)": [[520, "splinepy.splinepy_core.ControlPointPointers.set_row", false]], "set_row() (splinepy.splinepy_core.weightpointers method)": [[581, "splinepy.splinepy_core.WeightPointers.set_row", false]], "set_rows() (splinepy.splinepy_core.controlpointpointers method)": [[521, "splinepy.splinepy_core.ControlPointPointers.set_rows", false]], "set_rows() (splinepy.splinepy_core.weightpointers method)": [[582, "splinepy.splinepy_core.WeightPointers.set_rows", false]], "setfield() (splinepy.utils.data.physicalspacearray method)": [[667, "splinepy.utils.data.PhysicalSpaceArray.setfield", false]], "setflags() (splinepy.utils.data.physicalspacearray method)": [[668, "splinepy.utils.data.PhysicalSpaceArray.setflags", false]], "show() (in module splinepy.cli)": [[123, "splinepy.cli.show", false]], "show() (in module splinepy.helpme.visualize)": [[240, "splinepy.helpme.visualize.show", false]], "show() (in module splinepy.microstructure.tiles)": [[353, "splinepy.microstructure.tiles.show", false]], "show() (splinepy.bezier.bezier method)": [[29, "splinepy.bezier.Bezier.show", false]], "show() (splinepy.bezier.bezierbase method)": [[56, "splinepy.bezier.BezierBase.show", false]], "show() (splinepy.bspline.bspline method)": [[87, "splinepy.bspline.BSpline.show", false]], "show() (splinepy.bspline.bsplinebase method)": [[115, "splinepy.bspline.BSplineBase.show", false]], "show() (splinepy.helpme.ffd.ffd method)": [[186, "splinepy.helpme.ffd.FFD.show", false]], "show() (splinepy.microstructure.microstructure.microstructure method)": [[286, "splinepy.microstructure.microstructure.Microstructure.show", false]], "show() (splinepy.multipatch.multipatch method)": [[391, "splinepy.multipatch.Multipatch.show", false]], "show() (splinepy.nurbs.nurbs method)": [[422, "splinepy.nurbs.NURBS.show", false]], "show() (splinepy.rational_bezier.rationalbezier method)": [[452, "splinepy.rational_bezier.RationalBezier.show", false]], "show() (splinepy.spline.spline method)": [[506, "splinepy.spline.Spline.show", false]], "show_options (splinepy.multipatch.multipatch property)": [[392, "splinepy.multipatch.Multipatch.show_options", false]], "show_options (splinepy.spline.spline property)": [[507, "splinepy.spline.Spline.show_options", false]], "showable() (splinepy.bezier.bezier method)": [[30, "splinepy.bezier.Bezier.showable", false]], "showable() (splinepy.bezier.bezierbase method)": [[57, "splinepy.bezier.BezierBase.showable", false]], "showable() (splinepy.bspline.bspline method)": [[88, "splinepy.bspline.BSpline.showable", false]], "showable() (splinepy.bspline.bsplinebase method)": [[116, "splinepy.bspline.BSplineBase.showable", false]], "showable() (splinepy.helpme.ffd.ffd method)": [[187, "splinepy.helpme.ffd.FFD.showable", false]], "showable() (splinepy.multipatch.multipatch method)": [[393, "splinepy.multipatch.Multipatch.showable", false]], "showable() (splinepy.nurbs.nurbs method)": [[423, "splinepy.nurbs.NURBS.showable", false]], "showable() (splinepy.rational_bezier.rationalbezier method)": [[453, "splinepy.rational_bezier.RationalBezier.showable", false]], "showable() (splinepy.spline.spline method)": [[508, "splinepy.spline.Spline.showable", false]], "snappy (class in splinepy.microstructure.tiles.snappy)": [[355, "splinepy.microstructure.tiles.snappy.Snappy", false]], "solve_for_control_points() (in module splinepy.helpme.fit)": [[193, "splinepy.helpme.fit.solve_for_control_points", false]], "sort() (splinepy.utils.data.physicalspacearray method)": [[669, "splinepy.utils.data.PhysicalSpaceArray.sort", false]], "sphere() (in module splinepy.helpme.create)": [[152, "splinepy.helpme.create.sphere", false]], "spline (class in splinepy.spline)": [[467, "splinepy.spline.Spline", false]], "spline (splinepy.helpme.ffd.ffd property)": [[188, "splinepy.helpme.ffd.FFD.spline", false]], "spline() (in module splinepy.helpme.extract)": [[180, "splinepy.helpme.extract.spline", false]], "spline() (splinepy.helpme.extract.extractor method)": [[168, "splinepy.helpme.extract.Extractor.spline", false]], "spline_data (splinepy.multipatch.multipatch property)": [[394, "splinepy.multipatch.Multipatch.spline_data", false]], "spline_data (splinepy.spline.spline property)": [[509, "splinepy.spline.Spline.spline_data", false]], "splinedata (class in splinepy.utils.data)": [[684, "splinepy.utils.data.SplineData", false]], "splinedataadaptor (class in splinepy.utils.data)": [[694, "splinepy.utils.data.SplineDataAdaptor", false]], "splinepy": [[1, "module-splinepy", false]], "splinepy.bezier": [[2, "module-splinepy.bezier", false]], "splinepy.bspline": [[61, "module-splinepy.bspline", false]], "splinepy.cli": [[120, "module-splinepy.cli", false]], "splinepy.helpme": [[124, "module-splinepy.helpme", false]], "splinepy.helpme.check": [[125, "module-splinepy.helpme.check", false]], "splinepy.helpme.create": [[131, "module-splinepy.helpme.create", false]], "splinepy.helpme.extract": [[155, "module-splinepy.helpme.extract", false]], "splinepy.helpme.ffd": [[182, "module-splinepy.helpme.ffd", false]], "splinepy.helpme.fit": [[189, "module-splinepy.helpme.fit", false]], "splinepy.helpme.integrate": [[195, "module-splinepy.helpme.integrate", false]], "splinepy.helpme.mapper": [[202, "module-splinepy.helpme.mapper", false]], "splinepy.helpme.multi_index": [[213, "module-splinepy.helpme.multi_index", false]], "splinepy.helpme.reparametrize": [[215, "module-splinepy.helpme.reparametrize", false]], "splinepy.helpme.visualize": [[218, "module-splinepy.helpme.visualize", false]], "splinepy.io": [[241, "module-splinepy.io", false]], "splinepy.io.cats": [[242, "module-splinepy.io.cats", false]], "splinepy.io.default": [[245, "module-splinepy.io.default", false]], "splinepy.io.gismo": [[248, "module-splinepy.io.gismo", false]], "splinepy.io.iges": [[251, "module-splinepy.io.iges", false]], "splinepy.io.ioutils": [[254, "module-splinepy.io.ioutils", false]], "splinepy.io.irit": [[261, "module-splinepy.io.irit", false]], "splinepy.io.json": [[264, "module-splinepy.io.json", false]], "splinepy.io.mfem": [[267, "module-splinepy.io.mfem", false]], "splinepy.io.npz": [[273, "module-splinepy.io.npz", false]], "splinepy.io.svg": [[276, "module-splinepy.io.svg", false]], "splinepy.microstructure": [[278, "module-splinepy.microstructure", false]], "splinepy.microstructure.microstructure": [[279, "module-splinepy.microstructure.microstructure", false]], "splinepy.microstructure.tiles": [[288, "module-splinepy.microstructure.tiles", false]], "splinepy.microstructure.tiles.armadillo": [[289, "module-splinepy.microstructure.tiles.armadillo", false]], "splinepy.microstructure.tiles.chi": [[295, "module-splinepy.microstructure.tiles.chi", false]], "splinepy.microstructure.tiles.cross_2d": [[300, "module-splinepy.microstructure.tiles.cross_2d", false]], "splinepy.microstructure.tiles.cross_3d": [[305, "module-splinepy.microstructure.tiles.cross_3d", false]], "splinepy.microstructure.tiles.cross_3d_linear": [[310, "module-splinepy.microstructure.tiles.cross_3d_linear", false]], "splinepy.microstructure.tiles.cube_void": [[315, "module-splinepy.microstructure.tiles.cube_void", false]], "splinepy.microstructure.tiles.double_lattice": [[320, "module-splinepy.microstructure.tiles.double_lattice", false]], "splinepy.microstructure.tiles.ellips_v_oid": [[325, "module-splinepy.microstructure.tiles.ellips_v_oid", false]], "splinepy.microstructure.tiles.hollow_cube": [[332, "module-splinepy.microstructure.tiles.hollow_cube", false]], "splinepy.microstructure.tiles.hollow_octagon": [[337, "module-splinepy.microstructure.tiles.hollow_octagon", false]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[342, "module-splinepy.microstructure.tiles.hollow_octagon_extrude", false]], "splinepy.microstructure.tiles.inverse_cross_3d": [[348, "module-splinepy.microstructure.tiles.inverse_cross_3d", false]], "splinepy.microstructure.tiles.snappy": [[354, "module-splinepy.microstructure.tiles.snappy", false]], "splinepy.microstructure.tiles.tile_base": [[359, "module-splinepy.microstructure.tiles.tile_base", false]], "splinepy.multipatch": [[367, "module-splinepy.multipatch", false]], "splinepy.nurbs": [[397, "module-splinepy.nurbs", false]], "splinepy.rational_bezier": [[427, "module-splinepy.rational_bezier", false]], "splinepy.settings": [[457, "module-splinepy.settings", false]], "splinepy.spline": [[462, "module-splinepy.spline", false]], "splinepy.splinepy_core": [[516, "module-splinepy.splinepy_core", false]], "splinepy.utils": [[615, "module-splinepy.utils", false]], "splinepy.utils.data": [[616, "module-splinepy.utils.data", false]], "splinepy.utils.log": [[710, "module-splinepy.utils.log", false]], "splineshowoption (class in splinepy.helpme.visualize)": [[229, "splinepy.helpme.visualize.SplineShowOption", false]], "split() (in module splinepy.splinepy_core)": [[613, "splinepy.splinepy_core.split", false]], "split() (splinepy.bezier.bezier method)": [[31, "splinepy.bezier.Bezier.split", false]], "split() (splinepy.bezier.bezierbase method)": [[58, "splinepy.bezier.BezierBase.split", false]], "split() (splinepy.rational_bezier.rationalbezier method)": [[454, "splinepy.rational_bezier.RationalBezier.split", false]], "squeeze() (splinepy.utils.data.physicalspacearray method)": [[670, "splinepy.utils.data.PhysicalSpaceArray.squeeze", false]], "std() (splinepy.utils.data.physicalspacearray method)": [[671, "splinepy.utils.data.PhysicalSpaceArray.std", false]], "sub_multipatch() (splinepy.multipatch.multipatch method)": [[395, "splinepy.multipatch.Multipatch.sub_multipatch", false]], "sub_multipatch() (splinepy.splinepy_core.pymultipatch method)": [[552, "splinepy.splinepy_core.PyMultipatch.sub_multipatch", false]], "sub_patch_centers (splinepy.multipatch.multipatch property)": [[396, "splinepy.multipatch.Multipatch.sub_patch_centers", false]], "sub_patch_centers() (splinepy.splinepy_core.pymultipatch method)": [[553, "splinepy.splinepy_core.PyMultipatch.sub_patch_centers", false]], "sum() (splinepy.utils.data.physicalspacearray method)": [[672, "splinepy.utils.data.PhysicalSpaceArray.sum", false]], "support() (splinepy.bezier.bezier method)": [[32, "splinepy.bezier.Bezier.support", false]], "support() (splinepy.bezier.bezierbase method)": [[59, "splinepy.bezier.BezierBase.support", false]], "support() (splinepy.bspline.bspline method)": [[89, "splinepy.bspline.BSpline.support", false]], "support() (splinepy.bspline.bsplinebase method)": [[117, "splinepy.bspline.BSplineBase.support", false]], "support() (splinepy.nurbs.nurbs method)": [[424, "splinepy.nurbs.NURBS.support", false]], "support() (splinepy.rational_bezier.rationalbezier method)": [[455, "splinepy.rational_bezier.RationalBezier.support", false]], "support() (splinepy.spline.spline method)": [[510, "splinepy.spline.Spline.support", false]], "support() (splinepy.splinepy_core.pyspline method)": [[576, "splinepy.splinepy_core.PySpline.support", false]], "surface() (in module splinepy.helpme.fit)": [[194, "splinepy.helpme.fit.surface", false]], "surface_circle() (in module splinepy.helpme.create)": [[153, "splinepy.helpme.create.surface_circle", false]], "swapaxes() (splinepy.utils.data.physicalspacearray method)": [[673, "splinepy.utils.data.PhysicalSpaceArray.swapaxes", false]], "sync() (splinepy.splinepy_core.controlpointpointers method)": [[522, "splinepy.splinepy_core.ControlPointPointers.sync", false]], "sync() (splinepy.splinepy_core.weightpointers method)": [[583, "splinepy.splinepy_core.WeightPointers.sync", false]], "sync_rows() (splinepy.splinepy_core.controlpointpointers method)": [[523, "splinepy.splinepy_core.ControlPointPointers.sync_rows", false]], "sync_rows() (splinepy.splinepy_core.weightpointers method)": [[584, "splinepy.splinepy_core.WeightPointers.sync_rows", false]], "take() (splinepy.utils.data.physicalspacearray method)": [[674, "splinepy.utils.data.PhysicalSpaceArray.take", false]], "tilebase (class in splinepy.microstructure.tiles.tile_base)": [[360, "splinepy.microstructure.tiles.tile_base.TileBase", false]], "tiling (splinepy.microstructure.microstructure.microstructure property)": [[287, "splinepy.microstructure.microstructure.Microstructure.tiling", false]], "to_derived() (in module splinepy)": [[614, "splinepy.to_derived", false]], "to_device() (splinepy.utils.data.physicalspacearray method)": [[675, "splinepy.utils.data.PhysicalSpaceArray.to_device", false]], "tobytes() (splinepy.utils.data.physicalspacearray method)": [[676, "splinepy.utils.data.PhysicalSpaceArray.tobytes", false]], "todict() (splinepy.bezier.bezier method)": [[33, "splinepy.bezier.Bezier.todict", false]], "todict() (splinepy.bezier.bezierbase method)": [[60, "splinepy.bezier.BezierBase.todict", false]], "todict() (splinepy.bspline.bspline method)": [[90, "splinepy.bspline.BSpline.todict", false]], "todict() (splinepy.bspline.bsplinebase method)": [[118, "splinepy.bspline.BSplineBase.todict", false]], "todict() (splinepy.nurbs.nurbs method)": [[425, "splinepy.nurbs.NURBS.todict", false]], "todict() (splinepy.rational_bezier.rationalbezier method)": [[456, "splinepy.rational_bezier.RationalBezier.todict", false]], "todict() (splinepy.spline.spline method)": [[511, "splinepy.spline.Spline.todict", false]], "tofile() (splinepy.utils.data.physicalspacearray method)": [[677, "splinepy.utils.data.PhysicalSpaceArray.tofile", false]], "tolerance (in module splinepy.settings)": [[461, "splinepy.settings.TOLERANCE", false]], "tolerance (splinepy.splinepy_core.pymultipatch property)": [[554, "splinepy.splinepy_core.PyMultipatch.tolerance", false]], "tolist() (splinepy.utils.data.physicalspacearray method)": [[678, "splinepy.utils.data.PhysicalSpaceArray.tolist", false]], "torus() (in module splinepy.helpme.create)": [[154, "splinepy.helpme.create.torus", false]], "tostring() (splinepy.utils.data.physicalspacearray method)": [[679, "splinepy.utils.data.PhysicalSpaceArray.tostring", false]], "trace() (splinepy.utils.data.physicalspacearray method)": [[680, "splinepy.utils.data.PhysicalSpaceArray.trace", false]], "transpose() (splinepy.utils.data.physicalspacearray method)": [[681, "splinepy.utils.data.PhysicalSpaceArray.transpose", false]], "uniform_query() (in module splinepy.utils.data)": [[709, "splinepy.utils.data.uniform_query", false]], "uniform_refine() (splinepy.bspline.bspline method)": [[91, "splinepy.bspline.BSpline.uniform_refine", false]], "uniform_refine() (splinepy.bspline.bsplinebase method)": [[119, "splinepy.bspline.BSplineBase.uniform_refine", false]], "uniform_refine() (splinepy.nurbs.nurbs method)": [[426, "splinepy.nurbs.NURBS.uniform_refine", false]], "union() (splinepy.spline.requiredproperties class method)": [[466, "splinepy.spline.RequiredProperties.union", false]], "unique() (splinepy.splinepy_core.knotvector method)": [[529, "splinepy.splinepy_core.KnotVector.unique", false]], "unique_knots (splinepy.spline.spline property)": [[512, "splinepy.spline.Spline.unique_knots", false]], "unique_knots() (splinepy.splinepy_core.parameterspace method)": [[532, "splinepy.splinepy_core.ParameterSpace.unique_knots", false]], "update() (splinepy.helpme.visualize.multipatchshowoption method)": [[226, "splinepy.helpme.visualize.MultipatchShowOption.update", false]], "update() (splinepy.helpme.visualize.splineshowoption method)": [[236, "splinepy.helpme.visualize.SplineShowOption.update", false]], "update() (splinepy.utils.data.multipatchdata method)": [[625, "splinepy.utils.data.MultipatchData.update", false]], "update() (splinepy.utils.data.splinedata method)": [[692, "splinepy.utils.data.SplineData.update", false]], "valid_keys() (splinepy.helpme.visualize.multipatchshowoption method)": [[227, "splinepy.helpme.visualize.MultipatchShowOption.valid_keys", false]], "valid_keys() (splinepy.helpme.visualize.splineshowoption method)": [[237, "splinepy.helpme.visualize.SplineShowOption.valid_keys", false]], "valid_queries() (in module splinepy.helpme.check)": [[130, "splinepy.helpme.check.valid_queries", false]], "valid_queries() (splinepy.helpme.check.checker method)": [[128, "splinepy.helpme.check.Checker.valid_queries", false]], "values() (splinepy.helpme.visualize.multipatchshowoption method)": [[228, "splinepy.helpme.visualize.MultipatchShowOption.values", false]], "values() (splinepy.helpme.visualize.splineshowoption method)": [[238, "splinepy.helpme.visualize.SplineShowOption.values", false]], "values() (splinepy.utils.data.multipatchdata method)": [[626, "splinepy.utils.data.MultipatchData.values", false]], "values() (splinepy.utils.data.splinedata method)": [[693, "splinepy.utils.data.SplineData.values", false]], "var() (splinepy.utils.data.physicalspacearray method)": [[682, "splinepy.utils.data.PhysicalSpaceArray.var", false]], "view() (splinepy.utils.data.physicalspacearray method)": [[683, "splinepy.utils.data.PhysicalSpaceArray.view", false]], "volume() (in module splinepy.helpme.integrate)": [[201, "splinepy.helpme.integrate.volume", false]], "volume() (splinepy.helpme.integrate.integrator method)": [[198, "splinepy.helpme.integrate.Integrator.volume", false]], "volumes() (in module splinepy.helpme.extract)": [[181, "splinepy.helpme.extract.volumes", false]], "volumes() (splinepy.helpme.extract.extractor method)": [[169, "splinepy.helpme.extract.Extractor.volumes", false]], "warning() (in module splinepy.utils.log)": [[716, "splinepy.utils.log.warning", false]], "weightpointers (class in splinepy.splinepy_core)": [[578, "splinepy.splinepy_core.WeightPointers", false]], "weights (splinepy.spline.spline property)": [[513, "splinepy.spline.Spline.weights", false]], "whatami (splinepy.spline.spline property)": [[514, "splinepy.spline.Spline.whatami", false]], "whatami (splinepy.splinepy_core.pymultipatch property)": [[555, "splinepy.splinepy_core.PyMultipatch.whatami", false]], "whatami (splinepy.splinepy_core.pyspline property)": [[577, "splinepy.splinepy_core.PySpline.whatami", false]], "ws (splinepy.spline.spline property)": [[515, "splinepy.spline.Spline.ws", false]]}, "objects": {"": [[1, 0, 0, "-", "splinepy"]], "splinepy": [[2, 0, 0, "-", "bezier"], [61, 0, 0, "-", "bspline"], [120, 0, 0, "-", "cli"], [124, 0, 0, "-", "helpme"], [241, 0, 0, "-", "io"], [278, 0, 0, "-", "microstructure"], [367, 0, 0, "-", "multipatch"], [397, 0, 0, "-", "nurbs"], [427, 0, 0, "-", "rational_bezier"], [457, 0, 0, "-", "settings"], [462, 0, 0, "-", "spline"], [516, 0, 0, "-", "splinepy_core"], [614, 4, 1, "", "to_derived"], [615, 0, 0, "-", "utils"]], "splinepy.bezier": [[3, 1, 1, "", "Bezier"], [34, 1, 1, "", "BezierBase"]], "splinepy.bezier.Bezier": [[4, 2, 1, "", "basis"], [5, 2, 1, "", "basis_and_support"], [6, 2, 1, "", "basis_derivative"], [7, 2, 1, "", "basis_derivative_and_support"], [8, 3, 1, "", "bezier"], [9, 3, 1, "", "bspline"], [10, 2, 1, "", "clear"], [11, 2, 1, "", "compose"], [12, 2, 1, "", "composition_derivative"], [13, 2, 1, "", "copy"], [14, 2, 1, "", "current_core_properties"], [15, 2, 1, "", "derivative"], [16, 2, 1, "", "derivative_spline"], [17, 2, 1, "", "elevate_degrees"], [18, 2, 1, "", "evaluate"], [19, 2, 1, "", "export"], [20, 2, 1, "", "extract_dim"], [21, 2, 1, "", "greville_abscissae"], [22, 2, 1, "", "jacobian"], [23, 2, 1, "", "mapper"], [24, 3, 1, "", "nurbs"], [25, 2, 1, "", "proximities"], [26, 3, 1, "", "rationalbezier"], [27, 2, 1, "", "reduce_degrees"], [28, 2, 1, "", "sample"], [29, 2, 1, "", "show"], [30, 2, 1, "", "showable"], [31, 2, 1, "", "split"], [32, 2, 1, "", "support"], [33, 2, 1, "", "todict"]], "splinepy.bezier.BezierBase": [[35, 2, 1, "", "basis"], [36, 2, 1, "", "basis_and_support"], [37, 2, 1, "", "basis_derivative"], [38, 2, 1, "", "basis_derivative_and_support"], [39, 2, 1, "", "clear"], [40, 2, 1, "", "compose"], [41, 2, 1, "", "composition_derivative"], [42, 2, 1, "", "copy"], [43, 2, 1, "", "current_core_properties"], [44, 2, 1, "", "derivative"], [45, 2, 1, "", "derivative_spline"], [46, 2, 1, "", "elevate_degrees"], [47, 2, 1, "", "evaluate"], [48, 2, 1, "", "export"], [49, 2, 1, "", "extract_dim"], [50, 2, 1, "", "greville_abscissae"], [51, 2, 1, "", "jacobian"], [52, 2, 1, "", "mapper"], [53, 2, 1, "", "proximities"], [54, 2, 1, "", "reduce_degrees"], [55, 2, 1, "", "sample"], [56, 2, 1, "", "show"], [57, 2, 1, "", "showable"], [58, 2, 1, "", "split"], [59, 2, 1, "", "support"], [60, 2, 1, "", "todict"]], "splinepy.bspline": [[62, 1, 1, "", "BSpline"], [92, 1, 1, "", "BSplineBase"]], "splinepy.bspline.BSpline": [[63, 2, 1, "", "basis"], [64, 2, 1, "", "basis_and_support"], [65, 2, 1, "", "basis_derivative"], [66, 2, 1, "", "basis_derivative_and_support"], [67, 3, 1, "", "bspline"], [68, 2, 1, "", "clear"], [69, 2, 1, "", "copy"], [70, 2, 1, "", "current_core_properties"], [71, 2, 1, "", "derivative"], [72, 2, 1, "", "elevate_degrees"], [73, 2, 1, "", "evaluate"], [74, 2, 1, "", "export"], [75, 2, 1, "", "extract_bezier_patches"], [76, 2, 1, "", "greville_abscissae"], [77, 2, 1, "", "insert_knots"], [78, 2, 1, "", "jacobian"], [79, 2, 1, "", "knot_insertion_matrix"], [80, 2, 1, "", "mapper"], [81, 2, 1, "", "normalize_knot_vectors"], [82, 3, 1, "", "nurbs"], [83, 2, 1, "", "proximities"], [84, 2, 1, "", "reduce_degrees"], [85, 2, 1, "", "remove_knots"], [86, 2, 1, "", "sample"], [87, 2, 1, "", "show"], [88, 2, 1, "", "showable"], [89, 2, 1, "", "support"], [90, 2, 1, "", "todict"], [91, 2, 1, "", "uniform_refine"]], "splinepy.bspline.BSplineBase": [[93, 2, 1, "", "basis"], [94, 2, 1, "", "basis_and_support"], [95, 2, 1, "", "basis_derivative"], [96, 2, 1, "", "basis_derivative_and_support"], [97, 2, 1, "", "clear"], [98, 2, 1, "", "copy"], [99, 2, 1, "", "current_core_properties"], [100, 2, 1, "", "derivative"], [101, 2, 1, "", "elevate_degrees"], [102, 2, 1, "", "evaluate"], [103, 2, 1, "", "export"], [104, 2, 1, "", "extract_bezier_patches"], [105, 2, 1, "", "greville_abscissae"], [106, 2, 1, "", "insert_knots"], [107, 2, 1, "", "jacobian"], [108, 2, 1, "", "knot_insertion_matrix"], [109, 2, 1, "", "mapper"], [110, 2, 1, "", "normalize_knot_vectors"], [111, 2, 1, "", "proximities"], [112, 2, 1, "", "reduce_degrees"], [113, 2, 1, "", "remove_knots"], [114, 2, 1, "", "sample"], [115, 2, 1, "", "show"], [116, 2, 1, "", "showable"], [117, 2, 1, "", "support"], [118, 2, 1, "", "todict"], [119, 2, 1, "", "uniform_refine"]], "splinepy.cli": [[121, 4, 1, "", "convert"], [122, 4, 1, "", "entry"], [123, 4, 1, "", "show"]], "splinepy.helpme": [[125, 0, 0, "-", "check"], [131, 0, 0, "-", "create"], [155, 0, 0, "-", "extract"], [182, 0, 0, "-", "ffd"], [189, 0, 0, "-", "fit"], [195, 0, 0, "-", "integrate"], [202, 0, 0, "-", "mapper"], [213, 0, 0, "-", "multi_index"], [215, 0, 0, "-", "reparametrize"], [218, 0, 0, "-", "visualize"]], "splinepy.helpme.check": [[126, 1, 1, "", "Checker"], [129, 4, 1, "", "clamped_knot_vectors"], [130, 4, 1, "", "valid_queries"]], "splinepy.helpme.check.Checker": [[127, 2, 1, "", "clamped_knot_vectors"], [128, 2, 1, "", "valid_queries"]], "splinepy.helpme.create": [[132, 1, 1, "", "Creator"], [138, 4, 1, "", "arc"], [139, 4, 1, "", "box"], [140, 4, 1, "", "circle"], [141, 4, 1, "", "cone"], [142, 4, 1, "", "determinant_spline"], [143, 4, 1, "", "disk"], [144, 4, 1, "", "embedded"], [145, 4, 1, "", "extruded"], [146, 4, 1, "", "from_bounds"], [147, 4, 1, "", "line"], [148, 4, 1, "", "parametric_view"], [149, 4, 1, "", "plate"], [150, 4, 1, "", "pyramid"], [151, 4, 1, "", "revolved"], [152, 4, 1, "", "sphere"], [153, 4, 1, "", "surface_circle"], [154, 4, 1, "", "torus"]], "splinepy.helpme.create.Creator": [[133, 2, 1, "", "determinant_spline"], [134, 2, 1, "", "embedded"], [135, 2, 1, "", "extruded"], [136, 2, 1, "", "parametric_view"], [137, 2, 1, "", "revolved"]], "splinepy.helpme.extract": [[156, 1, 1, "", "Extractor"], [170, 4, 1, "", "arrow_data"], [171, 4, 1, "", "bases"], [172, 4, 1, "", "boundaries"], [173, 4, 1, "", "control_edges"], [174, 4, 1, "", "control_faces"], [175, 4, 1, "", "control_mesh"], [176, 4, 1, "", "control_points"], [177, 4, 1, "", "control_volumes"], [178, 4, 1, "", "edges"], [179, 4, 1, "", "faces"], [180, 4, 1, "", "spline"], [181, 4, 1, "", "volumes"]], "splinepy.helpme.extract.Extractor": [[157, 2, 1, "", "arrow_data"], [158, 2, 1, "", "bases"], [159, 2, 1, "", "beziers"], [160, 2, 1, "", "boundaries"], [161, 2, 1, "", "control_edges"], [162, 2, 1, "", "control_faces"], [163, 2, 1, "", "control_mesh"], [164, 2, 1, "", "control_points"], [165, 2, 1, "", "control_volumes"], [166, 2, 1, "", "edges"], [167, 2, 1, "", "faces"], [168, 2, 1, "", "spline"], [169, 2, 1, "", "volumes"]], "splinepy.helpme.ffd": [[183, 1, 1, "", "FFD"]], "splinepy.helpme.ffd.FFD": [[184, 3, 1, "", "mesh"], [185, 3, 1, "", "padding"], [186, 2, 1, "", "show"], [187, 2, 1, "", "showable"], [188, 3, 1, "", "spline"]], "splinepy.helpme.fit": [[190, 4, 1, "", "compute_knot_vector"], [191, 4, 1, "", "curve"], [192, 4, 1, "", "parameterize"], [193, 4, 1, "", "solve_for_control_points"], [194, 4, 1, "", "surface"]], "splinepy.helpme.integrate": [[196, 1, 1, "", "Integrator"], [199, 4, 1, "", "parametric_function"], [200, 4, 1, "", "physical_function"], [201, 4, 1, "", "volume"]], "splinepy.helpme.integrate.Integrator": [[197, 2, 1, "", "parametric_function"], [198, 2, 1, "", "volume"]], "splinepy.helpme.mapper": [[203, 1, 1, "", "Mapper"]], "splinepy.helpme.mapper.Mapper": [[204, 2, 1, "", "basis_function_derivatives"], [205, 2, 1, "", "basis_gradient_and_support"], [206, 2, 1, "", "basis_hessian_and_support"], [207, 2, 1, "", "basis_laplacian_and_support"], [208, 2, 1, "", "divergence"], [209, 2, 1, "", "field_derivatives"], [210, 2, 1, "", "gradient"], [211, 2, 1, "", "hessian"], [212, 2, 1, "", "laplacian"]], "splinepy.helpme.multi_index": [[214, 1, 1, "", "MultiIndex"]], "splinepy.helpme.reparametrize": [[216, 4, 1, "", "flip_axes"], [217, 4, 1, "", "permute_parametric_axes"]], "splinepy.helpme.visualize": [[219, 1, 1, "", "MultipatchShowOption"], [229, 1, 1, "", "SplineShowOption"], [239, 4, 1, "", "make_showable"], [240, 4, 1, "", "show"]], "splinepy.helpme.visualize.MultipatchShowOption": [[220, 2, 1, "", "clear"], [221, 2, 1, "", "copy_valid_options"], [222, 2, 1, "", "get"], [223, 2, 1, "", "items"], [224, 2, 1, "", "keys"], [225, 2, 1, "", "pop"], [226, 2, 1, "", "update"], [227, 2, 1, "", "valid_keys"], [228, 2, 1, "", "values"]], "splinepy.helpme.visualize.SplineShowOption": [[230, 2, 1, "", "clear"], [231, 2, 1, "", "copy_valid_options"], [232, 2, 1, "", "get"], [233, 2, 1, "", "items"], [234, 2, 1, "", "keys"], [235, 2, 1, "", "pop"], [236, 2, 1, "", "update"], [237, 2, 1, "", "valid_keys"], [238, 2, 1, "", "values"]], "splinepy.io": [[242, 0, 0, "-", "cats"], [245, 0, 0, "-", "default"], [248, 0, 0, "-", "gismo"], [251, 0, 0, "-", "iges"], [254, 0, 0, "-", "ioutils"], [261, 0, 0, "-", "irit"], [264, 0, 0, "-", "json"], [267, 0, 0, "-", "mfem"], [273, 0, 0, "-", "npz"], [276, 0, 0, "-", "svg"]], "splinepy.io.cats": [[243, 4, 1, "", "export"], [244, 4, 1, "", "load"]], "splinepy.io.default": [[246, 4, 1, "", "export"], [247, 4, 1, "", "load"]], "splinepy.io.gismo": [[249, 4, 1, "", "export"], [250, 4, 1, "", "load"]], "splinepy.io.iges": [[252, 4, 1, "", "export"], [253, 4, 1, "", "load"]], "splinepy.io.ioutils": [[255, 4, 1, "", "abs_fname"], [256, 4, 1, "", "dict_to_spline"], [257, 4, 1, "", "expand_tabs"], [258, 4, 1, "", "form_lines"], [259, 4, 1, "", "make_meaningful"], [260, 4, 1, "", "next_line"]], "splinepy.io.irit": [[262, 4, 1, "", "export"], [263, 4, 1, "", "load"]], "splinepy.io.json": [[265, 4, 1, "", "export"], [266, 4, 1, "", "load"]], "splinepy.io.mfem": [[268, 4, 1, "", "dof_mapping"], [269, 4, 1, "", "export"], [270, 4, 1, "", "export_cartesian"], [271, 4, 1, "", "load"], [272, 4, 1, "", "read_solution"]], "splinepy.io.npz": [[274, 4, 1, "", "export"], [275, 4, 1, "", "load"]], "splinepy.io.svg": [[277, 4, 1, "", "export"]], "splinepy.microstructure": [[279, 0, 0, "-", "microstructure"], [288, 0, 0, "-", "tiles"]], "splinepy.microstructure.microstructure": [[280, 1, 1, "", "Microstructure"]], "splinepy.microstructure.microstructure.Microstructure": [[281, 2, 1, "", "create"], [282, 3, 1, "", "deformation_function"], [283, 3, 1, "", "microtile"], [284, 3, 1, "", "parameter_sensitivity_function"], [285, 3, 1, "", "parametrization_function"], [286, 2, 1, "", "show"], [287, 3, 1, "", "tiling"]], "splinepy.microstructure.tiles": [[289, 0, 0, "-", "armadillo"], [294, 4, 1, "", "by_dim"], [295, 0, 0, "-", "chi"], [300, 0, 0, "-", "cross_2d"], [305, 0, 0, "-", "cross_3d"], [310, 0, 0, "-", "cross_3d_linear"], [315, 0, 0, "-", "cube_void"], [320, 0, 0, "-", "double_lattice"], [325, 0, 0, "-", "ellips_v_oid"], [330, 4, 1, "", "everything"], [331, 4, 1, "", "get"], [332, 0, 0, "-", "hollow_cube"], [337, 0, 0, "-", "hollow_octagon"], [342, 0, 0, "-", "hollow_octagon_extrude"], [348, 0, 0, "-", "inverse_cross_3d"], [353, 4, 1, "", "show"], [354, 0, 0, "-", "snappy"], [359, 0, 0, "-", "tile_base"]], "splinepy.microstructure.tiles.armadillo": [[290, 1, 1, "", "Armadillo"]], "splinepy.microstructure.tiles.armadillo.Armadillo": [[291, 2, 1, "", "check_param_derivatives"], [292, 2, 1, "", "check_params"], [293, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.chi": [[296, 1, 1, "", "Chi"]], "splinepy.microstructure.tiles.chi.Chi": [[297, 2, 1, "", "check_param_derivatives"], [298, 2, 1, "", "check_params"], [299, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_2d": [[301, 1, 1, "", "Cross2D"]], "splinepy.microstructure.tiles.cross_2d.Cross2D": [[302, 2, 1, "", "check_param_derivatives"], [303, 2, 1, "", "check_params"], [304, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_3d": [[306, 1, 1, "", "Cross3D"]], "splinepy.microstructure.tiles.cross_3d.Cross3D": [[307, 2, 1, "", "check_param_derivatives"], [308, 2, 1, "", "check_params"], [309, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_3d_linear": [[311, 1, 1, "", "Cross3DLinear"]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear": [[312, 2, 1, "", "check_param_derivatives"], [313, 2, 1, "", "check_params"], [314, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cube_void": [[316, 1, 1, "", "CubeVoid"]], "splinepy.microstructure.tiles.cube_void.CubeVoid": [[317, 2, 1, "", "check_param_derivatives"], [318, 2, 1, "", "check_params"], [319, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.double_lattice": [[321, 1, 1, "", "DoubleLattice"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice": [[322, 2, 1, "", "check_param_derivatives"], [323, 2, 1, "", "check_params"], [324, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.ellips_v_oid": [[326, 1, 1, "", "EllipsVoid"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid": [[327, 2, 1, "", "check_param_derivatives"], [328, 2, 1, "", "check_params"], [329, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_cube": [[333, 1, 1, "", "HollowCube"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube": [[334, 2, 1, "", "check_param_derivatives"], [335, 2, 1, "", "check_params"], [336, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_octagon": [[338, 1, 1, "", "HollowOctagon"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon": [[339, 2, 1, "", "check_param_derivatives"], [340, 2, 1, "", "check_params"], [341, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[343, 1, 1, "", "HollowOctagonExtrude"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude": [[344, 2, 1, "", "check_param_derivatives"], [345, 2, 1, "", "check_params"], [346, 2, 1, "", "closing_tile"], [347, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.inverse_cross_3d": [[349, 1, 1, "", "InverseCross3D"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D": [[350, 2, 1, "", "check_param_derivatives"], [351, 2, 1, "", "check_params"], [352, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.snappy": [[355, 1, 1, "", "Snappy"]], "splinepy.microstructure.tiles.snappy.Snappy": [[356, 2, 1, "", "check_param_derivatives"], [357, 2, 1, "", "check_params"], [358, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.tile_base": [[360, 1, 1, "", "TileBase"]], "splinepy.microstructure.tiles.tile_base.TileBase": [[361, 2, 1, "", "check_param_derivatives"], [362, 2, 1, "", "check_params"], [363, 2, 1, "", "create_tile"], [364, 5, 1, "", "dim"], [365, 5, 1, "", "evaluation_points"], [366, 5, 1, "", "para_dim"]], "splinepy.multipatch": [[368, 1, 1, "", "Multipatch"]], "splinepy.multipatch.Multipatch": [[369, 2, 1, "", "add_fields"], [370, 3, 1, "", "boundaries"], [371, 2, 1, "", "boundaries_from_continuity"], [372, 2, 1, "", "boundary_from_function"], [373, 2, 1, "", "boundary_multipatch"], [374, 2, 1, "", "boundary_patch_ids"], [375, 2, 1, "", "clear"], [376, 2, 1, "", "combine_boundaries"], [377, 2, 1, "", "control_point_offsets"], [378, 2, 1, "", "determine_interfaces"], [379, 3, 1, "", "dim"], [380, 2, 1, "", "evaluate"], [381, 3, 1, "", "extract"], [382, 3, 1, "", "fields"], [383, 2, 1, "", "get_interfaces"], [384, 2, 1, "", "interface_orientations"], [385, 3, 1, "", "interfaces"], [386, 3, 1, "", "para_dim"], [387, 3, 1, "", "patches"], [388, 2, 1, "", "sample"], [389, 2, 1, "", "set_boundary"], [390, 2, 1, "", "set_interfaces"], [391, 2, 1, "", "show"], [392, 3, 1, "", "show_options"], [393, 2, 1, "", "showable"], [394, 3, 1, "", "spline_data"], [395, 2, 1, "", "sub_multipatch"], [396, 3, 1, "", "sub_patch_centers"]], "splinepy.nurbs": [[398, 1, 1, "", "NURBS"]], "splinepy.nurbs.NURBS": [[399, 2, 1, "", "basis"], [400, 2, 1, "", "basis_and_support"], [401, 2, 1, "", "basis_derivative"], [402, 2, 1, "", "basis_derivative_and_support"], [403, 2, 1, "", "clear"], [404, 2, 1, "", "copy"], [405, 2, 1, "", "current_core_properties"], [406, 2, 1, "", "derivative"], [407, 2, 1, "", "elevate_degrees"], [408, 2, 1, "", "evaluate"], [409, 2, 1, "", "export"], [410, 2, 1, "", "extract_bezier_patches"], [411, 2, 1, "", "greville_abscissae"], [412, 2, 1, "", "insert_knots"], [413, 2, 1, "", "jacobian"], [414, 2, 1, "", "knot_insertion_matrix"], [415, 2, 1, "", "mapper"], [416, 2, 1, "", "normalize_knot_vectors"], [417, 3, 1, "", "nurbs"], [418, 2, 1, "", "proximities"], [419, 2, 1, "", "reduce_degrees"], [420, 2, 1, "", "remove_knots"], [421, 2, 1, "", "sample"], [422, 2, 1, "", "show"], [423, 2, 1, "", "showable"], [424, 2, 1, "", "support"], [425, 2, 1, "", "todict"], [426, 2, 1, "", "uniform_refine"]], "splinepy.rational_bezier": [[428, 1, 1, "", "RationalBezier"]], "splinepy.rational_bezier.RationalBezier": [[429, 2, 1, "", "basis"], [430, 2, 1, "", "basis_and_support"], [431, 2, 1, "", "basis_derivative"], [432, 2, 1, "", "basis_derivative_and_support"], [433, 2, 1, "", "clear"], [434, 2, 1, "", "compose"], [435, 2, 1, "", "composition_derivative"], [436, 2, 1, "", "copy"], [437, 2, 1, "", "current_core_properties"], [438, 2, 1, "", "derivative"], [439, 2, 1, "", "derivative_spline"], [440, 2, 1, "", "elevate_degrees"], [441, 2, 1, "", "evaluate"], [442, 2, 1, "", "export"], [443, 2, 1, "", "extract_dim"], [444, 2, 1, "", "greville_abscissae"], [445, 2, 1, "", "jacobian"], [446, 2, 1, "", "mapper"], [447, 3, 1, "", "nurbs"], [448, 2, 1, "", "proximities"], [449, 3, 1, "", "rationalbezier"], [450, 2, 1, "", "reduce_degrees"], [451, 2, 1, "", "sample"], [452, 2, 1, "", "show"], [453, 2, 1, "", "showable"], [454, 2, 1, "", "split"], [455, 2, 1, "", "support"], [456, 2, 1, "", "todict"]], "splinepy.settings": [[458, 6, 1, "", "CHECK_BOUNDS"], [459, 6, 1, "", "NAME_TO_TYPE"], [460, 6, 1, "", "NTHREADS"], [461, 6, 1, "", "TOLERANCE"]], "splinepy.spline": [[463, 1, 1, "", "RequiredProperties"], [467, 1, 1, "", "Spline"]], "splinepy.spline.RequiredProperties": [[464, 2, 1, "", "intersection"], [465, 2, 1, "", "of"], [466, 2, 1, "", "union"]], "splinepy.spline.Spline": [[468, 2, 1, "", "basis"], [469, 2, 1, "", "basis_and_support"], [470, 2, 1, "", "basis_derivative"], [471, 2, 1, "", "basis_derivative_and_support"], [472, 3, 1, "", "check"], [473, 2, 1, "", "clear"], [474, 3, 1, "", "control_mesh_resolutions"], [475, 3, 1, "", "control_point_bounds"], [476, 3, 1, "", "control_points"], [477, 2, 1, "", "copy"], [478, 3, 1, "", "cps"], [479, 3, 1, "", "create"], [480, 2, 1, "", "current_core_properties"], [481, 3, 1, "", "degrees"], [482, 2, 1, "", "derivative"], [483, 3, 1, "", "dim"], [484, 3, 1, "", "ds"], [485, 2, 1, "", "elevate_degrees"], [486, 2, 1, "", "evaluate"], [487, 2, 1, "", "export"], [488, 3, 1, "", "extract"], [489, 2, 1, "", "greville_abscissae"], [490, 3, 1, "", "has_knot_vectors"], [491, 3, 1, "", "integrate"], [492, 3, 1, "", "is_rational"], [493, 2, 1, "", "jacobian"], [494, 3, 1, "", "knot_multiplicities"], [495, 3, 1, "", "knot_vectors"], [496, 3, 1, "", "kvs"], [497, 2, 1, "", "mapper"], [498, 3, 1, "", "multi_index"], [499, 3, 1, "", "name"], [500, 3, 1, "", "para_dim"], [501, 3, 1, "", "parametric_bounds"], [502, 2, 1, "", "proximities"], [503, 2, 1, "", "reduce_degrees"], [504, 3, 1, "", "required_properties"], [505, 2, 1, "", "sample"], [506, 2, 1, "", "show"], [507, 3, 1, "", "show_options"], [508, 2, 1, "", "showable"], [509, 3, 1, "", "spline_data"], [510, 2, 1, "", "support"], [511, 2, 1, "", "todict"], [512, 3, 1, "", "unique_knots"], [513, 3, 1, "", "weights"], [514, 3, 1, "", "whatami"], [515, 3, 1, "", "ws"]], "splinepy.splinepy_core": [[517, 1, 1, "", "ControlPointPointers"], [524, 1, 1, "", "KnotVector"], [530, 1, 1, "", "ParameterSpace"], [533, 1, 1, "", "PyMultipatch"], [556, 1, 1, "", "PySpline"], [578, 1, 1, "", "WeightPointers"], [585, 4, 1, "", "add"], [586, 4, 1, "", "annul_core"], [587, 4, 1, "", "bezier_extraction_matrix"], [588, 4, 1, "", "boundaries_from_continuity"], [589, 4, 1, "", "boundary_centers"], [590, 4, 1, "", "build_type"], [591, 4, 1, "", "compose"], [592, 4, 1, "", "compose_sensitivities"], [593, 4, 1, "", "composition_derivative"], [594, 4, 1, "", "core_id"], [595, 4, 1, "", "core_ref_count"], [596, 4, 1, "", "derivative_spline"], [597, 4, 1, "", "export_iges"], [598, 4, 1, "", "extract_all_boundary_splines"], [599, 4, 1, "", "extract_bezier_patches"], [600, 4, 1, "", "extract_boundaries"], [601, 4, 1, "", "extract_dim"], [602, 4, 1, "", "global_knot_insertion_matrix"], [603, 4, 1, "", "has_core"], [604, 4, 1, "", "insert_knots"], [605, 4, 1, "", "interfaces_from_boundary_centers"], [606, 4, 1, "", "is_minimal"], [607, 4, 1, "", "knot_insertion_matrix"], [608, 4, 1, "", "multiply"], [609, 4, 1, "", "null_spline"], [610, 4, 1, "", "read_iges"], [611, 4, 1, "", "remove_knots"], [612, 4, 1, "", "same_spline_with_knot_vectors"], [613, 4, 1, "", "split"]], "splinepy.splinepy_core.ControlPointPointers": [[518, 2, 1, "", "dim"], [519, 2, 1, "", "len"], [520, 2, 1, "", "set_row"], [521, 2, 1, "", "set_rows"], [522, 2, 1, "", "sync"], [523, 2, 1, "", "sync_rows"]], "splinepy.splinepy_core.KnotVector": [[525, 2, 1, "", "find_span"], [526, 2, 1, "", "multiplicities"], [527, 2, 1, "", "numpy"], [528, 2, 1, "", "scale"], [529, 2, 1, "", "unique"]], "splinepy.splinepy_core.ParameterSpace": [[531, 2, 1, "", "copy"], [532, 2, 1, "", "unique_knots"]], "splinepy.splinepy_core.PyMultipatch": [[534, 2, 1, "", "add_fields"], [535, 2, 1, "", "boundary_multipatch"], [536, 2, 1, "", "boundary_patch_ids"], [537, 2, 1, "", "clear"], [538, 2, 1, "", "control_point_offsets"], [539, 3, 1, "", "control_points"], [540, 3, 1, "", "dim"], [541, 2, 1, "", "evaluate"], [542, 2, 1, "", "fields"], [543, 2, 1, "", "get_interfaces"], [544, 2, 1, "", "interface_orientations"], [545, 3, 1, "", "n_default_threads"], [546, 3, 1, "", "name"], [547, 3, 1, "", "para_dim"], [548, 3, 1, "", "patches"], [549, 3, 1, "", "same_parametric_bounds"], [550, 2, 1, "", "sample"], [551, 2, 1, "", "set_interfaces"], [552, 2, 1, "", "sub_multipatch"], [553, 2, 1, "", "sub_patch_centers"], [554, 3, 1, "", "tolerance"], [555, 3, 1, "", "whatami"]], "splinepy.splinepy_core.PySpline": [[557, 2, 1, "", "basis"], [558, 2, 1, "", "basis_and_support"], [559, 2, 1, "", "basis_derivative"], [560, 2, 1, "", "basis_derivative_and_support"], [561, 3, 1, "", "control_mesh_resolutions"], [562, 2, 1, "", "current_core_properties"], [563, 2, 1, "", "derivative"], [564, 3, 1, "", "dim"], [565, 2, 1, "", "elevate_degrees"], [566, 2, 1, "", "evaluate"], [567, 3, 1, "", "has_knot_vectors"], [568, 3, 1, "", "is_rational"], [569, 2, 1, "", "jacobian"], [570, 3, 1, "", "name"], [571, 3, 1, "", "para_dim"], [572, 3, 1, "", "parametric_bounds"], [573, 2, 1, "", "proximities"], [574, 2, 1, "", "reduce_degrees"], [575, 2, 1, "", "sample"], [576, 2, 1, "", "support"], [577, 3, 1, "", "whatami"]], "splinepy.splinepy_core.WeightPointers": [[579, 2, 1, "", "dim"], [580, 2, 1, "", "len"], [581, 2, 1, "", "set_row"], [582, 2, 1, "", "set_rows"], [583, 2, 1, "", "sync"], [584, 2, 1, "", "sync_rows"]], "splinepy.utils": [[616, 0, 0, "-", "data"], [710, 0, 0, "-", "log"]], "splinepy.utils.data": [[617, 1, 1, "", "MultipatchData"], [627, 1, 1, "", "PhysicalSpaceArray"], [684, 1, 1, "", "SplineData"], [694, 1, 1, "", "SplineDataAdaptor"], [705, 4, 1, "", "cartesian_product"], [706, 4, 1, "", "enforce_contiguous"], [707, 4, 1, "", "enforce_contiguous_values"], [708, 4, 1, "", "make_matrix"], [709, 4, 1, "", "uniform_query"]], "splinepy.utils.data.MultipatchData": [[618, 2, 1, "", "as_arrow"], [619, 2, 1, "", "as_scalar"], [620, 2, 1, "", "clear"], [621, 2, 1, "", "get"], [622, 2, 1, "", "items"], [623, 2, 1, "", "keys"], [624, 2, 1, "", "pop"], [625, 2, 1, "", "update"], [626, 2, 1, "", "values"]], "splinepy.utils.data.PhysicalSpaceArray": [[628, 2, 1, "", "all"], [629, 2, 1, "", "any"], [630, 2, 1, "", "argmax"], [631, 2, 1, "", "argmin"], [632, 2, 1, "", "argpartition"], [633, 2, 1, "", "argsort"], [634, 2, 1, "", "astype"], [635, 2, 1, "", "byteswap"], [636, 2, 1, "", "choose"], [637, 2, 1, "", "clip"], [638, 2, 1, "", "compress"], [639, 2, 1, "", "conj"], [640, 2, 1, "", "conjugate"], [641, 2, 1, "", "copy"], [642, 2, 1, "", "cumprod"], [643, 2, 1, "", "cumsum"], [644, 2, 1, "", "diagonal"], [645, 2, 1, "", "dot"], [646, 2, 1, "", "dump"], [647, 2, 1, "", "dumps"], [648, 2, 1, "", "fill"], [649, 2, 1, "", "flatten"], [650, 2, 1, "", "full_row_indices"], [651, 2, 1, "", "getfield"], [652, 2, 1, "", "item"], [653, 2, 1, "", "max"], [654, 2, 1, "", "mean"], [655, 2, 1, "", "min"], [656, 2, 1, "", "nonzero"], [657, 2, 1, "", "partition"], [658, 2, 1, "", "prod"], [659, 2, 1, "", "put"], [660, 2, 1, "", "ravel"], [661, 2, 1, "", "repeat"], [662, 2, 1, "", "reshape"], [663, 2, 1, "", "resize"], [664, 2, 1, "", "round"], [665, 2, 1, "", "row_indices"], [666, 2, 1, "", "searchsorted"], [667, 2, 1, "", "setfield"], [668, 2, 1, "", "setflags"], [669, 2, 1, "", "sort"], [670, 2, 1, "", "squeeze"], [671, 2, 1, "", "std"], [672, 2, 1, "", "sum"], [673, 2, 1, "", "swapaxes"], [674, 2, 1, "", "take"], [675, 2, 1, "", "to_device"], [676, 2, 1, "", "tobytes"], [677, 2, 1, "", "tofile"], [678, 2, 1, "", "tolist"], [679, 2, 1, "", "tostring"], [680, 2, 1, "", "trace"], [681, 2, 1, "", "transpose"], [682, 2, 1, "", "var"], [683, 2, 1, "", "view"]], "splinepy.utils.data.SplineData": [[685, 2, 1, "", "as_arrow"], [686, 2, 1, "", "as_scalar"], [687, 2, 1, "", "clear"], [688, 2, 1, "", "get"], [689, 2, 1, "", "items"], [690, 2, 1, "", "keys"], [691, 2, 1, "", "pop"], [692, 2, 1, "", "update"], [693, 2, 1, "", "values"]], "splinepy.utils.data.SplineDataAdaptor": [[695, 5, 1, "", "arrow_data_only"], [696, 2, 1, "", "as_vertex_data"], [697, 5, 1, "", "data"], [698, 5, 1, "", "function"], [699, 5, 1, "", "has_evaluate"], [700, 5, 1, "", "has_function"], [701, 5, 1, "", "has_locations"], [702, 5, 1, "", "is_spline"], [703, 5, 1, "", "locations"], [704, 5, 1, "", "parametric_bounds"]], "splinepy.utils.log": [[711, 4, 1, "", "configure"], [712, 4, 1, "", "debug"], [713, 4, 1, "", "error"], [714, 4, 1, "", "info"], [715, 4, 1, "", "prepend_log"], [716, 4, 1, "", "warning"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:data"}, "terms": {"": [0, 3, 11, 12, 25, 40, 41, 53, 62, 83, 91, 111, 119, 135, 145, 183, 185, 203, 242, 316, 326, 398, 418, 426, 428, 434, 435, 448, 502, 652, 667, 676, 677, 679, 681, 708, 718, 720], "0": [3, 31, 34, 58, 62, 79, 81, 92, 108, 110, 133, 138, 140, 141, 142, 143, 149, 152, 154, 166, 178, 183, 194, 277, 293, 304, 309, 314, 324, 341, 346, 347, 352, 358, 373, 385, 398, 414, 416, 428, 454, 632, 634, 635, 644, 646, 648, 650, 651, 652, 657, 663, 664, 667, 668, 669, 671, 672, 676, 677, 678, 679, 680, 681, 682, 718, 720], "000": 667, "01": [293, 304, 309, 314, 346, 347], "05": 277, "0d": 678, "0e": 667, "0x1": 635, "0x100": 635, "0x2233": 635, "0x3322": 635, "1": [3, 4, 5, 6, 7, 15, 21, 25, 31, 32, 34, 35, 36, 37, 38, 44, 50, 53, 58, 59, 62, 63, 64, 65, 66, 71, 76, 79, 81, 82, 83, 89, 91, 92, 93, 94, 95, 96, 100, 105, 108, 110, 111, 117, 119, 132, 136, 138, 140, 143, 147, 148, 149, 152, 154, 160, 161, 172, 173, 190, 191, 193, 194, 203, 205, 206, 207, 211, 269, 273, 277, 304, 309, 314, 319, 329, 341, 346, 347, 352, 358, 373, 374, 385, 398, 399, 400, 401, 402, 406, 411, 414, 416, 418, 424, 426, 428, 429, 430, 431, 432, 438, 444, 448, 454, 455, 460, 468, 469, 470, 471, 479, 482, 489, 502, 510, 513, 515, 535, 536, 544, 557, 558, 559, 560, 563, 566, 569, 573, 575, 576, 588, 598, 632, 633, 634, 635, 644, 646, 648, 649, 651, 652, 657, 658, 663, 667, 668, 669, 676, 677, 678, 679, 680, 681, 720], "10": [0, 269, 467, 662], "100": [166, 178, 718], "102": 277, "11": [461, 662], "11144513": 705, "1156": 718, "12": 651, "123": 652, "126": 718, "128": 718, "13": 718, "13090": 635, "15": [358, 669, 718], "156": 277, "157": 277, "16": 651, "17": [634, 646, 677], "19": 679, "1910": 720, "194": 720, "1996": 720, "1999": 720, "1d": [678, 709, 720], "1e": [461, 718], "2": [0, 3, 25, 53, 62, 79, 83, 92, 108, 111, 140, 143, 146, 149, 152, 154, 162, 167, 174, 179, 194, 203, 211, 257, 277, 319, 329, 341, 346, 347, 358, 385, 398, 414, 418, 428, 448, 475, 501, 502, 634, 635, 648, 649, 651, 652, 657, 663, 668, 669, 676, 678, 681, 720], "20": [25, 53, 83, 111, 418, 448, 502], "200": 720, "2001": 720, "2005": 720, "201": [718, 720], "2017": [133, 142], "2021": [133, 142], "22": 657, "25": 398, "256": [635, 718], "293": 718, "2d": [267, 271, 296, 370, 678, 694, 705, 709, 718, 720], "2j": [160, 172], "2u": 720, "3": [0, 3, 62, 132, 140, 167, 169, 177, 179, 181, 269, 277, 293, 319, 329, 358, 385, 398, 428, 635, 648, 649, 652, 657, 663, 667, 668, 669, 676, 678, 681, 720], "32": 651, "323": 667, "33": 718, "360": [141, 143, 152], "39": 720, "3d": [0, 271, 291, 297, 302, 307, 312, 317, 322, 327, 333, 334, 339, 343, 344, 350, 356, 361, 720], "4": [143, 154, 277, 304, 319, 329, 352, 385, 479, 649, 651, 657, 669, 678, 681, 720], "41": 720, "4135": 720, "414": 718, "4195": 720, "49": [293, 304, 309, 314, 346, 347], "49445693": 705, "5": [269, 277, 324, 341, 398, 428, 634, 668, 720], "50": 718, "513": 260, "587": 718, "5e": 667, "6": [309, 314, 652, 720], "634": 249, "65": 718, "7": [652, 668, 720], "707": 718, "75": 398, "78": 718, "8": [0, 632, 651, 657, 668, 718, 720], "87": 718, "8755": 635, "9": [634, 644, 652, 668, 676, 718], "90": 138, "9091": 718, "911": 718, "955": 718, "A": [3, 62, 79, 92, 108, 133, 142, 260, 333, 398, 414, 428, 634, 635, 646, 649, 651, 652, 657, 668, 669, 676, 679, 694, 708], "As": [92, 677, 720], "At": 720, "BE": [133, 142], "By": [91, 119, 426, 428, 634, 651], "For": [0, 3, 25, 34, 53, 62, 83, 92, 111, 398, 418, 428, 448, 467, 502, 652, 662, 666, 678, 718, 720], "If": [11, 21, 25, 40, 50, 53, 76, 83, 92, 105, 111, 127, 129, 134, 135, 136, 144, 145, 148, 167, 179, 186, 216, 217, 246, 247, 249, 255, 260, 265, 281, 363, 372, 385, 389, 411, 418, 434, 444, 448, 459, 464, 466, 489, 502, 621, 634, 635, 651, 657, 663, 677, 678, 688, 694, 705, 706, 707, 708, 720], "In": [92, 167, 179, 183, 284, 285, 293, 304, 309, 314, 336, 341, 346, 347, 358, 459, 644, 657, 705, 718], "It": [79, 108, 185, 260, 414, 717, 720], "One": [293, 341, 346, 347, 637, 720], "That": 346, "The": [25, 34, 53, 83, 111, 138, 140, 143, 160, 172, 183, 203, 249, 293, 304, 309, 314, 319, 326, 329, 385, 418, 448, 467, 502, 635, 646, 648, 649, 651, 657, 663, 667, 668, 669, 676, 677, 678, 718, 720], "Then": 720, "There": [668, 718, 720], "These": [186, 668, 720], "To": [0, 183, 380, 634, 694, 720], "Will": [136, 148, 286, 309, 314, 467], "With": [25, 53, 62, 83, 111, 203, 418, 448, 502, 708, 720], "_": [62, 203, 398, 428, 720], "__call__": 465, "__getitem__": [214, 465], "__init__": [3, 34, 62, 92, 288, 398, 428, 459], "__qualname__": 499, "__setitem__": [226, 236, 625, 692], "_closing_til": [309, 314], "_imag": 277, "_io": 260, "_n": 720, "_set": 0, "_spline": 188, "_weight": [513, 515], "a_": 203, "a_i": 203, "a_list": 678, "a_tolist": 678, "aabb": [25, 53, 83, 111, 418, 448, 502], "abbrevi": 0, "abcissa": 718, "abl": 718, "about": [133, 142, 668, 718], "abov": [663, 718, 720], "above_text": 720, "abs_fnam": 717, "abscissa": [21, 50, 76, 105, 411, 444, 489], "absolut": [255, 277, 370], "abspath": 255, "abstract": 462, "acceler": 458, "accept": [353, 646, 677, 720], "access": [203, 498, 652, 668, 718], "accord": [184, 668], "accordingli": [3, 62, 398, 428, 694], "achiev": [164, 165, 176, 216, 398], "across": 720, "act": [316, 326], "activ": [0, 249], "actual": [668, 669, 720], "ad": [632, 657, 669, 676], "adamm": [316, 326], "adapt": 705, "adata_edg": [157, 170], "adata_nam": [157, 170], "add": [134, 144, 369, 389, 717, 720], "add_field": 717, "addit": [34, 191, 194, 250, 398, 718, 720], "addition": [678, 720], "addon": 720, "adequ": 192, "adjac": [21, 50, 76, 105, 384, 411, 444, 489], "adjust": 240, "admiss": 369, "affect": 668, "after": 720, "again": [34, 720], "aid": 720, "algorithm": [657, 669], "alia": 679, "align": 668, "all": [3, 11, 33, 34, 40, 60, 62, 75, 79, 81, 82, 90, 91, 92, 104, 108, 110, 118, 119, 158, 159, 160, 166, 171, 172, 178, 220, 230, 249, 263, 291, 294, 297, 302, 307, 312, 317, 319, 322, 327, 329, 330, 334, 339, 344, 350, 356, 361, 363, 372, 373, 376, 382, 398, 410, 414, 416, 425, 426, 428, 434, 456, 464, 466, 467, 511, 634, 639, 648, 657, 659, 668, 669, 678, 717, 718, 720], "all_knot": [166, 178], "allclos": [79, 108, 414, 718], "alloc": 634, "allow": [126, 156, 166, 178, 428, 634, 662, 718, 720], "almost": 678, "alon": 694, "along": [28, 31, 55, 58, 79, 86, 92, 108, 114, 135, 143, 145, 154, 319, 329, 388, 414, 421, 451, 454, 505, 630, 631, 638, 642, 643, 653, 654, 655, 657, 669, 671, 680, 682], "alpha": [12, 41, 240, 435, 720], "also": [0, 3, 11, 25, 34, 40, 53, 62, 83, 111, 123, 127, 129, 194, 209, 398, 418, 428, 434, 448, 502, 706, 707, 717, 718, 720], "altern": [681, 718], "although": [3, 62, 398, 428, 678], "alwai": [34, 136, 148, 222, 232, 621, 634, 648, 663, 677, 688, 720], "am": 514, "amax": 653, "ambient": 720, "amin": 655, "an": [11, 12, 40, 41, 133, 135, 137, 140, 142, 145, 151, 183, 277, 316, 326, 329, 352, 376, 385, 398, 428, 434, 435, 467, 635, 636, 637, 647, 651, 652, 657, 661, 662, 663, 669, 674, 677, 678, 681, 706, 707, 718], "analysi": [718, 720], "analyst": 720, "angl": [137, 138, 141, 143, 151, 152, 154, 299, 371, 718], "ani": [25, 53, 83, 111, 186, 353, 369, 418, 448, 459, 461, 502, 634, 676, 694, 717, 718, 720], "annul_cor": 717, "anoth": [0, 121, 467, 663, 668, 718], "answer": [514, 705], "anyth": 394, "api": [668, 718], "appar": 720, "appear": [634, 720], "append": [249, 277], "appli": [183, 184, 293, 304, 309, 314, 319, 329, 336, 341, 346, 347, 358, 624, 678, 691, 720], "applic": [81, 110, 137, 151, 186, 208, 217, 416, 694, 708, 717, 720], "appreci": 0, "appropri": [668, 694, 717], "approxim": [133, 142, 191, 192, 193, 194, 277, 708], "ar": [0, 3, 13, 19, 21, 25, 34, 42, 48, 50, 53, 62, 69, 74, 76, 77, 79, 83, 85, 92, 98, 103, 105, 106, 108, 111, 113, 121, 128, 130, 136, 148, 154, 167, 179, 183, 186, 191, 192, 193, 194, 203, 209, 240, 249, 269, 273, 277, 293, 304, 309, 314, 319, 324, 329, 341, 347, 352, 358, 370, 371, 380, 385, 387, 389, 398, 404, 409, 411, 412, 414, 418, 420, 428, 436, 442, 444, 448, 477, 487, 489, 499, 502, 634, 635, 637, 646, 651, 652, 656, 657, 663, 668, 677, 678, 694, 706, 707, 717, 718], "arang": 665, "arbitrari": [186, 265, 718, 720], "arc": [428, 717], "architectur": 720, "archiv": 677, "area": [663, 668], "arg": [0, 34, 92, 121, 123, 225, 235, 258, 641, 652, 683], "arg0": 525, "argmax": 717, "argmin": 717, "argpars": [121, 123], "argpartit": [657, 717], "argsort": [669, 717], "argument": [0, 3, 11, 34, 40, 62, 79, 92, 108, 134, 135, 137, 144, 145, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 204, 209, 398, 414, 428, 434, 652, 657, 662, 663, 669, 681, 718, 720], "arithmet": 652, "armadillo": 717, "around": [137, 138, 140, 151, 152, 154, 277, 299, 319, 329, 664], "arr": [650, 665], "arr_t": 634, "arrai": [4, 5, 6, 7, 15, 16, 18, 22, 25, 28, 31, 32, 35, 36, 37, 38, 44, 45, 47, 51, 53, 55, 58, 59, 62, 63, 64, 65, 66, 71, 73, 78, 79, 83, 86, 89, 93, 94, 95, 96, 100, 102, 107, 108, 111, 114, 117, 128, 130, 146, 147, 190, 191, 192, 193, 194, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 240, 268, 291, 293, 297, 299, 302, 304, 307, 309, 312, 314, 317, 319, 322, 324, 327, 329, 334, 339, 341, 344, 347, 350, 352, 356, 358, 361, 370, 372, 376, 378, 380, 384, 385, 389, 399, 400, 401, 402, 406, 408, 413, 414, 418, 421, 424, 428, 429, 430, 431, 432, 438, 439, 441, 445, 448, 451, 454, 455, 467, 468, 469, 470, 471, 482, 486, 493, 494, 502, 505, 510, 513, 515, 527, 618, 627, 632, 633, 634, 635, 636, 637, 638, 641, 644, 646, 647, 648, 649, 651, 652, 654, 657, 658, 660, 661, 662, 663, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 680, 681, 682, 685, 694, 696, 705, 706, 707, 709, 718, 720], "arrang": 720, "arrow": [277, 618, 685, 694, 720], "arrow_data": [717, 720], "arrow_data_color": 720, "arrow_data_on": 720, "arrow_data_onli": 717, "arrow_data_scal": 720, "arrow_data_toler": 277, "arrow_head_length": 277, "arrow_head_width": 277, "arrow_headaxis_length": 277, "arrow_width": 277, "as_arrai": 708, "as_arrow": 717, "as_base64": 249, "as_scalar": 717, "as_vertex_data": 717, "asarrai": 706, "ask": 720, "aspect": 277, "assembl": 249, "assembli": 209, "assert": 718, "assign": [265, 372, 389, 648, 718], "associ": [11, 40, 92, 203, 434, 708], "associated_queri": [191, 194], "assum": [203, 720], "astyp": 717, "attain": 720, "attribut": [3, 34, 62, 92, 183, 249, 280, 284, 285, 290, 296, 301, 306, 311, 316, 321, 326, 333, 338, 343, 349, 355, 360, 368, 398, 428, 457, 467, 533, 556, 627, 694, 718], "autodoc": 720, "aux": 371, "avail": [34, 79, 92, 108, 204, 209, 249, 294, 414, 488, 491, 652, 708, 717, 718, 720], "averag": 654, "avoid": [25, 53, 83, 111, 183, 418, 448, 502, 634], "awar": [19, 48, 74, 103, 186, 409, 442, 487], "ax": [136, 148, 216, 670, 681, 720], "axi": [77, 106, 137, 138, 150, 151, 152, 154, 160, 172, 319, 329, 412, 479, 628, 629, 630, 631, 632, 633, 638, 642, 643, 653, 654, 655, 657, 658, 661, 669, 670, 671, 672, 674, 681, 682, 718], "axis1": [644, 673, 680], "axis2": [644, 673, 680], "b": [0, 3, 21, 34, 50, 62, 76, 92, 105, 133, 142, 203, 277, 358, 398, 411, 428, 444, 467, 489, 585, 608, 635, 663, 669, 676, 718], "b64": 249, "b_": 203, "b_i": [11, 40, 203, 434], "b_m": 203, "b_mh": 203, "back": [646, 647], "backend": [240, 720], "background": 277, "backward": [634, 669], "badg": 718, "bar": 203, "base": [3, 34, 62, 92, 126, 132, 141, 150, 156, 163, 175, 183, 196, 203, 214, 219, 229, 280, 281, 284, 290, 293, 296, 299, 301, 304, 306, 309, 311, 314, 316, 321, 324, 326, 331, 333, 336, 338, 341, 343, 347, 349, 352, 353, 355, 358, 360, 368, 396, 398, 428, 463, 467, 517, 524, 530, 533, 556, 578, 614, 617, 627, 634, 668, 678, 684, 694, 706, 717, 718, 720], "base64encod": 265, "basi": [3, 5, 6, 7, 11, 32, 34, 36, 37, 38, 40, 59, 62, 64, 65, 66, 89, 92, 94, 95, 96, 117, 136, 148, 158, 171, 202, 203, 204, 205, 206, 207, 209, 398, 400, 401, 402, 424, 428, 430, 431, 432, 434, 455, 469, 470, 471, 510, 708, 717, 718], "basic": 718, "basis_and_support": 717, "basis_deriv": [7, 38, 66, 96, 402, 432, 471, 717, 718], "basis_derivative_and_support": 717, "basis_function_deriv": [205, 206, 207, 717], "basis_function_valu": 209, "basis_gradient_and_support": 717, "basis_hessian_and_support": 717, "basis_laplacian_and_support": [717, 718], "basis_splin": [158, 171], "bazilev": 720, "beam": 358, "becaus": [19, 48, 74, 103, 409, 442, 487, 652], "becom": [681, 717, 720], "been": 720, "befor": [184, 260, 265, 651, 657, 715, 718], "begin": [92, 651, 667, 720], "behav": 648, "behavior": [25, 53, 83, 111, 418, 448, 502, 676, 679], "behaviour": 663, "behind": 657, "being": [203, 398, 648], "below": [277, 668], "below_text": 720, "bernstein": 720, "berstein": 34, "beta": 263, "between": [3, 21, 50, 76, 79, 105, 108, 268, 293, 304, 309, 314, 324, 341, 346, 347, 369, 371, 378, 384, 411, 414, 444, 489, 634, 635, 651, 677, 720], "bezier": [75, 79, 104, 108, 138, 139, 249, 270, 274, 275, 277, 358, 410, 414, 428, 434, 459, 467, 490, 717, 718], "bezier_extraction_matrix": 717, "bezier_list": 270, "bezierbas": [3, 11, 12, 16, 428, 434, 435, 439, 467, 717], "beziers_patch": 718, "bezman": 203, "bid": [373, 374, 535, 536], "big": [11, 40, 434, 635], "bilinear": 301, "binari": 677, "bind": 717, "binder": 718, "binom": 34, "biquadrat": [149, 352], "bit": [651, 720], "black": 240, "block": 324, "blue": 718, "book": 720, "bool": [11, 13, 25, 33, 40, 42, 53, 60, 69, 77, 79, 83, 85, 90, 98, 106, 108, 111, 113, 118, 127, 129, 136, 137, 138, 141, 148, 151, 166, 167, 169, 178, 179, 181, 186, 191, 192, 193, 194, 204, 209, 216, 217, 240, 243, 249, 250, 257, 263, 265, 277, 281, 286, 369, 372, 378, 383, 404, 412, 414, 418, 420, 425, 434, 436, 448, 456, 458, 477, 490, 492, 502, 511, 534, 543, 550, 573, 603, 604, 606, 634, 635, 663, 668, 705, 706, 708, 711, 720], "boolean": [291, 292, 297, 298, 302, 303, 307, 308, 312, 313, 317, 318, 322, 323, 327, 328, 334, 335, 339, 340, 344, 345, 350, 351, 356, 357, 361, 362, 657, 668], "boor": [92, 720], "boost": 718, "both": [0, 25, 53, 83, 111, 194, 203, 209, 398, 418, 448, 502, 669, 694, 720], "bound": [25, 53, 83, 111, 128, 130, 146, 158, 171, 216, 277, 380, 418, 448, 458, 475, 501, 502, 694, 709], "boundari": [167, 179, 217, 249, 250, 269, 277, 324, 368, 371, 372, 373, 376, 385, 389, 396, 498, 717, 718], "boundaries_from_continu": 717, "boundary_cent": 717, "boundary_fac": 389, "boundary_from_funct": [717, 718], "boundary_id": [160, 172, 372, 389, 600, 718], "boundary_interfac": 588, "boundary_multipatch": [717, 718], "boundary_patch_id": 717, "boundary_splin": [160, 172, 588], "box": [277, 333, 717, 718], "box_margin": 277, "branch": [293, 299, 301, 304, 306, 309, 311, 314, 324, 341, 347, 349, 352, 358], "break": [657, 669, 720], "brief": 720, "bring": 718, "broad": 718, "browser": 0, "bspline": [126, 133, 136, 142, 146, 147, 148, 150, 156, 274, 275, 459, 467, 717, 718], "bspline_volum": 62, "bsplinebas": [62, 398, 467, 717], "buffer": [652, 663, 668], "bug": 663, "build": [132, 192, 193], "build_typ": 717, "built": 277, "builtin": 678, "busi": 720, "by_dim": [717, 718], "bypass": 677, "byte": [634, 635, 651, 667, 676, 679], "bytesio": 677, "byteswap": 717, "c": [3, 21, 50, 62, 76, 79, 105, 108, 240, 277, 358, 398, 411, 414, 428, 444, 489, 634, 649, 662, 663, 668, 669, 676, 677, 679, 708, 718, 720], "c_": [79, 108, 414], "c_contigu": 668, "c_i": [11, 40, 434], "cad": 720, "calcul": [11, 16, 23, 40, 45, 52, 80, 109, 193, 203, 208, 210, 211, 212, 281, 284, 415, 434, 439, 446, 497], "call": [5, 7, 13, 34, 36, 38, 42, 64, 66, 69, 92, 94, 96, 98, 134, 135, 136, 137, 144, 145, 148, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 197, 198, 199, 201, 205, 206, 207, 225, 226, 235, 236, 256, 372, 400, 402, 404, 430, 432, 436, 469, 471, 477, 663, 668, 678, 711, 718, 720], "callabl": [197, 199, 284, 285, 372, 694], "caller": [11, 40, 434], "cam": 720, "can": [0, 3, 23, 34, 52, 62, 79, 80, 92, 108, 109, 123, 133, 142, 146, 164, 165, 166, 176, 178, 203, 204, 209, 214, 216, 217, 221, 231, 240, 277, 349, 398, 414, 415, 428, 446, 458, 467, 472, 479, 488, 491, 497, 634, 646, 651, 652, 657, 663, 668, 669, 677, 708, 711, 718, 720], "cancel": 720, "cannot": [663, 668, 677, 720], "capabl": 718, "cartesian": [25, 53, 83, 111, 418, 448, 502, 705], "cartesian_product": 717, "case": [92, 143, 154, 167, 179, 183, 293, 304, 309, 314, 316, 326, 336, 341, 346, 347, 358, 398, 428, 652, 668, 678, 718, 720], "cast": 634, "cat": 717, "categori": 720, "caution": 380, "cd": [0, 718], "cdot": [3, 12, 41, 435, 708, 720], "ceg": 635, "cell": [316, 321, 326], "center": [137, 151, 290, 299, 301, 304, 306, 309, 311, 314, 319, 321, 324, 329, 336, 341, 346, 347, 349, 352, 372, 396, 718], "center_expans": [304, 309, 314, 352], "centripet": [191, 192, 194], "certain": [498, 618, 651, 685, 718, 720], "chang": [25, 53, 83, 111, 188, 216, 418, 448, 502, 627, 634, 646, 663, 668, 669, 677, 678, 681, 705, 720], "check": [33, 60, 90, 118, 133, 142, 186, 226, 236, 255, 291, 292, 297, 298, 302, 303, 307, 308, 312, 313, 317, 318, 322, 323, 327, 328, 334, 335, 339, 340, 344, 345, 350, 351, 356, 357, 361, 362, 369, 372, 380, 384, 425, 456, 458, 464, 466, 511, 663, 706, 717, 718, 720], "check_bound": [380, 717], "check_compli": 369, "check_conform": 369, "check_control_mesh_resolut": 534, "check_degre": 534, "check_dim": 534, "check_nam": 534, "check_param": 717, "check_param_deriv": 717, "checker": [472, 717], "checkout": 0, "chi": 717, "children": [249, 467], "choic": [636, 677], "choos": [651, 717], "chosen": [372, 389, 720], "circl": [153, 398, 717, 720], "circular": [141, 398], "clamp": [127, 129], "clamped_knot_vector": 717, "clang": 0, "class": [2, 3, 34, 61, 62, 92, 125, 126, 131, 132, 155, 156, 182, 183, 195, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 218, 219, 229, 279, 280, 283, 289, 290, 295, 296, 300, 301, 305, 306, 310, 311, 315, 316, 320, 321, 325, 326, 332, 333, 337, 338, 342, 343, 348, 349, 354, 355, 359, 360, 363, 367, 368, 397, 398, 427, 428, 459, 462, 463, 467, 516, 517, 524, 530, 533, 556, 578, 616, 617, 627, 634, 678, 684, 694, 717, 718, 720], "classic": 428, "classmethod": [464, 465, 466], "clear": [0, 717], "cli": 717, "click": 718, "clip": 717, "clone": [0, 718], "clongdoubl": 652, "close": [0, 16, 45, 186, 277, 281, 293, 304, 309, 314, 341, 346, 352, 358, 439, 634, 720], "closest": 677, "closing_fac": 281, "closing_til": [281, 717], "closur": [293, 304, 309, 314, 341, 346, 352, 358], "cmake": 0, "cmap": [240, 277, 720], "cmap_alpha": 720, "cmap_n_color": 720, "co": [371, 720], "code": 0, "coeffici": 203, "coefficient_matrix": [191, 193, 194], "collaps": [270, 649], "collect": 720, "collid": 355, "colloc": 718, "color": [277, 694, 720], "color_splin": 240, "colorbar": 277, "colormap": 720, "column": [134, 144, 649, 708], "com": [0, 705, 718], "combin": [376, 467], "combine_boundari": 717, "come": [657, 669, 720], "command": [0, 122], "commandlin": [121, 122, 123], "comment": [259, 260, 263], "commit": 0, "common": [3, 62, 239, 398, 428, 717, 718, 720], "commun": 720, "compar": [369, 657, 669], "compat": [634, 669, 678, 679], "comphrehens": 0, "compil": [0, 668], "complet": [143, 152, 154, 183], "complex": [0, 25, 53, 83, 111, 418, 448, 502, 634, 635, 639, 640, 651, 720], "complex128": 651, "complexwarn": 634, "compon": 203, "compos": [12, 41, 385, 435, 717], "compose_sensit": [12, 41, 435, 717], "composit": [11, 12, 40, 41, 75, 104, 410, 434, 435, 718], "composition_d": [12, 41, 435], "composition_deriv": [11, 40, 434, 717], "compress": [677, 717], "comput": [11, 12, 40, 41, 190, 198, 201, 203, 204, 209, 434, 435, 694, 718, 720], "compute_knot_vector": 717, "compute_sensit": [11, 40, 434], "concern": [11, 12, 40, 41, 434, 435, 717], "conda": 0, "condit": [217, 249, 250, 385, 634, 638, 718, 720], "cone": [717, 720], "config": 0, "configu": 706, "configur": [136, 148, 367, 717, 720], "conflict": 720, "conform": [136, 148, 216, 324, 369], "confrom": [136, 148], "conic": 720, "conj": 717, "conjug": [639, 717], "connect": [277, 290, 396, 720], "connectivitii": 385, "consecut": 663, "consequ": [398, 428, 720], "consid": [21, 50, 76, 92, 105, 160, 172, 371, 378, 384, 411, 444, 489, 720], "consist": [153, 286, 321, 355, 358, 718], "constant": [12, 41, 435, 720], "constitut": 720, "constraint": 720, "construct": [3, 34, 62, 92, 280, 398, 428, 636, 676], "contact": [293, 341, 346, 347, 358], "contact_length": [293, 324, 341, 346, 347, 358], "contain": [34, 92, 121, 123, 190, 192, 662, 676, 677, 717, 720], "content": [668, 676, 677, 720], "contigu": [634, 649, 663, 676, 706, 707], "contiguous_arrai": 706, "continu": [371, 720], "contour": [166, 178, 282], "contrast": 720, "control": [3, 11, 12, 40, 41, 62, 79, 92, 108, 134, 144, 147, 161, 162, 164, 165, 173, 174, 176, 177, 190, 191, 193, 194, 203, 213, 277, 281, 352, 369, 398, 414, 428, 434, 435, 474, 475, 476, 478, 498, 634, 676, 708, 718, 720], "control_edg": [163, 175, 717], "control_fac": [163, 175, 717], "control_mesh": [277, 717, 718, 720], "control_mesh_c": [277, 720], "control_mesh_lw": [277, 720], "control_mesh_resolut": [25, 53, 83, 111, 418, 448, 502, 717], "control_point": [3, 62, 79, 108, 165, 191, 193, 194, 240, 273, 277, 398, 414, 428, 465, 467, 627, 717, 718, 720], "control_point_alpha": 720, "control_point_bound": 717, "control_point_c": [277, 720], "control_point_id": [240, 277, 720], "control_point_offset": 717, "control_point_r": [277, 720], "control_points_": [476, 478], "control_volum": [163, 175, 717], "controlpointpoint": 717, "conveni": [457, 677, 681], "converg": [25, 53, 83, 111, 418, 448, 502], "convergence_norm": [25, 53, 83, 111, 418, 448, 502, 718], "convers": [459, 614, 634], "convert": [33, 60, 90, 118, 425, 456, 511, 634, 647, 677, 678, 717], "convex": 720, "coord": [25, 53, 83, 111, 418, 448, 502, 720], "coordin": [12, 25, 41, 53, 83, 92, 111, 203, 249, 281, 346, 396, 418, 435, 448, 502, 525, 718, 720], "copi": [33, 60, 79, 90, 108, 118, 134, 136, 144, 148, 184, 188, 221, 231, 257, 414, 425, 456, 511, 527, 634, 644, 649, 652, 657, 662, 668, 669, 676, 678, 717, 718], "copy_to": [221, 231], "copy_valid_opt": 717, "core": [10, 39, 68, 97, 403, 433, 467, 473], "core_id": 717, "core_ref_count": 717, "coresplin": 614, "correct": [246, 247, 291, 292, 297, 298, 302, 303, 307, 308, 312, 313, 317, 318, 322, 323, 327, 328, 334, 335, 339, 340, 344, 345, 350, 351, 356, 357, 361, 362], "correl": [299, 324], "correspond": [3, 11, 40, 62, 160, 172, 331, 389, 398, 428, 434, 708, 720], "cottrel": 720, "could": [133, 142, 720], "count": 663, "counterpart": [249, 720], "coupl": [284, 285], "cover": 669, "cox": [92, 720], "cp": [717, 720], "cpp": [0, 25, 53, 83, 111, 418, 448, 499, 502], "cps_as_vertic": [164, 165, 176], "creat": [0, 79, 108, 157, 158, 170, 171, 256, 257, 288, 293, 299, 304, 309, 314, 319, 324, 329, 336, 341, 346, 347, 349, 352, 358, 363, 414, 641, 694, 708, 709, 717], "create_til": [281, 283, 316, 326, 717], "creation": 363, "creator": [0, 479, 717], "criteria": [25, 53, 83, 111, 418, 448, 502], "cross": [154, 299, 349], "cross2d": [717, 718], "cross3d": 717, "cross3dlinear": 717, "cross_2d": 717, "cross_3d": 717, "cross_3d_linear": 717, "crosstil": [301, 306, 311, 349], "csr_arrai": 708, "cub": 269, "cube": [284, 285, 333], "cube_void": 717, "cubevoid": 717, "cubic": [277, 358], "cuboid": [316, 319, 329], "cumprod": 717, "cumsum": 717, "cumul": [642, 643], "current": [25, 33, 53, 60, 82, 83, 90, 111, 118, 122, 163, 175, 183, 184, 186, 187, 225, 235, 267, 269, 346, 358, 418, 425, 448, 456, 502, 504, 511, 651, 718, 720], "current_core_properti": 717, "current_dim": [134, 144], "current_mesh": 184, "curv": [3, 62, 143, 240, 296, 398, 428, 717, 718], "custom": [264, 720], "cutt": 277, "cylind": [304, 309, 314, 720], "d": [138, 139, 147, 149, 326, 649, 678, 696, 717, 718, 720], "data": [10, 13, 39, 42, 68, 69, 97, 98, 136, 148, 246, 265, 284, 285, 394, 403, 404, 433, 436, 473, 477, 509, 717, 718], "datahold": 684, "datatyp": 669, "david": 720, "ddof": [671, 682], "de": [92, 720], "deal": 720, "debug": [0, 711, 715, 717], "decim": 664, "decreas": [92, 720], "deduct": [160, 172], "deep": [514, 678], "deepcopi": [13, 42, 69, 98, 404, 436, 477], "def": 718, "default": [11, 13, 25, 33, 40, 42, 53, 60, 69, 83, 90, 91, 98, 111, 118, 119, 136, 138, 140, 141, 143, 148, 149, 152, 154, 158, 160, 167, 171, 172, 179, 183, 186, 191, 194, 216, 217, 222, 232, 240, 243, 259, 260, 263, 265, 277, 294, 352, 353, 373, 384, 404, 418, 425, 426, 434, 436, 448, 456, 460, 461, 477, 502, 511, 618, 619, 621, 624, 634, 635, 649, 657, 663, 669, 676, 677, 685, 686, 688, 691, 705, 706, 717, 720], "default_backend": 720, "default_valu": [621, 688], "defin": [82, 92, 197, 199, 200, 244, 253, 259, 260, 263, 265, 282, 284, 285, 299, 319, 324, 329, 352, 398, 428, 467, 652, 657, 667, 669, 720], "definit": [133, 142, 203, 217, 319, 329, 720], "deform": [11, 12, 40, 41, 182, 183, 184, 186, 282, 284, 434, 435], "deformation_funct": [280, 286, 717, 718], "degre": [3, 4, 5, 6, 7, 17, 27, 32, 35, 36, 37, 38, 46, 54, 59, 62, 63, 64, 65, 66, 72, 84, 89, 91, 92, 93, 94, 95, 96, 101, 112, 117, 119, 136, 137, 138, 140, 141, 143, 147, 148, 150, 151, 152, 154, 190, 191, 194, 205, 206, 207, 211, 273, 277, 352, 369, 398, 399, 400, 401, 402, 407, 419, 424, 426, 428, 429, 430, 431, 432, 440, 450, 455, 465, 467, 468, 469, 470, 471, 484, 485, 503, 510, 602, 607, 717, 718, 720], "delta_ij": [293, 304, 309, 314, 336, 341, 346, 347, 358], "denomin": 720, "denot": [92, 720], "dens": 708, "depend": [3, 718], "deprec": [657, 679], "depth": [467, 678], "deriv": [6, 7, 11, 12, 16, 23, 34, 37, 38, 40, 41, 45, 52, 65, 66, 80, 95, 96, 109, 184, 202, 203, 204, 209, 281, 291, 297, 302, 307, 312, 317, 319, 322, 327, 329, 331, 334, 339, 341, 344, 346, 347, 350, 356, 358, 361, 363, 401, 402, 415, 431, 432, 434, 435, 439, 446, 459, 470, 471, 497, 614, 708, 717, 718, 720], "derivative_list": [293, 304, 309, 314], "derivative_splin": 717, "derived_splin": 614, "derivedsplin": 614, "describ": [16, 45, 79, 108, 141, 143, 152, 154, 187, 284, 285, 293, 299, 304, 309, 314, 324, 336, 341, 346, 347, 349, 352, 358, 414, 439, 668, 720], "descript": [384, 398, 428, 634, 720], "design": [12, 41, 284, 285, 293, 304, 309, 314, 319, 329, 336, 341, 346, 347, 358, 435, 720], "desir": [136, 148, 167, 179, 191, 720], "despit": 679, "detail": [79, 108, 204, 205, 206, 207, 208, 209, 210, 414, 631, 720], "determin": [133, 142, 257, 284, 352, 371, 384, 385, 396, 651, 663, 668, 718, 720], "determinant_project": [133, 142], "determinant_splin": 717, "determine_interfac": 717, "develop": 0, "deviat": [277, 671], "diag": 651, "diagon": [321, 324, 680, 717], "dice": 290, "dict": [14, 29, 30, 33, 43, 56, 57, 60, 70, 87, 88, 90, 99, 115, 116, 118, 168, 186, 191, 194, 204, 209, 222, 232, 239, 240, 246, 265, 271, 272, 294, 330, 393, 405, 422, 423, 425, 437, 452, 453, 456, 459, 480, 504, 506, 508, 511, 562, 620, 622, 623, 626, 687, 689, 690, 693, 707, 718, 720], "dict_": 707, "dict_item": [223, 233], "dict_kei": [224, 227, 234, 237, 623, 690], "dict_splin": [33, 60, 90, 118, 425, 456, 511], "dict_to_splin": 717, "dict_valu": [228, 238, 622, 626, 689, 693], "dict_with_contigu": 707, "dictionari": [168, 187, 204, 209, 249, 256], "dictornai": [246, 265], "differ": [3, 11, 12, 25, 40, 41, 53, 83, 111, 398, 418, 434, 435, 448, 459, 467, 502, 635, 657, 669, 677], "differenti": [12, 41, 435, 720], "dim": [3, 15, 18, 20, 22, 25, 28, 44, 47, 49, 51, 53, 55, 62, 71, 73, 78, 83, 86, 100, 102, 107, 111, 114, 134, 140, 144, 191, 192, 193, 194, 198, 201, 210, 269, 273, 294, 380, 388, 398, 406, 408, 413, 418, 421, 428, 438, 441, 443, 445, 448, 451, 467, 475, 476, 478, 482, 486, 493, 502, 505, 609, 717, 718], "dim_2": 718, "dimens": [0, 3, 20, 28, 49, 55, 62, 79, 86, 91, 92, 108, 114, 119, 133, 134, 135, 137, 142, 143, 144, 145, 146, 150, 151, 166, 167, 168, 178, 179, 180, 183, 185, 192, 194, 216, 217, 269, 287, 293, 294, 304, 309, 314, 336, 341, 346, 352, 358, 379, 386, 388, 398, 414, 421, 426, 428, 443, 451, 467, 483, 500, 505, 649, 705, 718, 720], "dimension": [3, 34, 62, 135, 145, 198, 201, 284, 285, 293, 304, 309, 314, 319, 329, 369, 379, 386, 398, 428, 467, 676, 720], "direct": [25, 53, 83, 91, 111, 119, 126, 150, 156, 194, 316, 326, 418, 426, 448, 502, 720], "directli": [187, 293, 304, 309, 314, 336, 341, 346, 347, 358, 472, 488, 491, 677, 718], "discard": 243, "discret": [186, 240], "discuss": [0, 467, 718, 720], "disk": [154, 717, 718], "distanc": [25, 53, 83, 111, 277, 341, 346, 347, 352, 378, 384, 418, 448, 502, 718], "distinct": 648, "distinguish": 3, "diverg": [203, 209, 717], "divergenec": 209, "dmin": [133, 142], "do": [34, 164, 165, 176, 394, 652, 663, 677, 718, 720], "doc": [0, 718], "document": [3, 34, 62, 92, 204, 205, 206, 207, 208, 209, 210, 353, 398, 428, 467, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 642, 643, 644, 653, 654, 655, 656, 658, 659, 660, 661, 662, 664, 666, 669, 670, 671, 672, 673, 674, 680, 681, 682, 717], "doe": [33, 60, 90, 118, 394, 425, 456, 494, 511, 512, 652, 663, 720], "doesn": [25, 53, 83, 111, 127, 129, 418, 448, 502, 619, 663, 686], "dof": 268, "dof_map": 717, "domain": [34, 77, 79, 106, 108, 168, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 349, 412, 414, 467, 718], "don": 490, "done": [634, 668], "dot": [717, 720], "doubl": [324, 371, 378, 384], "double_lattic": 717, "doublelattic": 717, "doxygen": 717, "draw_box": 720, "drawback": 398, "drill": 299, "driven": 717, "dsplinepy_mor": 0, "dtype": [634, 635, 642, 643, 648, 651, 652, 654, 657, 658, 667, 669, 671, 672, 676, 680, 682, 706], "due": [3, 62, 720], "dump": 717, "duplic": [21, 50, 76, 105, 411, 444, 489], "duplicate_toler": [21, 50, 76, 105, 411, 444, 489], "dure": [0, 183], "e": [0, 3, 12, 34, 41, 92, 209, 216, 217, 249, 277, 346, 358, 384, 385, 398, 428, 435, 467, 499, 677, 718, 720], "each": [25, 28, 53, 55, 83, 86, 92, 111, 114, 152, 194, 208, 257, 258, 355, 380, 388, 418, 421, 448, 451, 463, 502, 505, 664, 677, 718, 720], "earliest": 720, "easi": 498, "easier": 718, "easili": 720, "edg": [157, 161, 163, 167, 170, 173, 175, 179, 186, 240, 269, 341, 346, 347, 717, 720], "effici": [203, 204, 209, 718], "either": [283, 346, 657, 718, 720], "element": [0, 92, 137, 151, 269, 385, 628, 629, 634, 635, 639, 640, 642, 643, 648, 649, 651, 652, 654, 656, 657, 658, 661, 662, 663, 664, 666, 669, 671, 672, 674, 678, 682, 707, 720], "element_id": [385, 720], "elementtre": [249, 277], "elev": [17, 46, 72, 101, 407, 440, 485, 718], "elevate_degre": [717, 718], "elipsoid": 326, "ellip": 326, "ellips_v_oid": 717, "ellipsoid": [326, 329], "ellipsvoid": 717, "els": [79, 92, 108, 160, 172, 216, 217, 240, 250, 414, 621, 688, 706], "emb": [134, 144], "embed": [3, 62, 373, 398, 428, 467, 717, 718, 720], "embedded_splin": [134, 144], "embl": 720, "empti": [648, 677, 720], "enabl": 718, "encod": [249, 265], "end": [92, 249, 260, 277, 717, 720], "endian": [635, 677], "endpoint": [191, 193, 194], "enforc": [378, 707, 708], "enforce_contigu": 717, "enforce_contiguous_valu": 717, "engin": 720, "enjoi": 720, "enlarg": 663, "enough": [127, 129, 634], "entangl": [133, 142], "entir": 720, "entiti": [166, 178, 720], "entour": 324, "entri": [34, 92, 157, 170, 299, 319, 324, 329, 352, 369, 370, 663, 677, 705, 717, 720], "enumer": 0, "environ": 0, "equal": [21, 50, 76, 105, 133, 142, 146, 158, 171, 369, 378, 384, 411, 444, 489, 657, 720], "equat": [92, 203, 720], "equip": 718, "equiv": [634, 720], "equival": [29, 30, 56, 57, 87, 88, 115, 116, 196, 393, 422, 423, 452, 453, 506, 508, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 642, 643, 644, 653, 654, 655, 656, 658, 659, 660, 661, 662, 664, 666, 670, 671, 672, 673, 674, 677, 680, 681, 682], "error": [25, 53, 83, 111, 418, 448, 502, 717], "especi": 718, "eta": [217, 720], "etc": [249, 293, 304, 341, 657, 669, 720], "etre": [249, 277], "evalu": [6, 15, 22, 37, 44, 51, 65, 71, 78, 95, 100, 107, 183, 191, 193, 194, 204, 208, 209, 210, 211, 212, 284, 285, 293, 304, 309, 314, 336, 341, 346, 347, 358, 396, 401, 406, 413, 431, 438, 445, 470, 482, 493, 628, 629, 694, 717], "evaluation_point": [284, 285, 717], "everi": [91, 119, 150, 290, 372, 426], "everyth": [243, 708, 717], "evgrafov": [133, 142], "exact": [718, 720], "exactli": [92, 277, 679, 720], "exampl": [0, 34, 92, 126, 132, 156, 186, 196, 240, 277, 385, 465, 467, 472, 479, 488, 491, 492, 634, 635, 648, 649, 651, 652, 657, 662, 663, 667, 668, 669, 676, 678, 681, 718], "exce": [128, 130], "except": [0, 652, 668, 678, 720], "excess": 240, "exclud": [19, 48, 74, 103, 249, 409, 442, 487, 720], "execut": 718, "exhibit": 676, "exist": [132, 619, 621, 663, 686, 688, 718], "expand": [304, 309, 314, 352], "expand_tab": [263, 717], "expans": [316, 319, 326, 329], "expect": [648, 720], "expens": 677, "experi": 0, "explan": [34, 92], "explicitli": 188, "export": [121, 217, 264, 267, 270, 384, 717, 718], "export_cartesian": 717, "export_field": 249, "export_ig": 717, "expos": 668, "express": [203, 718, 720], "extend": [135, 137, 145, 151, 467, 717], "extens": [246, 247, 398, 428], "extern": [319, 329], "extra": [34, 92], "extra_doc": 0, "extract": [20, 49, 75, 79, 104, 108, 126, 134, 135, 137, 144, 145, 151, 373, 384, 410, 414, 443, 717], "extract_all_boundary_splin": 717, "extract_bezier_patch": 717, "extract_boundari": 717, "extract_dim": 717, "extractor": [381, 488, 717], "extrud": [132, 479, 717, 718], "extruded_splin": [135, 145], "extrus": [135, 145], "extrusion_vector": [135, 145, 718], "ey": 667, "f": [203, 210, 260, 634, 649, 663, 676, 720], "f_contigu": 668, "f_i": 203, "f_k": 211, "fac": 635, "face": [156, 162, 163, 174, 175, 186, 240, 293, 304, 309, 314, 324, 341, 347, 352, 358, 370, 372, 385, 389, 488, 717, 718, 720], "face_center_vertic": 605, "facet": 720, "facilitata": 280, "fact": 720, "factor": [183, 304, 309, 314, 352, 720], "fals": [11, 25, 33, 40, 53, 60, 77, 79, 83, 85, 90, 106, 108, 111, 113, 118, 136, 148, 167, 169, 179, 181, 186, 191, 194, 204, 209, 216, 249, 259, 263, 265, 277, 286, 378, 380, 383, 412, 414, 418, 420, 425, 434, 448, 456, 458, 502, 511, 543, 573, 628, 629, 630, 631, 634, 635, 653, 654, 655, 658, 663, 668, 671, 672, 682, 683, 705, 706, 708, 711, 720], "famili": [21, 34, 50, 76, 92, 105, 411, 444, 467, 489, 717, 718], "famlili": 717, "fashion": [203, 718, 720], "fast": 705, "fastest": 705, "featur": [34, 92, 717], "feature0": 0, "feel": 718, "few": 720, "ffd": [717, 718], "fid": 677, "field": [23, 52, 80, 109, 202, 203, 208, 209, 210, 211, 212, 249, 319, 329, 369, 415, 446, 497, 534, 634, 651, 652, 657, 667, 669, 717], "field_deriv": 717, "field_dim": [369, 534], "field_mask": 249, "figur": 277, "file": [0, 123, 243, 246, 247, 249, 250, 257, 260, 263, 265, 266, 270, 273, 277, 646, 668, 677, 717], "filenam": [246, 247, 249, 250, 257, 265, 677], "fileno": 677, "fill": [663, 717], "filter": [21, 50, 76, 105, 411, 444, 489, 718], "final": 657, "find": [25, 53, 83, 111, 213, 246, 247, 418, 448, 498, 502, 525, 666, 669, 720], "find_span": 717, "finish": 281, "finit": 720, "finiteelementcollect": 269, "finiteelementspac": 269, "first": [0, 34, 92, 134, 144, 203, 277, 299, 324, 352, 358, 657, 669, 677, 718, 720], "first_deriv": [25, 53, 83, 111, 418, 448, 502, 718], "fit": [0, 185, 372, 651, 717, 720], "fitted_splin": [191, 194], "fitting_point": [190, 191, 192, 193, 194], "fitting_queri": [240, 720], "fitting_splin": [191, 193, 194, 718], "fix": 720, "flag": [11, 40, 79, 108, 414, 434, 668, 683, 718], "flat": [649, 652, 659, 660, 718], "flatten": [660, 663, 717], "flexibl": 720, "flip": 216, "flip_ax": 717, "float": [21, 25, 27, 50, 53, 54, 76, 77, 83, 84, 85, 105, 106, 111, 112, 113, 137, 138, 139, 140, 141, 143, 149, 150, 151, 152, 153, 154, 168, 180, 183, 185, 191, 193, 194, 198, 201, 240, 265, 270, 277, 293, 304, 309, 314, 341, 346, 347, 352, 358, 411, 412, 418, 419, 420, 444, 448, 450, 461, 489, 502, 503, 525, 528, 544, 573, 574, 581, 587, 588, 602, 605, 607, 611, 634, 706, 720], "float32": 634, "float64": [273, 520, 521, 522, 523, 527, 529, 541, 550, 553, 557, 558, 559, 560, 563, 566, 569, 573, 575, 576, 582, 583, 584, 589, 602, 604, 605, 607, 611, 613, 634, 651, 667], "fname": [19, 48, 74, 103, 243, 244, 246, 247, 249, 250, 252, 253, 255, 257, 262, 263, 265, 266, 269, 270, 271, 272, 274, 275, 277, 409, 442, 487, 597, 610], "folder": 720, "follow": [0, 3, 62, 167, 179, 203, 242, 249, 398, 428, 648, 715, 718, 720], "font": 277, "font_famili": 277, "font_siz": [277, 720], "foral": [11, 40, 434], "forc": 634, "fork": 0, "forknam": 0, "form": [11, 12, 16, 40, 41, 45, 183, 203, 210, 211, 244, 253, 263, 275, 293, 304, 316, 319, 326, 329, 341, 382, 385, 434, 435, 439, 648, 674, 681, 720], "form_lin": 717, "format": [79, 108, 121, 242, 244, 249, 256, 264, 265, 269, 291, 292, 297, 298, 302, 303, 307, 308, 312, 313, 317, 318, 322, 323, 327, 328, 334, 335, 339, 340, 344, 345, 350, 351, 356, 357, 361, 362, 387, 414, 677, 717, 718], "formul": 258, "formula": [92, 720], "fortran": [634, 649, 676], "found": 718, "founder": 720, "four": [304, 720], "frac": [11, 12, 40, 41, 92, 203, 210, 211, 398, 428, 434, 435, 720], "free": [183, 662], "freeform": 182, "freeli": 720, "french": 720, "from": [0, 11, 12, 25, 28, 40, 41, 53, 55, 62, 83, 86, 111, 114, 121, 123, 126, 132, 136, 148, 156, 160, 166, 167, 168, 169, 172, 178, 179, 180, 181, 222, 232, 246, 247, 256, 260, 263, 266, 277, 341, 346, 347, 371, 376, 388, 418, 421, 434, 435, 448, 451, 467, 502, 505, 634, 636, 670, 674, 676, 705, 708, 718, 720], "from_bound": 717, "from_data": 720, "from_mfem": 268, "frombuff": 676, "fromfil": 677, "front": 717, "fulfil": [294, 358, 720], "full": [79, 108, 319, 329, 414, 628, 629, 630, 632, 633, 636, 637, 638, 639, 640, 642, 643, 644, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 666, 668, 669, 670, 671, 672, 673, 674, 680, 681, 682, 717, 718, 720], "full_row_indic": 717, "fullscreen": [290, 296, 301, 306, 311, 316, 321, 326, 333, 338, 343, 349, 355], "function": [0, 1, 3, 4, 5, 6, 7, 11, 12, 34, 35, 36, 37, 38, 40, 41, 62, 63, 64, 65, 66, 92, 93, 94, 95, 96, 120, 121, 123, 125, 131, 155, 157, 158, 170, 171, 183, 186, 187, 189, 195, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 215, 216, 217, 218, 242, 245, 248, 250, 251, 254, 261, 264, 267, 268, 273, 276, 281, 282, 283, 284, 285, 286, 288, 349, 372, 381, 398, 399, 400, 401, 402, 428, 429, 430, 431, 432, 434, 435, 459, 467, 468, 469, 470, 471, 516, 616, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 642, 643, 644, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 664, 666, 668, 670, 671, 672, 673, 674, 677, 678, 680, 681, 682, 694, 708, 710, 715, 717, 718], "further": [75, 104, 203, 410], "futur": 644, "g": [0, 209, 216, 217, 249, 358, 384, 385, 677, 720], "g1": 371, "gauss": [198, 201], "gener": [288, 467, 669, 718], "geomet": 720, "geometr": [11, 40, 203, 434, 479, 718, 720], "geometri": [12, 23, 41, 52, 80, 109, 132, 196, 203, 249, 250, 269, 282, 415, 435, 446, 497, 718, 720], "get": [23, 52, 80, 109, 186, 415, 446, 497, 498, 717, 718], "get_interfac": 717, "getfield": [667, 717], "gismo": [384, 717, 718], "git": [0, 718], "github": [0, 718], "give": [154, 268, 681, 718, 720], "given": [4, 5, 6, 7, 11, 12, 25, 31, 32, 34, 35, 36, 37, 38, 40, 41, 53, 58, 59, 63, 64, 65, 66, 79, 83, 89, 91, 93, 94, 95, 96, 108, 111, 117, 119, 123, 133, 134, 135, 136, 138, 142, 144, 145, 146, 148, 149, 158, 159, 166, 171, 178, 180, 183, 191, 192, 194, 196, 198, 201, 272, 277, 293, 304, 309, 314, 331, 341, 373, 385, 399, 400, 401, 402, 414, 418, 424, 426, 429, 430, 431, 432, 434, 435, 448, 454, 455, 464, 466, 468, 469, 470, 471, 502, 510, 525, 528, 618, 619, 621, 625, 630, 631, 634, 637, 638, 642, 643, 651, 653, 654, 655, 658, 664, 671, 672, 674, 682, 685, 686, 688, 692, 708, 709], "global": [34, 385, 457, 718, 720], "global_fac": 385, "global_interfac": 588, "global_knot_insertion_matrix": 717, "glossi": 720, "go": 720, "goe": 239, "good": [0, 677, 720], "googl": 0, "gradient": [23, 52, 80, 109, 203, 204, 205, 208, 209, 211, 415, 446, 497, 717], "graphic": [277, 717], "gravesen": [133, 142], "great": 720, "greater": [146, 657, 720], "greek": 296, "green": [240, 720], "grevil": [21, 50, 76, 105, 411, 444, 489, 718], "greville_abscissa": [717, 718], "grid": [25, 53, 83, 111, 418, 448, 502, 718, 720], "grid_resolut": 214, "gu": [157, 170, 353, 709, 718, 720], "guess": [25, 53, 83, 111, 418, 448, 502], "guid": [0, 720], "guidelin": 718, "gus_dict": 239, "gustaf": [164, 165, 176, 183, 184, 186, 239, 240, 277, 718, 720], "gzipfil": 677, "h": [122, 203, 211], "ha": [140, 160, 172, 203, 319, 329, 490, 651, 718, 720], "hand": 718, "handle_markdown": 0, "happen": 720, "hardcod": 267, "hardwar": 668, "has_cor": 717, "has_evalu": 717, "has_funct": 717, "has_knot_vector": 717, "has_loc": 717, "hat": 720, "have": [0, 6, 7, 15, 25, 34, 37, 38, 44, 53, 65, 66, 71, 83, 92, 95, 96, 100, 111, 127, 129, 146, 194, 217, 249, 291, 292, 297, 298, 302, 303, 307, 308, 312, 313, 317, 318, 322, 323, 327, 328, 334, 335, 339, 340, 344, 345, 350, 351, 356, 357, 361, 362, 398, 401, 402, 406, 418, 428, 431, 432, 438, 448, 459, 470, 471, 482, 502, 663, 718, 720], "heapsort": 669, "height": [141, 150, 358], "help": [62, 202, 213, 616, 627, 694, 711, 718], "helpe": [219, 229, 616, 617, 684], "helper": [126, 132, 156, 196, 280, 394, 463, 509], "helpm": [0, 29, 30, 56, 57, 87, 88, 115, 116, 393, 422, 423, 452, 453, 472, 488, 491, 506, 508, 717, 718], "henc": 203, "here": [0, 3, 12, 19, 41, 48, 62, 74, 92, 103, 203, 409, 435, 442, 487, 717, 718, 720], "hessian": [23, 52, 80, 109, 203, 204, 206, 209, 415, 446, 497, 717], "hex": [635, 720], "high": [277, 720], "higher": [3, 62, 135, 145, 167, 179, 398, 428, 720], "highest": 705, "highlight": [718, 720], "histor": 720, "hold": [370, 463, 622, 623, 626, 689, 690, 693, 720], "hole": 336, "hollow": [143, 152, 154, 333], "hollow_cub": 717, "hollow_octagon": 717, "hollow_octagon_extrud": 717, "hollowcub": 717, "hollowoctagon": 717, "hollowoctagonextrud": 717, "home": 718, "horizont": [324, 720], "how": [34, 92, 257, 428, 467, 668, 718], "howev": [136, 148, 214, 663, 718, 720], "hpp": 0, "html": [0, 718, 720], "http": [277, 705, 720], "hugh": 720, "hull": 720, "human": 277, "hutchinson": [316, 326], "hyper": 139, "hypercub": [34, 183], "i": [0, 3, 11, 12, 13, 19, 25, 33, 34, 40, 41, 42, 48, 53, 60, 62, 69, 74, 79, 83, 90, 92, 98, 103, 108, 111, 118, 123, 126, 127, 129, 133, 135, 136, 138, 142, 145, 146, 148, 158, 160, 161, 162, 167, 171, 172, 173, 174, 177, 179, 183, 186, 194, 203, 204, 209, 210, 211, 216, 217, 222, 232, 240, 246, 247, 255, 257, 259, 260, 265, 277, 283, 293, 299, 304, 309, 314, 336, 341, 346, 347, 352, 358, 363, 369, 370, 372, 380, 384, 385, 398, 404, 409, 414, 418, 425, 428, 434, 435, 436, 442, 448, 456, 459, 464, 466, 467, 477, 487, 492, 499, 502, 511, 514, 619, 621, 634, 635, 644, 648, 649, 651, 652, 657, 662, 663, 668, 669, 676, 677, 678, 681, 686, 688, 694, 705, 706, 707, 708, 717, 718, 720], "i8": 669, "id": [5, 7, 32, 36, 38, 59, 64, 66, 89, 94, 96, 117, 158, 171, 213, 269, 277, 370, 372, 373, 376, 385, 389, 400, 402, 424, 430, 432, 455, 469, 471, 498, 510, 520, 521, 523, 581, 582, 584, 720], "idea": [0, 720], "ideal": 183, "ident": 203, "identif": 718, "identifi": [263, 372, 396], "iff": [6, 7, 15, 37, 38, 44, 65, 66, 71, 95, 96, 100, 161, 162, 167, 169, 173, 174, 177, 179, 181, 216, 217, 240, 401, 402, 406, 431, 432, 438, 470, 471, 482, 490, 492], "ig": [19, 48, 74, 103, 409, 442, 487, 717, 718], "iga": [708, 718, 720], "ignor": [79, 108, 414], "ij": [203, 211], "imag": 202, "imaginari": 635, "immers": 720, "implement": [203, 204, 209, 363, 669, 717, 718], "import": [0, 121, 247, 634, 635, 648, 649, 651, 652, 657, 663, 667, 668, 669, 676, 678, 681, 718, 720], "importantli": 717, "includ": [398, 717, 718, 720], "inclus": 341, "increas": [663, 718], "indent": [243, 249, 277], "independ": 677, "index": [0, 268, 385, 498, 636, 652, 657, 705, 718], "indexwis": 718, "indic": [385, 498, 630, 631, 632, 633, 650, 656, 659, 666, 674, 720], "indirect": [657, 669], "individu": [159, 369, 380, 382, 396, 635], "influenc": 720, "info": [378, 711, 715, 717], "inform": [3, 25, 53, 62, 83, 111, 121, 122, 127, 129, 187, 191, 194, 277, 316, 326, 368, 371, 378, 398, 418, 428, 448, 502, 652, 668, 677, 718], "init": [0, 271, 718], "initi": [13, 25, 42, 53, 69, 83, 98, 111, 331, 404, 418, 436, 448, 467, 477, 502, 621, 653, 655, 658, 672, 688, 717, 718, 720], "initial_guess_sample_resolut": [25, 53, 83, 111, 418, 448, 502, 573], "inl": 0, "inner": [11, 12, 40, 41, 143, 152, 154, 293, 304, 309, 314, 324, 341, 346, 347, 352, 358, 434, 435, 591, 592, 593, 718], "inner_deriv": [12, 41, 435, 593], "inner_funct": [11, 40, 434], "inner_radiu": [141, 143, 152, 718], "inplac": [25, 53, 83, 111, 216, 217, 257, 418, 448, 502, 627, 635], "input": [259, 294, 634, 649, 706, 720], "insert": [77, 79, 106, 108, 281, 412, 414, 666, 708, 718], "insert_knot": [79, 108, 414, 717, 718], "insid": [185, 333, 720], "inspir": 720, "instal": 0, "instanc": [3, 62, 398, 428, 706], "instead": [137, 151, 186, 240, 634, 644, 652], "int": [4, 5, 6, 7, 15, 18, 20, 22, 25, 28, 31, 32, 35, 36, 37, 38, 44, 47, 49, 51, 53, 55, 58, 59, 63, 64, 65, 66, 71, 73, 77, 78, 79, 83, 85, 86, 89, 91, 93, 94, 95, 96, 100, 102, 106, 107, 108, 111, 113, 114, 117, 119, 137, 138, 140, 143, 151, 152, 166, 167, 168, 169, 178, 179, 180, 181, 190, 191, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 240, 257, 277, 287, 294, 346, 369, 371, 372, 373, 374, 379, 380, 384, 386, 388, 389, 399, 400, 401, 402, 406, 408, 412, 413, 414, 418, 420, 421, 424, 426, 429, 430, 431, 432, 438, 441, 443, 445, 448, 451, 454, 455, 468, 469, 470, 471, 482, 483, 486, 493, 500, 502, 505, 510, 518, 519, 520, 525, 534, 535, 536, 541, 544, 550, 557, 558, 559, 560, 563, 566, 569, 573, 575, 576, 579, 580, 581, 588, 594, 595, 598, 601, 602, 604, 605, 607, 609, 611, 613, 634, 651, 657, 663, 667, 669, 678, 681, 708, 720], "int16": 635, "int32": [273, 374, 377, 383, 390, 521, 523, 526, 536, 538, 543, 544, 551, 559, 560, 563, 565, 573, 574, 575, 576, 582, 584, 588, 596, 598, 600, 602, 605, 667], "int64": [384, 652], "int_typ": 652, "intact": [31, 58, 454], "integ": [134, 144, 634, 651], "integr": 717, "intend": [677, 681], "inter": 385, "interchang": [217, 673, 720], "interfac": [121, 122, 123, 216, 288, 336, 363, 368, 370, 371, 372, 378, 390, 551, 598, 668, 717, 718], "interface_info_arrai": 718, "interface_orient": 717, "interfaces_from_boundary_cent": 717, "intern": [11, 25, 34, 40, 53, 83, 111, 126, 156, 167, 179, 205, 206, 207, 352, 418, 434, 448, 502], "interpol": [92, 191, 192, 193, 194, 720], "interpolate_endpoint": [191, 193, 194], "interpret": [652, 668], "intersect": 717, "interv": [92, 168, 180, 720], "introduc": [3, 62, 428, 720], "introduct": [62, 398, 718], "introselect": [632, 657], "invers": [25, 53, 83, 111, 203, 349, 352, 418, 448, 502, 676, 718], "inverse_cross_3d": 717, "inversecross3d": 717, "invert": 718, "involv": 461, "io": [121, 717, 718], "ioutil": 717, "ipynb": 720, "irit": 717, "is_clamp": [127, 129], "is_left_bdr": 718, "is_minim": 717, "is_rat": 717, "is_splin": 717, "isogeometr": 720, "issu": [0, 183, 718, 720], "itd": [262, 263], "item": [186, 187, 621, 677, 678, 688, 717, 720], "iter": [221, 226, 231, 236, 649, 660, 678, 705], "its": [12, 41, 137, 151, 183, 316, 326, 385, 435, 657, 663, 668, 679, 681], "itself": [293, 304, 309, 314, 336, 341, 346, 347, 358, 651], "j": [0, 3, 62, 133, 142, 160, 172, 203, 210, 398, 428, 651, 681, 720], "j_": [160, 172, 203], "jacobian": [133, 142, 203, 717], "jet": 277, "ji": 203, "john": 720, "jr": 720, "json": 717, "just": [0, 133, 142, 166, 178, 718, 720], "j\u00fcttler": [133, 142], "k": [0, 3, 11, 12, 40, 41, 62, 210, 398, 428, 434, 435, 634, 649, 657, 720], "k3d": 720, "k_": 211, "k_i": 210, "kaufmann": 720, "kd": [25, 53, 83, 111, 418, 448, 502], "keep": [627, 711, 720], "keepdim": [628, 629, 630, 631, 653, 654, 655, 658, 671, 672, 682], "kei": [221, 222, 227, 228, 231, 232, 237, 238, 249, 273, 331, 618, 619, 621, 624, 669, 685, 686, 688, 691, 717, 720], "keyword": [121, 123, 186, 187, 242, 249, 250, 467, 663, 669, 718, 720], "khoromskij": [133, 142], "kind": [632, 633, 634, 657, 669], "kink": 371, "kj": 203, "kl": 203, "knot": [34, 75, 77, 79, 81, 85, 91, 92, 104, 106, 108, 110, 113, 119, 127, 129, 136, 137, 138, 140, 143, 148, 151, 152, 154, 159, 166, 178, 190, 191, 192, 194, 240, 249, 410, 412, 414, 416, 420, 426, 490, 494, 495, 496, 512, 525, 526, 527, 528, 529, 604, 611, 718, 720], "knot_alpha": 720, "knot_c": [277, 720], "knot_insertion_matrix": 717, "knot_lw": 720, "knot_multipl": 717, "knot_span_wis": 281, "knot_vector": [0, 62, 190, 191, 194, 273, 398, 465, 467, 496, 717, 718, 720], "knotspan": 281, "knotvector": [269, 717], "know": [0, 25, 53, 83, 111, 418, 448, 502, 718], "known": [25, 53, 83, 92, 111, 418, 448, 502, 720], "kth": [632, 657], "kv": [0, 717], "kwarg": [29, 30, 34, 56, 57, 87, 88, 92, 115, 116, 186, 187, 225, 226, 235, 236, 240, 277, 281, 286, 293, 299, 304, 309, 314, 319, 324, 329, 336, 341, 347, 352, 353, 358, 363, 391, 393, 422, 423, 452, 453, 467, 506, 508, 625, 637, 641, 683, 692], "l": [0, 3, 62, 92, 398, 428], "label": 249, "label_font": 720, "label_format": 720, "label_offset": 720, "label_rot": 720, "label_s": 720, "labeled_boundari": 249, "langer": [133, 142], "laplac": 718, "laplacian": [204, 207, 209, 717, 718], "laplacian_matrix": 718, "larg": [25, 53, 83, 111, 418, 448, 502, 720], "larger": 651, "largest": 720, "last": [34, 92, 336, 657, 663, 668, 669, 678, 720], "later": 192, "latest": 183, "latter": 718, "lattic": 321, "layer": 352, "layout": [634, 676], "le": 720, "lead": 0, "least": 720, "left": [203, 657, 666, 718], "leftrightarrow": 720, "len": [665, 705, 717], "length": [139, 150, 293, 324, 341, 346, 347, 358, 634, 670, 718, 720], "leq": 92, "less": [146, 160, 172], "let": 0, "letter": [0, 296, 668], "level": [678, 707], "lexsort": 669, "li": [138, 203], "librari": [717, 720], "light": [240, 720], "like": [3, 4, 5, 6, 7, 15, 16, 18, 22, 25, 28, 31, 32, 34, 35, 36, 37, 38, 44, 45, 47, 51, 53, 55, 58, 59, 62, 63, 64, 65, 66, 71, 73, 78, 79, 83, 86, 89, 92, 93, 94, 95, 96, 100, 102, 107, 108, 111, 114, 117, 146, 190, 192, 194, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 240, 249, 250, 338, 343, 372, 376, 378, 380, 398, 399, 400, 401, 402, 406, 408, 413, 414, 418, 421, 424, 428, 429, 430, 431, 432, 438, 439, 441, 445, 448, 451, 454, 455, 467, 468, 469, 470, 471, 482, 486, 493, 502, 505, 510, 513, 515, 618, 634, 677, 685, 694, 696, 705, 706, 709, 718, 720], "limit": [19, 48, 74, 103, 166, 178, 186, 409, 442, 487, 637, 718, 720], "limkild": [133, 142], "line": [0, 3, 62, 166, 178, 258, 259, 260, 277, 398, 428, 668, 717, 720], "line_separated_str": 258, "linear": [135, 143, 145, 150, 301, 306, 311, 349], "linecap": 277, "link": 718, "linux": 718, "list": [3, 11, 17, 27, 31, 33, 40, 46, 54, 58, 60, 62, 72, 75, 77, 79, 84, 85, 90, 91, 101, 104, 106, 108, 112, 113, 118, 119, 139, 158, 159, 160, 166, 167, 168, 169, 171, 172, 178, 179, 181, 191, 192, 194, 216, 217, 221, 231, 240, 243, 249, 250, 252, 253, 256, 262, 263, 265, 266, 268, 270, 274, 275, 277, 281, 283, 284, 285, 287, 293, 294, 299, 304, 309, 314, 319, 324, 329, 336, 341, 346, 347, 352, 358, 363, 369, 370, 376, 382, 387, 398, 407, 410, 412, 414, 419, 420, 425, 426, 434, 440, 450, 454, 456, 464, 465, 466, 467, 485, 494, 495, 496, 503, 511, 512, 531, 532, 534, 542, 574, 588, 592, 597, 598, 599, 600, 602, 610, 611, 613, 618, 619, 635, 657, 669, 678, 685, 686, 696, 705, 706, 718], "list_nam": 265, "list_of_splin": 274, "list_splin": 275, "lk": 203, "lm": 203, "load": [123, 646, 647, 717, 718], "load_opt": 250, "local": [284, 285, 385, 720], "local_fac": 385, "locat": [31, 58, 454, 613, 657, 694, 717, 718, 720], "log": 717, "log_func": 715, "logfil": 711, "logger": [712, 713, 714, 716], "long": 634, "longdoubl": 652, "longer": 720, "look": [136, 148, 338, 343, 353, 718, 720], "loop": [0, 260], "lose": [652, 678], "lost": 677, "low": 635, "lower": [358, 720], "lower_1": 709, "lower_2": 709, "lowest": [372, 389, 705], "lw": 720, "m": [3, 6, 7, 11, 15, 37, 38, 40, 44, 62, 65, 66, 71, 95, 96, 100, 191, 193, 194, 398, 401, 402, 406, 428, 431, 432, 434, 438, 467, 470, 471, 482, 696, 720], "m_j": 720, "machin": 677, "maco": 718, "macro_sensit": 281, "made": [13, 42, 69, 98, 133, 142, 404, 436, 477, 668, 720], "mai": [459, 634, 657, 663, 678, 718], "maintain": 666, "major": 649, "make": [0, 25, 34, 53, 83, 111, 188, 277, 418, 448, 502, 663, 706], "make_matrix": [717, 718], "make_meaning": 717, "make_r": 243, "make_show": 717, "manag": [392, 507, 616, 617, 684], "mani": [204, 257, 718, 720], "manipul": 718, "mantzaflari": [133, 142], "map": [25, 53, 83, 111, 183, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 268, 277, 418, 448, 467, 502, 635, 708, 718], "mapper": 717, "mar": 277, "mark": [277, 718], "markdown": 0, "mask": [372, 376], "match": [346, 372, 376, 708, 720], "math": [28, 55, 86, 114, 380, 388, 421, 451, 505, 652], "mathbb": [3, 62, 92, 398, 428, 467, 720], "mathbf": [11, 40, 203, 434, 708, 720], "mathcal": [11, 12, 40, 41, 434, 435, 708], "mathemat": 467, "mathrm": 92, "matplotlib": 277, "matrix": [79, 108, 414, 708, 718], "max": [0, 528, 634, 637, 717], "max_iter": [25, 53, 83, 111, 418, 448, 502, 573], "maximum": [277, 346, 352, 630, 653, 720], "mayb": 255, "md": 718, "mean": [346, 370, 634, 649, 657, 669, 676, 681, 717, 720], "meaning": [259, 260], "meant": 627, "meanwhil": 720, "measur": 720, "mechan": 720, "media": 720, "member": [0, 134, 135, 137, 144, 145, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "memori": [249, 634, 635, 649, 663, 668, 676], "mention": 720, "merg": [167, 179, 249], "mergesort": 669, "mesh": [161, 162, 169, 173, 174, 177, 181, 183, 185, 186, 369, 474, 498, 717, 718, 720], "messag": 715, "metal": 720, "method": [3, 34, 62, 92, 126, 132, 156, 183, 196, 203, 214, 219, 229, 280, 290, 296, 301, 306, 311, 316, 321, 326, 333, 338, 343, 349, 355, 360, 368, 398, 428, 463, 467, 517, 524, 530, 533, 556, 578, 617, 627, 652, 662, 677, 684, 694, 717, 718, 720], "mfem": [217, 717, 718], "micro": 718, "microstructur": 717, "microtil": [280, 281, 284, 285, 286, 287, 293, 299, 304, 309, 314, 324, 336, 341, 347, 349, 352, 358, 717, 718], "microtile_list": [293, 299, 304, 309, 314, 319, 324, 329, 336, 341, 347, 352, 358], "middl": 720, "min": [160, 172, 528, 637, 717], "mind": 720, "minim": [146, 717], "minimum": [138, 277, 346, 352, 631, 655, 720], "mirror": 627, "miss": 663, "mlk": 203, "mn": 203, "mode": [634, 636, 659, 674], "model": [141, 249], "modern": 720, "modif": 257, "modifi": [183, 216, 217, 398, 428, 718], "modified_splin": [216, 217], "modul": [0, 1, 121, 124, 241, 278, 288, 457, 615, 668, 717], "moment": [394, 720], "mono": [62, 92], "more": [3, 62, 79, 108, 121, 122, 187, 203, 204, 205, 206, 207, 208, 209, 210, 277, 316, 326, 398, 414, 428, 467, 718, 720], "moreov": 34, "morgan": 720, "most": [3, 62, 398, 428, 663, 668, 678, 717, 718, 720], "move": [657, 718, 720], "multi": [3, 34, 62, 79, 108, 290, 414, 498, 718], "multi_index": [717, 718], "multi_index_help": 498, "multiindex": [498, 717], "multipatch": [160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 216, 219, 240, 243, 244, 249, 250, 459, 617, 717], "multipatchdata": [394, 717], "multipatchshowopt": 717, "multipl": [75, 104, 136, 148, 381, 410, 494, 529, 634, 669, 717, 718, 720], "multipli": [79, 108, 414, 717], "multithread": 718, "must": [194, 249, 281, 293, 304, 309, 314, 341, 346, 347, 352, 358, 637, 663, 720], "my_splin": [132, 156], "mysplin": 465, "n": [0, 3, 4, 5, 6, 7, 15, 18, 22, 25, 28, 32, 35, 36, 37, 38, 44, 47, 51, 53, 55, 59, 62, 63, 64, 65, 66, 71, 73, 78, 83, 86, 89, 92, 93, 94, 95, 96, 100, 102, 107, 111, 114, 117, 133, 134, 139, 142, 144, 146, 147, 190, 191, 192, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 369, 380, 398, 399, 400, 401, 402, 406, 408, 413, 418, 421, 424, 428, 429, 430, 431, 432, 438, 441, 445, 448, 451, 455, 467, 468, 469, 470, 471, 476, 478, 482, 486, 493, 502, 505, 510, 513, 515, 659, 663, 681, 696, 705, 720], "n_": [3, 34, 62, 92, 398, 428, 467, 720], "n_boundari": 378, "n_col": [708, 718], "n_control_point": [190, 191, 194], "n_ctp": 708, "n_default_thread": 717, "n_fitting_point": [190, 191, 194], "n_i": 720, "n_knot": [91, 119, 426, 718], "n_knot_span": [137, 138, 140, 143, 151, 152], "n_knots_span": 140, "n_patch": [378, 385], "n_sides_per_patch": 385, "n_thread": [4, 5, 18, 22, 32, 35, 36, 47, 51, 59, 63, 64, 73, 78, 89, 93, 94, 102, 107, 117, 399, 400, 408, 413, 424, 429, 430, 441, 445, 455, 468, 469, 486, 493, 510], "n_tick": 277, "naive_splin": [136, 148], "name": [0, 3, 62, 204, 209, 243, 249, 265, 269, 270, 277, 294, 331, 353, 398, 428, 646, 668, 679, 717, 720], "name_to_typ": [244, 250, 253, 256, 263, 614, 717], "namespac": [121, 123, 718], "nan_text": 720, "natur": [3, 62], "ncpt": 273, "nd": 652, "nd_box": 139, "ndarrai": [4, 5, 6, 7, 15, 18, 21, 22, 25, 28, 32, 33, 35, 36, 37, 38, 44, 47, 50, 51, 53, 55, 59, 60, 63, 64, 65, 66, 71, 73, 76, 78, 83, 86, 89, 90, 93, 94, 95, 96, 100, 102, 105, 107, 111, 114, 117, 118, 135, 137, 145, 147, 151, 190, 191, 192, 197, 199, 205, 206, 207, 208, 210, 211, 212, 273, 291, 292, 293, 297, 298, 299, 302, 303, 304, 307, 308, 309, 312, 313, 314, 317, 318, 322, 323, 324, 327, 328, 334, 335, 336, 339, 340, 341, 344, 345, 346, 347, 350, 351, 356, 357, 358, 361, 362, 370, 374, 377, 380, 383, 385, 388, 389, 390, 396, 399, 400, 401, 402, 406, 408, 411, 413, 418, 421, 424, 425, 429, 430, 431, 432, 438, 441, 444, 445, 448, 451, 455, 456, 468, 469, 470, 471, 474, 475, 476, 478, 481, 482, 484, 486, 489, 493, 501, 502, 505, 510, 511, 520, 521, 522, 523, 526, 527, 529, 536, 538, 541, 543, 544, 550, 551, 553, 557, 558, 559, 560, 563, 565, 566, 569, 573, 574, 575, 576, 582, 583, 584, 588, 589, 596, 598, 600, 602, 604, 605, 607, 611, 613, 619, 627, 634, 635, 649, 660, 662, 678, 679, 681, 686, 705, 706, 708, 718, 720], "ndarrrai": [25, 53, 83, 111, 418, 448, 502], "ndim": [147, 678], "nearest": [25, 53, 83, 111, 418, 448, 502, 678], "necessari": [0, 319, 329, 349, 663], "necessarili": 720, "need": [284, 285, 293, 304, 309, 314, 341, 346, 352, 651, 657, 669, 720], "neg": [21, 25, 50, 53, 76, 83, 105, 111, 370, 385, 411, 418, 444, 448, 489, 502, 720], "neighbor": [25, 53, 83, 111, 270, 290, 358, 378, 384, 418, 448, 502], "neq": 720, "nest": 678, "never": [260, 668, 720], "new": [0, 11, 40, 77, 79, 91, 106, 108, 119, 132, 134, 135, 144, 145, 217, 257, 372, 376, 378, 389, 412, 414, 426, 434, 479, 620, 634, 636, 662, 663, 681, 687, 707, 720], "new_dimens": [134, 144], "new_knot": 602, "new_knot_vector": 607, "new_shap": 663, "new_splin": [13, 42, 69, 98, 404, 436, 477], "newbyteord": 635, "newli": [13, 42, 69, 98, 404, 436, 477, 634], "newton": [25, 53, 83, 111, 418, 448, 502], "next": 260, "next_lin": 717, "next_meaningful_str": 260, "ni": 203, "nlabel": 720, "nm": 203, "noindent": 720, "non": [92, 133, 137, 142, 151, 159, 249, 341, 398, 656], "none": [3, 4, 5, 6, 7, 10, 15, 17, 18, 19, 21, 22, 25, 27, 28, 32, 35, 36, 37, 38, 39, 44, 46, 47, 48, 50, 51, 53, 54, 55, 59, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 89, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 117, 119, 127, 129, 135, 137, 141, 143, 145, 151, 152, 154, 158, 159, 160, 168, 171, 172, 183, 185, 188, 191, 194, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 249, 252, 257, 260, 262, 265, 269, 270, 274, 277, 280, 281, 282, 284, 285, 287, 293, 294, 299, 304, 309, 314, 319, 324, 329, 330, 336, 341, 346, 347, 352, 358, 363, 364, 365, 366, 368, 369, 371, 372, 373, 375, 376, 378, 380, 381, 382, 384, 388, 389, 390, 392, 394, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 413, 414, 416, 418, 419, 420, 421, 424, 426, 428, 429, 430, 431, 432, 433, 438, 440, 441, 442, 444, 445, 448, 450, 451, 455, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 512, 513, 514, 515, 520, 521, 522, 523, 528, 534, 537, 551, 565, 581, 582, 583, 584, 586, 597, 618, 619, 621, 624, 625, 628, 629, 630, 631, 632, 633, 636, 637, 638, 642, 643, 647, 648, 652, 653, 654, 655, 657, 658, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 674, 678, 680, 681, 682, 685, 686, 688, 691, 692, 694, 696, 706, 707, 711, 712, 713, 714, 716, 720], "nonumb": 720, "nonzero": [717, 720], "norm": [25, 53, 83, 111, 378, 384, 418, 448, 502, 720], "normal": [160, 172, 371, 720], "normalize_knot_vector": 717, "notabl": 718, "note": [167, 179, 398, 634, 652, 657, 662, 663, 668, 669, 677, 678, 718], "noth": [464, 466], "notic": 720, "now": [0, 62, 398, 646, 677], "np": [4, 5, 6, 7, 15, 18, 21, 22, 25, 28, 32, 33, 35, 36, 37, 38, 44, 47, 50, 51, 53, 55, 59, 60, 63, 64, 65, 66, 71, 73, 76, 78, 79, 83, 86, 89, 90, 93, 94, 95, 96, 100, 102, 105, 107, 108, 111, 114, 117, 118, 128, 130, 135, 137, 145, 151, 190, 191, 192, 197, 199, 205, 206, 207, 208, 210, 211, 212, 214, 273, 291, 292, 293, 297, 298, 299, 302, 303, 304, 307, 308, 309, 312, 313, 314, 317, 318, 319, 322, 323, 324, 327, 328, 329, 334, 335, 336, 339, 340, 341, 344, 345, 346, 347, 350, 351, 352, 356, 357, 358, 361, 362, 370, 380, 384, 385, 388, 389, 396, 399, 400, 401, 402, 406, 408, 411, 413, 414, 418, 421, 424, 425, 429, 430, 431, 432, 438, 441, 444, 445, 448, 451, 455, 456, 468, 469, 470, 471, 474, 475, 476, 478, 481, 482, 484, 486, 489, 493, 494, 501, 502, 505, 510, 511, 619, 634, 635, 648, 649, 650, 651, 652, 657, 663, 665, 667, 668, 669, 676, 678, 681, 686, 705, 706, 708, 718], "npoint": 147, "npz": 717, "nr": [718, 720], "nthread": [4, 5, 6, 7, 15, 18, 22, 25, 28, 32, 35, 36, 37, 38, 44, 47, 51, 53, 55, 59, 63, 64, 65, 66, 71, 73, 78, 83, 86, 89, 93, 94, 95, 96, 100, 102, 107, 111, 114, 117, 204, 205, 206, 207, 208, 209, 210, 211, 212, 369, 371, 373, 380, 384, 388, 399, 400, 401, 402, 406, 408, 413, 418, 421, 424, 429, 430, 431, 432, 438, 441, 445, 448, 451, 455, 468, 469, 470, 471, 482, 486, 493, 502, 505, 510, 534, 541, 544, 550, 557, 558, 559, 560, 563, 566, 569, 573, 575, 576, 588, 598, 717, 718], "null_splin": 717, "number": [91, 92, 119, 137, 138, 140, 143, 146, 151, 152, 154, 168, 185, 190, 191, 192, 194, 204, 209, 277, 281, 284, 285, 287, 319, 329, 369, 371, 373, 384, 385, 426, 460, 635, 651, 652, 664, 667, 708, 718, 720], "number_of_faces_per_el": 385, "numer": [634, 720], "numpi": [79, 108, 147, 374, 377, 383, 390, 414, 520, 521, 522, 523, 526, 529, 536, 538, 541, 543, 544, 550, 551, 553, 557, 558, 559, 560, 563, 565, 566, 569, 573, 574, 575, 576, 582, 583, 584, 588, 589, 596, 598, 600, 602, 604, 605, 607, 611, 613, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 678, 680, 681, 682, 708, 717, 718, 720], "nurb": [92, 126, 136, 138, 140, 141, 143, 148, 152, 154, 156, 243, 267, 269, 271, 272, 274, 275, 428, 459, 465, 467, 492, 717, 718], "nurbs_curv": 398, "nut": [338, 343], "o": 385, "obj": [126, 156], "object": [25, 53, 83, 111, 126, 132, 133, 142, 156, 166, 178, 183, 186, 196, 198, 201, 214, 222, 225, 232, 235, 239, 240, 244, 246, 247, 250, 270, 281, 331, 360, 381, 384, 395, 418, 448, 502, 535, 552, 619, 621, 624, 627, 646, 648, 652, 663, 667, 676, 677, 678, 686, 688, 691, 706, 718, 720], "objects_to_plot": 277, "obtain": [183, 720], "occur": [634, 649], "off": [0, 277, 720], "offset": [277, 358, 644, 651, 667, 680], "often": [3, 62], "oid": 326, "old": [79, 108, 414], "old_knot_vector": [602, 607], "omega_": [34, 467, 720], "omega_i": 720, "onc": [0, 34, 249, 657, 718, 720], "one": [0, 3, 62, 121, 135, 140, 145, 149, 160, 167, 172, 179, 204, 209, 293, 304, 309, 314, 341, 346, 347, 352, 398, 428, 634, 649, 652, 670, 707, 711, 715, 720], "ones": 720, "onli": [25, 34, 53, 83, 92, 111, 122, 126, 133, 141, 142, 156, 160, 166, 167, 172, 178, 179, 194, 240, 249, 250, 286, 299, 352, 372, 398, 418, 448, 467, 502, 634, 644, 652, 663, 668, 711, 717, 718, 720], "onto": 186, "open": [0, 34, 92, 127, 129, 140, 186, 240, 260, 677, 720], "oper": [34, 75, 79, 92, 104, 108, 410, 414, 461, 676], "optim": [652, 720], "option": [11, 40, 79, 108, 121, 123, 138, 140, 141, 143, 149, 152, 154, 197, 198, 199, 201, 219, 220, 221, 223, 224, 225, 228, 229, 230, 231, 233, 234, 235, 238, 240, 243, 249, 250, 277, 353, 392, 414, 434, 507, 634, 635, 649, 657, 663, 667, 668, 669, 676, 694, 705, 718, 720], "order": [6, 7, 15, 16, 37, 38, 44, 45, 65, 66, 71, 92, 95, 96, 100, 197, 198, 199, 200, 201, 203, 217, 268, 269, 277, 284, 285, 401, 402, 406, 431, 432, 438, 439, 470, 471, 482, 559, 560, 563, 596, 632, 633, 634, 649, 657, 660, 662, 663, 666, 669, 676, 677, 679, 681, 705, 718, 720], "org": 277, "orient": [217, 316, 326, 384], "origin": [136, 140, 148, 183, 718], "other": [79, 92, 108, 221, 231, 293, 341, 346, 347, 355, 414, 634, 648, 663, 668, 717, 720], "otherwis": [21, 50, 76, 77, 85, 105, 106, 113, 133, 142, 257, 411, 412, 420, 444, 489, 634, 649, 676, 694, 720], "our": [183, 651], "ourselv": [3, 62, 398, 428, 720], "out": [21, 50, 76, 105, 122, 246, 247, 411, 444, 489, 628, 629, 630, 631, 635, 636, 637, 638, 642, 643, 653, 654, 655, 658, 664, 671, 672, 674, 680, 682, 718, 720], "outer": [11, 12, 40, 41, 143, 152, 281, 282, 434, 435, 591, 592, 593, 718], "outer_radiu": [141, 143, 152, 153, 718], "outer_rariu": 153, "output": [249, 277, 657, 677], "output_dict": [246, 265], "outward": [293, 304, 309, 314, 324, 341, 347, 352, 358], "over": [649, 658, 672, 678, 720], "overcom": [398, 677], "overlap": [167, 179], "overview": [467, 718], "overwrit": [183, 257], "own": [459, 663, 668, 720], "owndata": 668, "owner": 668, "p": [3, 34, 62, 92, 398, 428, 681, 720], "p_": 720, "p_0": [319, 329], "p_1": [319, 329], "p_2": [319, 329], "p_3": [319, 329], "p_basis0": 718, "p_basis1": 718, "pad": [183, 717], "panzer": 705, "para_2_dim_2": 718, "para_coord": [25, 53, 83, 111, 418, 448, 502], "para_coordin": 718, "para_dim": [3, 4, 5, 6, 7, 15, 16, 18, 21, 22, 25, 31, 32, 35, 36, 37, 38, 44, 45, 47, 50, 51, 53, 58, 59, 62, 63, 64, 65, 66, 71, 73, 76, 78, 83, 89, 91, 93, 94, 95, 96, 100, 102, 105, 107, 111, 117, 119, 160, 161, 162, 166, 167, 169, 172, 173, 174, 177, 178, 179, 180, 181, 204, 205, 206, 207, 208, 209, 210, 211, 212, 240, 273, 284, 285, 294, 309, 314, 380, 398, 399, 400, 401, 402, 406, 408, 411, 413, 418, 424, 426, 428, 429, 430, 431, 432, 438, 439, 441, 444, 445, 448, 454, 455, 467, 468, 469, 470, 471, 474, 481, 482, 484, 486, 489, 493, 501, 502, 510, 565, 574, 602, 604, 605, 609, 611, 613, 717, 718, 720], "para_splin": [136, 148], "paradim": [211, 281], "parallel": 718, "param": [3, 34, 62, 92, 292, 298, 303, 308, 313, 318, 323, 328, 335, 340, 345, 351, 357, 362, 398, 428, 467], "paramet": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 265, 266, 268, 269, 270, 271, 272, 274, 275, 277, 281, 282, 284, 285, 286, 287, 291, 292, 293, 294, 297, 298, 299, 302, 303, 304, 307, 308, 309, 312, 313, 314, 317, 318, 319, 322, 323, 324, 327, 328, 329, 330, 331, 334, 335, 336, 339, 340, 341, 344, 345, 346, 347, 350, 351, 352, 353, 356, 357, 358, 361, 362, 363, 369, 371, 372, 373, 376, 378, 380, 381, 382, 384, 388, 389, 392, 393, 394, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 614, 618, 619, 621, 624, 625, 634, 635, 646, 647, 648, 649, 651, 652, 657, 662, 663, 667, 668, 669, 676, 677, 678, 681, 685, 686, 688, 691, 692, 694, 696, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 720], "parameter": [190, 191, 194, 717, 720], "parameter_sensit": [293, 299, 304, 309, 314, 319, 324, 329, 336, 341, 346, 347, 352, 358], "parameter_sensitivity_funct": 717, "parameterspac": 717, "parametr": [0, 3, 11, 12, 25, 28, 34, 40, 41, 53, 55, 77, 79, 83, 86, 91, 92, 106, 108, 111, 114, 119, 128, 130, 135, 136, 137, 140, 145, 146, 148, 151, 158, 160, 166, 167, 168, 171, 172, 178, 179, 180, 183, 185, 192, 193, 194, 197, 199, 204, 209, 216, 217, 284, 285, 287, 293, 304, 309, 314, 316, 326, 341, 346, 352, 369, 380, 386, 388, 412, 414, 418, 421, 426, 434, 435, 448, 451, 467, 500, 502, 505, 525, 694, 718, 720], "parametric_bound": [146, 694, 717, 720], "parametric_coordin": [192, 718], "parametric_dimens": [17, 27, 46, 54, 72, 77, 79, 84, 85, 101, 106, 108, 112, 113, 407, 412, 414, 419, 420, 440, 450, 485, 503], "parametric_funct": 717, "parametric_spac": [240, 501], "parametric_view": [158, 171, 717], "parametrization_funct": [280, 284, 717], "parent": [126, 196], "part": [0, 143, 183, 249, 635, 651, 718], "partial": [11, 12, 40, 41, 203, 210, 211, 434, 435, 657, 669, 718], "partial_parti": 718, "particular": 720, "partit": [632, 669, 717, 720], "pass": [3, 34, 62, 92, 168, 186, 281, 286, 309, 314, 398, 428, 634, 657, 662, 718], "patch": [75, 104, 153, 159, 249, 267, 271, 368, 369, 370, 373, 382, 385, 396, 410, 717, 718], "path": [0, 263, 646, 677], "pathlib": [646, 677], "paul": 705, "pep": 0, "per": [91, 119, 166, 167, 178, 179, 192, 281, 287, 294, 426, 718, 720], "perform": [75, 104, 186, 214, 410, 472, 488, 491, 718], "period": 720, "permut": [217, 681], "permutation_list": 217, "permute_parametric_ax": 717, "perspect": 720, "philosoph": 514, "phy": [3, 62, 398, 428, 467], "phys_coord": [25, 53, 83, 111, 418, 448, 502], "phys_diff": [25, 53, 83, 111, 418, 448, 502], "phys_dim": 601, "physic": [0, 3, 20, 23, 25, 49, 52, 53, 62, 80, 83, 109, 111, 133, 134, 142, 144, 146, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 379, 398, 415, 418, 428, 443, 446, 448, 467, 483, 497, 502, 718], "physical_bound": 146, "physical_coordin": 718, "physical_coordind": 718, "physical_deriv": 718, "physical_differ": 718, "physical_funct": 717, "physicalspacearrai": 717, "pickl": [646, 647], "pictur": 277, "piegl": 720, "pierr": 720, "pink": 720, "pip": [0, 718], "pixel": 720, "place": [618, 635, 663, 667, 669, 681, 685, 718, 720], "plai": 720, "plane": [138, 140, 168], "plant": [25, 53, 83, 111, 418, 448, 502], "plastic": 720, "plate": [154, 717], "pleas": [19, 48, 74, 103, 186, 188, 409, 442, 487, 718, 720], "plot": [277, 694], "plotter": [29, 56, 87, 115, 186, 286, 422, 452, 506], "plt": 286, "pmb": [708, 720], "po": 720, "point": [0, 3, 11, 12, 25, 34, 40, 41, 53, 62, 79, 83, 92, 108, 111, 122, 134, 138, 144, 147, 164, 165, 176, 183, 190, 191, 192, 193, 194, 203, 204, 208, 209, 210, 211, 212, 213, 270, 277, 281, 284, 285, 293, 304, 309, 314, 341, 346, 347, 352, 372, 378, 384, 398, 414, 418, 428, 434, 435, 448, 475, 476, 478, 498, 502, 694, 705, 708, 718, 720], "polygon": 720, "polynomi": [3, 34, 92, 720], "polynomial_bezi": 3, "pop": [717, 720], "portion": 720, "posit": [11, 12, 25, 40, 41, 53, 83, 111, 160, 172, 185, 277, 284, 346, 371, 380, 385, 396, 418, 434, 435, 448, 502, 657], "possibl": [0, 21, 50, 76, 105, 154, 249, 259, 277, 411, 444, 489, 634, 720], "possibli": [242, 678], "potenti": [143, 152], "power": 720, "practic": 718, "pragma": 0, "pre": 0, "precalcul": 204, "precis": [269, 677, 678], "precommit": 0, "predefin": [330, 618, 685], "prefer": 249, "prefix": 257, "prepar": [0, 239, 694], "prepend": 715, "prepend_log": 717, "present": 694, "preserv": [136, 148, 634, 718], "pretti": 243, "prevent": [260, 663], "previou": 644, "previous": [136, 148, 718, 720], "primit": 718, "princip": 720, "print": [243, 277], "prism": 479, "problem": [677, 718], "proce": 428, "procedur": 239, "process": [458, 720], "prod": [4, 5, 6, 7, 32, 35, 36, 37, 38, 59, 63, 64, 65, 66, 89, 93, 94, 95, 96, 117, 205, 206, 207, 211, 399, 400, 401, 402, 424, 429, 430, 431, 432, 455, 468, 469, 470, 471, 510, 717], "produc": [635, 676, 677], "product": [3, 28, 55, 62, 86, 114, 380, 388, 421, 451, 505, 642, 658, 705, 720], "project": [133, 142, 398, 720], "propag": [371, 720], "proper": 717, "properli": [0, 668], "properti": [8, 9, 24, 26, 67, 82, 92, 184, 185, 188, 265, 282, 283, 284, 285, 287, 370, 379, 381, 382, 385, 386, 387, 392, 394, 396, 417, 447, 449, 463, 464, 466, 472, 474, 475, 476, 478, 479, 481, 483, 484, 488, 490, 491, 492, 494, 495, 496, 498, 499, 500, 501, 504, 507, 509, 512, 513, 514, 515, 539, 540, 545, 546, 547, 548, 549, 554, 555, 561, 564, 567, 568, 570, 571, 572, 577, 681, 718], "propos": 720, "prototyp": 718, "provid": [147, 183, 281, 283, 284, 285, 349, 381, 499, 657, 668, 717, 718, 720], "proxim": [717, 718], "public": 718, "pull": 0, "pure": [0, 242], "purpos": 663, "put": [667, 717], "py": [0, 182, 288, 457, 472, 488, 491, 616, 710], "pyarray_resolvewritebackifcopi": 668, "pybind11_object": [517, 524, 530, 533, 556, 578], "pymultipatch": [368, 374, 375, 377, 383, 390, 395, 717], "pypi": 663, "pyramid": 717, "pysplin": [14, 43, 70, 99, 405, 437, 467, 480, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 599, 600, 601, 603, 604, 608, 609, 611, 612, 613, 717], "python": [242, 652, 663, 676, 677, 678], "python3": [0, 718], "q": [3, 62, 398, 428], "qquad": 720, "quad": [11, 40, 434, 720], "quadrat": [143, 301, 306, 349], "quadratur": [198, 201], "quarter": 428, "quarter_circl": 718, "queri": [4, 5, 6, 7, 15, 18, 22, 25, 32, 35, 36, 37, 38, 44, 47, 51, 53, 59, 63, 64, 65, 66, 71, 73, 78, 79, 83, 89, 93, 94, 95, 96, 100, 102, 107, 108, 111, 117, 126, 128, 130, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 380, 399, 400, 401, 402, 406, 408, 413, 414, 418, 424, 429, 430, 431, 432, 438, 441, 445, 448, 455, 458, 468, 469, 470, 471, 472, 482, 486, 493, 502, 510, 541, 557, 558, 559, 560, 563, 566, 569, 573, 576, 694, 708, 709, 718, 720], "question": [514, 705], "quick": 677, "quicksort": 669, "quiver_s": 277, "quot": 0, "quotat": 718, "r": [0, 3, 62, 92, 140, 152, 358, 398, 428, 467, 696, 718, 720], "r_": 720, "radian": 299, "radiant": [137, 151], "radii": [316, 326, 352], "radiu": [138, 140, 141, 143, 149, 152, 153, 154, 293, 304, 309, 314, 324, 329, 341, 347, 352, 358, 720], "rais": [25, 53, 83, 111, 246, 247, 418, 448, 502, 634, 636, 659, 663, 674, 720], "randint": 652, "random": 652, "rang": [31, 58, 81, 110, 168, 416, 454, 720], "rare": 648, "raster": 709, "ratio": [185, 277, 720], "ration": [133, 138, 142, 159, 274, 275, 277, 398, 428, 492, 718], "rational_bezi": [459, 717], "rationalbezi": [34, 138, 149, 459, 467, 717, 718], "ravel": [649, 717, 718], "ravel_multi_index": 214, "raw": [273, 676, 718], "re": [25, 53, 83, 111, 418, 448, 502], "reach": [371, 720], "read": [244, 250, 253, 263, 271, 275, 428, 644, 646], "read_ig": 717, "read_solut": 717, "readabl": [249, 260, 277], "reader": 720, "readi": [271, 718], "real": [634, 635, 720], "realloc": 663, "reason": 720, "reassign": [376, 620, 687], "recent": [663, 668, 678], "recommend": [25, 53, 83, 111, 418, 448, 502, 717], "recomput": [378, 383, 543], "recov": 677, "recreat": 678, "rectangl": [139, 321], "recurr": 720, "recurs": [0, 92, 678, 707, 718], "red": 277, "redirect": 187, "reduc": [0, 27, 54, 84, 112, 419, 450, 503, 718, 720], "reduce_degre": 717, "refcheck": 663, "refer": [12, 23, 34, 41, 52, 80, 92, 109, 127, 129, 133, 142, 203, 385, 415, 435, 446, 467, 497, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 642, 643, 644, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 669, 670, 671, 672, 673, 674, 680, 681, 682, 718, 720], "referenc": [663, 668], "reference_nurb": 272, "refin": [91, 119, 426, 718, 720], "regard": 720, "regist": [223, 224, 228, 233, 234, 238], "regular": 641, "rel": 277, "relat": [79, 92, 108, 167, 179, 249, 414, 479, 498, 718, 720], "relev": 240, "reli": 277, "reliabl": 663, "remov": [85, 113, 420, 644, 670, 707, 718], "remove_knot": 717, "renault": 720, "render": 720, "reorder": [216, 217], "reparametr": 717, "repeat": [34, 92, 717, 720], "replac": [257, 263, 459], "repo": 0, "repres": [11, 21, 23, 40, 50, 52, 76, 79, 80, 105, 108, 109, 133, 142, 157, 158, 159, 170, 171, 203, 277, 281, 319, 329, 363, 369, 370, 373, 398, 411, 414, 415, 434, 444, 446, 489, 497, 720], "represent": [11, 16, 40, 45, 168, 180, 203, 382, 434, 439, 618, 635, 685, 694, 720], "request": [0, 16, 45, 128, 130, 346, 439, 458], "requied_properti": 504, "requir": [0, 204, 209, 269, 277, 281, 284, 285, 324, 384, 463, 464, 465, 466, 504, 634, 694, 718, 720], "required_properti": 717, "required_spline_properti": 465, "requiredproperti": 717, "requiredsplineproperti": 465, "resembl": [277, 296], "reserv": 277, "reshap": [663, 681, 717], "residu": [25, 53, 83, 111, 191, 193, 194, 418, 448, 502], "residual_curv": 718, "residual_surfac": 718, "resiz": 717, "resolut": [28, 55, 86, 114, 166, 167, 169, 178, 179, 181, 240, 369, 380, 388, 421, 451, 474, 505, 550, 575, 618, 619, 685, 686, 694, 696, 709, 718, 720], "resolution_1": 709, "resolution_2": 709, "respect": [11, 12, 25, 40, 41, 53, 83, 111, 157, 170, 203, 249, 281, 293, 304, 309, 314, 319, 329, 336, 341, 346, 347, 358, 418, 434, 435, 448, 502, 668, 694, 720], "restrict": [3, 62, 398, 428, 644, 720], "result": [15, 18, 22, 28, 44, 47, 51, 55, 71, 73, 78, 86, 100, 102, 107, 114, 133, 137, 142, 151, 204, 209, 277, 299, 380, 388, 406, 408, 413, 421, 438, 441, 445, 451, 482, 486, 493, 494, 505, 512, 634, 650, 665, 677, 718, 720], "retain": 669, "retriev": [23, 52, 80, 109, 183, 204, 209, 250, 378, 415, 446, 497, 720], "return": [3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 265, 266, 268, 269, 270, 271, 272, 274, 275, 277, 281, 282, 284, 285, 286, 287, 291, 292, 293, 294, 297, 298, 299, 302, 303, 304, 307, 308, 309, 312, 313, 314, 317, 318, 319, 322, 323, 324, 327, 328, 329, 330, 331, 334, 335, 336, 339, 340, 341, 344, 345, 346, 347, 350, 351, 352, 353, 356, 357, 358, 361, 362, 363, 369, 370, 371, 372, 373, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 526, 527, 529, 614, 618, 619, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 640, 642, 643, 644, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 662, 663, 664, 665, 667, 669, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 685, 686, 688, 689, 690, 691, 692, 693, 696, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 718], "return_discret": 240, "return_gustaf": [186, 240], "return_show": [30, 57, 88, 116, 186, 187, 240, 393, 423, 453, 508], "return_verbos": [25, 53, 83, 111, 418, 448, 502, 718], "revers": [681, 705], "revolut": [137, 143, 151, 152, 154], "revolv": [154, 717, 718], "rewritten": [3, 62], "rgb": [277, 720], "right": [203, 217, 657], "roger": 720, "role": 720, "rotat": [138, 141, 143, 152, 154, 319, 329], "roti": [319, 329], "rotx": [319, 329], "round": 717, "row": [277, 649], "row_indic": 717, "rp_intersect": 464, "rp_union": 466, "rtype": 379, "rule": 720, "run": [0, 720], "runtim": [25, 53, 83, 111, 418, 448, 502], "rwth": [242, 244], "s1": 669, "s3": 635, "safe": [222, 232, 255, 634, 663], "sai": 260, "said": [284, 285], "same": [5, 7, 16, 36, 38, 45, 64, 66, 94, 96, 136, 148, 164, 165, 176, 204, 209, 214, 249, 255, 398, 400, 402, 430, 432, 439, 469, 471, 499, 634, 635, 648, 650, 662, 665, 678, 679, 681, 706, 709, 720], "same_kind": 634, "same_nurb": 82, "same_parametric_bound": [550, 717], "same_spline_with_knot_vector": 717, "sampl": [25, 53, 83, 111, 166, 167, 169, 178, 179, 181, 239, 418, 448, 502, 694, 717, 718, 720], "satisfi": [294, 634, 720], "save": [10, 13, 25, 39, 42, 53, 68, 69, 83, 97, 98, 111, 243, 249, 252, 262, 265, 274, 382, 403, 404, 418, 433, 436, 448, 473, 477, 502, 620, 624, 687, 691, 720], "saved_data": [13, 42, 69, 98, 404, 436, 477], "scalar": [11, 40, 208, 398, 428, 434, 619, 648, 652, 678, 686, 694, 720], "scalarbar": [277, 720], "scalarbar3d": 720, "scalarbar_aspect_ratio": 277, "scalarbar_font_s": 277, "scalarbar_offset": 277, "scalarbar_stroke_width": 277, "scalarbar_tick_dist": 277, "scalarbar_width": 277, "scale": [183, 717, 720], "scenario": [79, 108, 414], "scheme": 0, "scienc": 720, "scientif": 720, "scipi": [79, 108, 414, 708], "script": 720, "seamless": 718, "search": [25, 53, 83, 111, 418, 448, 502, 718], "searchsort": [669, 717], "second": [203, 277, 324, 657, 669, 718, 720], "second_deriv": [25, 53, 83, 111, 418, 448, 502, 718], "section": [138, 154, 259, 260, 269, 720], "section_angl": 154, "section_inner_radiu": 154, "section_n_knot_span": 154, "section_outer_radiu": [154, 718], "see": [0, 3, 29, 30, 34, 56, 57, 62, 79, 87, 88, 92, 108, 115, 116, 121, 187, 204, 205, 206, 207, 208, 209, 210, 277, 316, 326, 393, 398, 414, 422, 423, 428, 452, 453, 506, 508, 634, 657, 666, 668, 669, 718, 720], "seed": [371, 652], "seen": [34, 467], "segment": [269, 720], "select": [249, 638, 651, 657, 720], "self": [13, 14, 20, 31, 42, 43, 49, 58, 69, 70, 98, 99, 134, 135, 137, 144, 145, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 197, 198, 199, 201, 205, 206, 207, 374, 375, 377, 383, 390, 395, 404, 405, 436, 437, 443, 454, 477, 480, 513, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 538, 541, 542, 543, 544, 550, 551, 552, 553, 557, 558, 559, 560, 562, 563, 565, 566, 569, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 635, 720], "sensit": [11, 40, 284, 293, 304, 309, 314, 319, 329, 336, 341, 346, 347, 358, 363, 434], "sep": 677, "separ": [249, 352, 662, 677], "seperator_dist": 352, "sequenc": [657, 720], "seri": 720, "serv": [717, 718], "set": [0, 11, 25, 40, 53, 79, 81, 83, 92, 108, 110, 111, 123, 128, 130, 134, 136, 144, 148, 183, 187, 249, 257, 284, 285, 316, 324, 326, 372, 373, 380, 384, 389, 414, 416, 418, 434, 448, 502, 634, 636, 659, 663, 668, 683, 694, 711, 717, 718], "set_boundari": 717, "set_interfac": 717, "set_row": 717, "setfield": 717, "setflag": 717, "setter": 188, "sever": 718, "shallow": [13, 42, 69, 98, 136, 148, 404, 436, 477], "shape": [6, 7, 15, 25, 37, 38, 44, 53, 65, 66, 71, 83, 95, 96, 100, 111, 149, 150, 154, 203, 290, 291, 292, 297, 298, 302, 303, 307, 308, 312, 313, 317, 318, 322, 323, 327, 328, 334, 335, 339, 340, 344, 345, 350, 351, 356, 357, 361, 362, 398, 401, 402, 406, 418, 431, 432, 438, 448, 470, 471, 482, 502, 634, 650, 662, 663, 681, 718, 720], "share": [467, 663, 720], "shell": 718, "shini": 720, "short": 676, "should": [31, 58, 136, 148, 183, 185, 363, 454, 459, 499, 634, 666, 718, 720], "show": [30, 57, 88, 116, 122, 187, 219, 229, 392, 393, 423, 453, 507, 508, 676, 717, 718, 720], "show_opt": [136, 148, 157, 170, 221, 231, 277, 717, 718], "showabl": [167, 179, 186, 239, 240, 717], "showable_or_plott": [29, 56, 87, 115, 422, 452, 506], "shown": 123, "showopt": [219, 221, 229, 231], "shrink": 663, "side": [290, 499, 657, 666, 717, 718], "similar": [203, 222, 232, 398, 428, 652, 720], "simpl": [288, 301, 306, 311, 338, 343, 349, 634, 678], "simpli": [221, 231, 681, 720], "simplic": [3, 62, 398, 428], "sin": 720, "sinc": [621, 657, 663, 678, 679, 688], "singl": [20, 49, 153, 267, 271, 376, 443, 648, 652, 657, 668, 669, 705, 720], "six": [309, 314], "size": [192, 194, 277, 369, 385, 651, 652, 663, 677, 718, 720], "skip": 651, "slice": [498, 638], "small": 277, "smaller": 657, "smooth": [718, 720], "snap": [355, 358], "snappi": 717, "so": [34, 92, 128, 130, 240, 663, 668, 677, 706, 720], "solid": 141, "solut": [203, 272, 718, 720], "solution_field": 718, "solution_nurb": 272, "solv": 193, "solve_for_control_point": 717, "solver": 718, "some": [12, 41, 123, 196, 209, 293, 304, 309, 314, 319, 329, 336, 341, 346, 347, 358, 435, 616, 668, 677, 718], "someth": 720, "sometim": [203, 678], "sort": [633, 657, 717], "sorter": 666, "sourc": [0, 3, 34, 40, 41, 45, 49, 58, 62, 92, 104, 106, 108, 110, 113, 119, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 186, 187, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 219, 229, 239, 240, 243, 244, 246, 247, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 265, 266, 268, 269, 270, 271, 272, 274, 275, 277, 280, 281, 286, 290, 293, 294, 296, 299, 301, 304, 306, 309, 311, 314, 316, 319, 321, 324, 326, 329, 330, 331, 333, 336, 338, 341, 343, 346, 347, 349, 352, 353, 355, 358, 360, 361, 362, 363, 368, 369, 371, 372, 373, 376, 378, 380, 384, 388, 389, 391, 393, 398, 428, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 477, 482, 485, 486, 487, 489, 493, 497, 502, 503, 505, 506, 508, 510, 511, 614, 617, 618, 619, 627, 641, 650, 665, 683, 684, 685, 686, 694, 696, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 718], "space": [3, 23, 52, 62, 79, 80, 108, 109, 168, 180, 183, 203, 249, 257, 269, 277, 284, 398, 414, 415, 428, 446, 497, 663, 720], "span": [75, 91, 92, 104, 119, 138, 140, 143, 152, 154, 159, 410, 426, 525, 720], "spars": [79, 108, 414, 708], "special": [34, 92, 268], "specif": [79, 108, 128, 130, 249, 380, 389, 414, 694, 718, 720], "specifi": [221, 231, 249, 250, 277, 336, 341, 346, 347, 358, 499, 634, 644, 646, 652, 657, 663, 667, 669, 694, 718, 720], "speed": [249, 652, 677], "sphere": [717, 720], "sphinx": 0, "spl": [126, 132, 156, 196], "spline": [0, 3, 10, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 28, 29, 30, 31, 33, 34, 39, 40, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 62, 68, 71, 73, 74, 76, 78, 79, 80, 83, 86, 87, 88, 90, 92, 97, 100, 102, 103, 105, 107, 108, 109, 111, 114, 115, 116, 118, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 190, 191, 193, 194, 196, 197, 198, 199, 201, 203, 216, 217, 229, 239, 240, 242, 243, 244, 249, 250, 252, 253, 256, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 277, 281, 282, 283, 293, 299, 301, 304, 306, 309, 311, 314, 319, 324, 329, 336, 341, 346, 347, 349, 352, 358, 363, 367, 368, 369, 371, 373, 380, 381, 382, 384, 387, 388, 389, 393, 394, 398, 403, 406, 408, 409, 411, 413, 414, 415, 418, 421, 422, 423, 425, 428, 433, 434, 438, 439, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 456, 586, 587, 589, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 611, 612, 613, 614, 684, 694, 708, 717], "spline_cent": 396, "spline_copi": [79, 108, 414], "spline_data": [13, 42, 69, 98, 136, 148, 404, 436, 477, 717, 720], "spline_dic_list": 250, "spline_dictionari": 256, "spline_fac": [132, 156, 488, 491], "spline_id": 389, "spline_list": [243, 249, 265, 266, 270, 346], "spline_lit": 256, "spline_show": [30, 57, 88, 116, 393, 423, 453, 508], "splinedata": [509, 617, 717], "splinedataadaptor": 717, "splinegroup": 265, "splinelib": 203, "splinepi": [0, 717, 718, 720], "splinepy_cor": [14, 43, 70, 99, 374, 375, 377, 383, 390, 395, 405, 437, 480, 717], "splinepy_obj": [246, 247], "splinepybas": [183, 203, 280, 360, 368, 463, 467, 694], "splinepyenv": 0, "splineset": [379, 386], "splineshowopt": [392, 507, 717], "splinpi": 122, "split": [168, 717], "split_plan": 180, "splitting_plan": 168, "springer": 720, "squar": 269, "squeez": 717, "stabl": [277, 669], "stackoverflow": 705, "stai": [31, 58, 454], "stand": 694, "standard": [652, 671], "start": [138, 371, 720], "start_angl": 138, "state": [187, 720], "statement": [133, 142], "statu": [33, 60, 90, 118, 425, 456, 511], "std": 717, "stdin": 668, "still": [657, 669, 720], "stir": [222, 232], "storag": 677, "store": [13, 42, 69, 98, 204, 209, 268, 319, 329, 368, 370, 378, 385, 387, 404, 436, 477, 494, 512, 621, 634, 663, 688], "stori": 720, "str": [19, 48, 74, 103, 157, 170, 186, 240, 243, 244, 246, 247, 250, 252, 253, 255, 258, 259, 260, 262, 263, 265, 266, 269, 271, 272, 273, 274, 275, 293, 294, 304, 309, 314, 330, 331, 341, 352, 358, 409, 442, 464, 465, 466, 487, 499, 514, 590, 597, 610, 618, 619, 621, 624, 634, 646, 651, 657, 669, 677, 679, 685, 686, 688, 691, 711, 712, 713, 714, 715, 716, 720], "streamhandl": 711, "stride": 668, "string": [249, 257, 258, 270, 277, 281, 358, 459, 634, 635, 646, 647, 657, 668, 669, 677], "strip": [260, 263], "strip_com": 263, "structur": [281, 616, 634, 669, 718, 720], "strut": 336, "style": 649, "stype": 0, "sub": [180, 634], "sub_multipatch": 717, "sub_patch_cent": 717, "subclass": [183, 706], "submodul": [0, 718], "subok": 634, "subpatch": 718, "subsect": 168, "subsequ": 720, "subset": 467, "success": 720, "suffici": 720, "suggest": [0, 720], "suitabl": [652, 681], "sum": [203, 643, 680, 717], "sum_": [3, 62, 398, 428, 720], "sum_a": 203, "sum_b": 203, "super": [3, 34, 62, 92, 398, 428], "support": [3, 4, 5, 6, 7, 34, 35, 36, 37, 38, 62, 63, 64, 65, 66, 93, 94, 95, 96, 121, 122, 136, 146, 148, 158, 171, 183, 205, 206, 207, 246, 247, 267, 271, 286, 398, 399, 400, 401, 402, 428, 429, 430, 431, 432, 464, 466, 467, 468, 469, 470, 471, 677, 694, 708, 717, 718, 720], "sure": [0, 663], "surfac": [3, 62, 141, 143, 153, 167, 179, 281, 290, 346, 398, 428, 717, 718, 720], "surface_circl": 717, "surround": 349, "svg": [717, 718], "svg2": 277, "swap": 635, "swapax": 717, "switch": [166, 178], "symbol": 260, "sync": 717, "sync_row": 717, "system": [193, 368, 373, 379, 385, 386, 387, 720], "systemat": 718, "systemerror": 663, "t": [11, 12, 25, 40, 41, 53, 83, 111, 127, 129, 167, 179, 319, 329, 418, 434, 435, 448, 490, 502, 619, 634, 663, 681, 686], "tab": [257, 263], "tab_expand": 257, "tag": 249, "take": [134, 136, 144, 148, 258, 372, 651, 694, 717, 718, 720], "tangl": [133, 142], "task": 214, "tataratat": 718, "technic": 720, "templat": 0, "tend": 720, "tensor": [3, 62, 720], "term": [3, 62, 720], "terminologi": 720, "test": [316, 326, 358], "text": [249, 257, 677, 720], "text_anchor": 277, "text_color": 277, "textiowrapp": 260, "th": [92, 657, 681, 720], "than": [135, 145, 167, 179, 204, 209, 651, 657, 720], "thei": [0, 21, 50, 76, 92, 105, 240, 293, 304, 309, 314, 336, 341, 346, 347, 358, 371, 372, 411, 444, 489, 657, 669, 706, 718, 720], "them": [217, 263, 657, 718, 720], "theori": 467, "therefor": [133, 142], "theta_u": 92, "thi": [3, 11, 12, 25, 40, 41, 53, 62, 83, 92, 111, 127, 129, 135, 145, 157, 170, 183, 186, 187, 216, 217, 222, 232, 260, 268, 293, 304, 309, 314, 341, 346, 347, 363, 371, 398, 418, 428, 434, 435, 448, 459, 502, 632, 633, 634, 635, 638, 648, 652, 657, 662, 663, 668, 669, 676, 677, 678, 681, 694, 706, 707, 708, 711, 718, 720], "thick": [143, 293, 304, 309, 314, 324, 336, 341, 347, 352, 355, 358], "thicker": 358, "thin": [355, 710], "things_to_show": 240, "thinner": 358, "third": [277, 718], "thoma": 720, "those": 720, "thread": [204, 208, 209, 210, 211, 212, 371, 373, 384, 460], "three": [3, 62, 398, 428, 668, 720], "through": [191, 194, 239, 355, 358, 634, 718, 720], "throughout": [717, 720], "thu": [705, 720], "ti": [657, 669], "tick": 277, "tight_search_bound": [25, 53, 83, 111, 418, 448, 502, 573], "tild": [3, 62, 203, 255, 398, 428], "tile": [280, 284, 285, 717, 718], "tile_bas": 717, "tilebas": [290, 296, 301, 306, 311, 316, 321, 326, 331, 333, 338, 343, 349, 355, 717], "tiller": 720, "time": [0, 5, 7, 34, 36, 38, 64, 66, 92, 94, 96, 260, 400, 402, 430, 432, 469, 471, 720], "timsort": 669, "titl": [186, 720], "title_font": 720, "title_rot": 720, "title_s": 720, "title_xoffset": 720, "title_yoffset": 720, "to_deriv": 717, "to_devic": 717, "to_edg": 718, "to_mfem": 268, "tobyt": [677, 679, 717], "todict": 717, "todo": 394, "tofil": 717, "togeth": 718, "toggl": 635, "toler": [21, 25, 27, 50, 53, 54, 76, 83, 84, 85, 105, 111, 112, 113, 183, 270, 277, 371, 378, 384, 411, 418, 419, 420, 444, 448, 450, 489, 502, 503, 544, 573, 574, 587, 588, 602, 605, 607, 611, 717, 718], "tolist": [33, 60, 90, 118, 425, 456, 511, 717], "too": [277, 720], "tool": [288, 717], "top": 720, "toru": [717, 718], "torus_angl": 154, "torus_n_knot_span": 154, "torus_radiu": [154, 718], "tostr": 717, "total": [0, 281], "tr": 277, "trace": 717, "traceback": [663, 668, 678], "transform": [706, 720], "transit": 718, "transpar": 720, "transport": 677, "transpos": 717, "tree": [25, 53, 83, 111, 418, 448, 502], "tri": [27, 54, 84, 85, 112, 113, 221, 231, 246, 247, 259, 260, 263, 311, 419, 420, 450, 503], "trilinear": [306, 349], "true": [11, 13, 19, 30, 40, 42, 48, 57, 69, 74, 77, 85, 88, 98, 103, 106, 113, 116, 127, 128, 129, 130, 136, 137, 138, 141, 143, 148, 151, 152, 154, 158, 166, 167, 171, 178, 179, 186, 187, 191, 192, 193, 194, 216, 217, 240, 243, 249, 250, 257, 263, 265, 277, 291, 292, 297, 298, 302, 303, 307, 308, 312, 313, 317, 318, 322, 323, 327, 328, 334, 335, 339, 340, 344, 345, 350, 351, 356, 357, 361, 362, 369, 393, 404, 409, 412, 420, 423, 434, 436, 442, 453, 458, 477, 487, 490, 492, 508, 628, 629, 634, 635, 653, 654, 655, 658, 663, 668, 671, 672, 676, 682, 705, 708, 718, 720], "truss": 355, "try": [122, 720], "tube": 154, "tupl": [168, 180, 221, 231, 558, 560, 573, 587, 602, 618, 619, 652, 663, 681, 685, 686, 696, 705, 706, 720], "turn": [242, 259, 706, 720], "two": [3, 21, 50, 62, 76, 105, 203, 270, 293, 304, 309, 314, 321, 371, 378, 384, 398, 411, 428, 444, 489, 657, 720], "txt": 0, "type": [0, 3, 4, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 190, 192, 193, 197, 198, 199, 201, 204, 208, 209, 210, 211, 212, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 249, 250, 252, 253, 255, 256, 257, 258, 260, 262, 263, 265, 266, 269, 270, 271, 272, 274, 275, 277, 281, 282, 284, 285, 286, 287, 291, 292, 294, 297, 298, 299, 302, 303, 307, 308, 312, 313, 317, 318, 322, 323, 324, 327, 328, 330, 331, 334, 335, 336, 339, 340, 344, 345, 350, 351, 352, 353, 356, 357, 361, 362, 363, 369, 370, 371, 372, 373, 376, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 392, 393, 394, 396, 398, 399, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 459, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 614, 619, 621, 622, 623, 624, 625, 626, 634, 635, 649, 651, 652, 663, 667, 668, 676, 677, 678, 681, 686, 688, 689, 690, 691, 692, 693, 696, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718], "typecod": 634, "typeerror": 678, "tz": [319, 329], "u": [0, 3, 11, 12, 34, 40, 41, 62, 92, 133, 142, 203, 398, 428, 434, 435, 718, 720], "u2": 676, "u_": [92, 720], "u_1": 92, "u_2": 92, "u_i": [92, 203], "u_j": 203, "u_k": [190, 203], "u_l": 92, "u_n": 203, "uic": 668, "uint32": 678, "uint8": 635, "ultim": 668, "unabl": 398, "undefin": 657, "under": [669, 718], "underbrac": 720, "underli": [136, 148, 203], "underscor": 0, "uniform": [249, 398, 709], "uniform_queri": [717, 720], "uniform_refin": [717, 718], "uniformli": [28, 55, 86, 91, 114, 119, 388, 421, 426, 451, 505], "union": 717, "uniqu": [512, 526, 717, 720], "unique_knot": 717, "unit": [183, 277, 284, 285, 316, 326, 720], "uniti": 720, "univari": 720, "unless": [634, 652, 663, 720], "unlik": 662, "unpack": 648, "unpickl": 668, "unravel": 498, "unsaf": 634, "unspecifi": [657, 669], "until": [371, 720], "unus": 358, "up": [0, 203, 249, 467, 652, 657, 669], "updat": [0, 668, 717, 718, 720], "upper": [358, 668], "upper_1": 709, "upper_2": 709, "us": [0, 11, 21, 23, 34, 40, 50, 52, 76, 79, 80, 92, 105, 108, 109, 126, 137, 138, 141, 151, 156, 167, 168, 179, 183, 188, 191, 192, 193, 194, 203, 208, 210, 211, 212, 214, 216, 217, 249, 265, 271, 277, 284, 285, 293, 299, 304, 309, 314, 316, 324, 326, 336, 341, 346, 347, 349, 352, 358, 369, 371, 372, 373, 380, 384, 396, 398, 411, 414, 415, 434, 444, 446, 459, 467, 479, 489, 497, 498, 499, 616, 625, 634, 636, 652, 657, 663, 668, 669, 677, 692, 694, 705, 708, 717, 718, 720], "usag": [3, 34, 62, 79, 92, 108, 398, 414, 428, 467], "use_alpha": 720, "use_sav": 286, "user": 668, "usual": 720, "util": [254, 717, 718, 720], "v": [0, 3, 62, 281, 326, 398, 428, 666], "val": 667, "valid": [128, 130, 161, 162, 167, 169, 173, 174, 177, 179, 181, 221, 226, 227, 231, 236, 237], "valid_kei": 717, "valid_queri": [126, 472, 717], "valu": [4, 5, 11, 21, 25, 33, 35, 36, 40, 50, 53, 60, 63, 64, 76, 83, 90, 92, 93, 94, 105, 111, 118, 168, 180, 190, 191, 192, 193, 194, 196, 203, 204, 208, 209, 222, 225, 232, 235, 277, 293, 304, 309, 314, 319, 329, 341, 346, 347, 353, 370, 371, 372, 389, 399, 400, 411, 418, 425, 429, 430, 434, 444, 448, 456, 468, 469, 472, 489, 502, 511, 520, 521, 522, 523, 581, 582, 583, 584, 619, 621, 622, 624, 630, 631, 634, 635, 637, 648, 651, 653, 655, 657, 659, 667, 668, 686, 688, 689, 691, 694, 707, 708, 717, 720], "valueerror": [246, 247, 663, 668], "var": 717, "vari": [657, 669], "variabl": [12, 41, 281, 284, 285, 293, 304, 309, 314, 319, 329, 336, 341, 346, 347, 358, 435, 457, 652], "varianc": 682, "variat": [3, 62, 92], "variou": [240, 718], "vdim": 269, "ve": 0, "vector": [34, 81, 92, 110, 127, 129, 132, 135, 140, 145, 191, 192, 194, 203, 209, 249, 371, 416, 490, 495, 496, 527, 528, 694, 717, 720], "vedo": [29, 56, 87, 115, 186, 240, 277, 286, 422, 452, 506, 720], "verbose_output": [191, 194], "veri": [652, 720], "version": [82, 122, 632, 634, 644, 646, 657, 669, 676, 677, 679], "vertex_data": [696, 720], "vertex_id": 720, "vertic": [164, 165, 167, 176, 179, 183, 184, 186, 240, 268, 269, 324, 709, 718, 720], "via": [92, 134, 135, 137, 144, 145, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 197, 198, 199, 201, 678, 720], "view": [136, 148, 635, 644, 651, 663, 673, 681, 717], "visual": [29, 30, 56, 57, 87, 88, 115, 116, 186, 393, 422, 423, 452, 453, 506, 508, 717, 718], "vizus": [718, 720], "vmax": [277, 720], "vmin": [277, 720], "void": [316, 319, 326, 329, 652], "volum": [3, 62, 141, 163, 167, 175, 177, 179, 196, 398, 428, 491, 717, 720], "volumetr": [141, 150, 152, 154], "vtk": [19, 48, 74, 103, 409, 442, 487], "w": [3, 62, 398, 428, 668, 717, 720], "w3": 277, "wa": 669, "wai": [0, 467, 621, 657, 663, 688, 720], "wall": [293, 324, 341, 346, 347, 358], "want": [498, 694, 718, 720], "warn": [127, 129, 715, 717], "watertight": [167, 169, 179, 181], "wayn": 720, "we": [0, 3, 25, 34, 53, 62, 83, 92, 111, 183, 203, 398, 418, 428, 448, 467, 502, 651, 705, 717, 718, 720], "weight": [82, 133, 142, 243, 249, 269, 398, 428, 465, 467, 498, 515, 717, 718, 720], "weightpoint": 717, "welcom": [0, 718], "well": [183, 203, 316, 326, 467, 668, 720], "were": [372, 720], "what": [121, 123, 514, 634, 718, 720], "whatami": [273, 717], "wheel": 718, "when": [12, 41, 435, 634, 652, 657, 668, 669, 677, 720], "where": [11, 34, 40, 77, 106, 191, 193, 194, 208, 290, 293, 299, 304, 309, 314, 341, 346, 347, 412, 434, 628, 629, 648, 653, 654, 655, 658, 666, 671, 672, 682, 705, 707, 717, 718, 720], "whether": [141, 668], "which": [11, 12, 40, 41, 79, 108, 133, 134, 142, 144, 160, 172, 203, 352, 384, 385, 414, 434, 435, 634, 652, 657, 667, 668, 669, 694, 717, 718], "while": [260, 720], "white": [249, 277], "whole": 183, "whose": 637, "width": [150, 277, 720], "window": [186, 240, 718], "wise": 640, "within": [159, 197, 199, 200, 284, 370, 380, 634, 709, 718, 720], "without": [166, 178, 216, 668, 681], "won": [167, 179], "word": 720, "work": [133, 142, 652, 718, 720], "would": [0, 25, 53, 83, 111, 385, 418, 448, 502, 632, 633, 652, 657], "wrapper": [0, 465, 710], "write": [203, 249, 668, 677, 718, 720], "writeabl": [668, 683], "writebackifcopi": 668, "written": [203, 246, 265, 668, 677], "www": 277, "x": [138, 140, 147, 150, 152, 154, 193, 194, 203, 281, 316, 319, 326, 329, 378, 385, 634, 651, 652, 667, 668, 669, 676, 705, 718, 720], "x00": 676, "x01": 676, "x02": 676, "x03": 676, "x_": [160, 172], "x_i": [203, 210, 211], "x_j": [160, 172, 203, 211], "x_max": [293, 304, 341], "x_min": [293, 304, 341, 358], "xi": [217, 708], "xml": [242, 243, 244, 249, 250, 277, 718], "y": [138, 140, 150, 281, 316, 319, 326, 329, 649, 668, 669, 678, 705, 720], "yield": [154, 720], "you": [0, 25, 53, 83, 111, 166, 178, 202, 213, 214, 418, 448, 459, 498, 499, 502, 663, 694, 711, 718, 720], "your": [0, 459, 718, 720], "yuri": 720, "z": [138, 150, 281, 316, 319, 326, 329, 346, 652], "z_max": [309, 314, 352], "z_min": [309, 314, 352], "zero": [134, 137, 144, 151, 159, 249, 299, 656, 663, 720], "zoom": 718}, "titles": ["Contributing", "splinepy", "splinepy.bezier", "splinepy.bezier.Bezier", "splinepy.bezier.Bezier.basis", "splinepy.bezier.Bezier.basis_and_support", "splinepy.bezier.Bezier.basis_derivative", "splinepy.bezier.Bezier.basis_derivative_and_support", "splinepy.bezier.Bezier.bezier", "splinepy.bezier.Bezier.bspline", "splinepy.bezier.Bezier.clear", "splinepy.bezier.Bezier.compose", "splinepy.bezier.Bezier.composition_derivative", "splinepy.bezier.Bezier.copy", "splinepy.bezier.Bezier.current_core_properties", "splinepy.bezier.Bezier.derivative", "splinepy.bezier.Bezier.derivative_spline", "splinepy.bezier.Bezier.elevate_degrees", "splinepy.bezier.Bezier.evaluate", "splinepy.bezier.Bezier.export", "splinepy.bezier.Bezier.extract_dim", "splinepy.bezier.Bezier.greville_abscissae", "splinepy.bezier.Bezier.jacobian", "splinepy.bezier.Bezier.mapper", "splinepy.bezier.Bezier.nurbs", "splinepy.bezier.Bezier.proximities", "splinepy.bezier.Bezier.rationalbezier", "splinepy.bezier.Bezier.reduce_degrees", "splinepy.bezier.Bezier.sample", "splinepy.bezier.Bezier.show", "splinepy.bezier.Bezier.showable", "splinepy.bezier.Bezier.split", "splinepy.bezier.Bezier.support", "splinepy.bezier.Bezier.todict", "splinepy.bezier.BezierBase", "splinepy.bezier.BezierBase.basis", "splinepy.bezier.BezierBase.basis_and_support", "splinepy.bezier.BezierBase.basis_derivative", "splinepy.bezier.BezierBase.basis_derivative_and_support", "splinepy.bezier.BezierBase.clear", "splinepy.bezier.BezierBase.compose", "splinepy.bezier.BezierBase.composition_derivative", "splinepy.bezier.BezierBase.copy", "splinepy.bezier.BezierBase.current_core_properties", "splinepy.bezier.BezierBase.derivative", "splinepy.bezier.BezierBase.derivative_spline", "splinepy.bezier.BezierBase.elevate_degrees", "splinepy.bezier.BezierBase.evaluate", "splinepy.bezier.BezierBase.export", "splinepy.bezier.BezierBase.extract_dim", "splinepy.bezier.BezierBase.greville_abscissae", "splinepy.bezier.BezierBase.jacobian", "splinepy.bezier.BezierBase.mapper", "splinepy.bezier.BezierBase.proximities", "splinepy.bezier.BezierBase.reduce_degrees", "splinepy.bezier.BezierBase.sample", "splinepy.bezier.BezierBase.show", "splinepy.bezier.BezierBase.showable", "splinepy.bezier.BezierBase.split", "splinepy.bezier.BezierBase.support", "splinepy.bezier.BezierBase.todict", "splinepy.bspline", "splinepy.bspline.BSpline", "splinepy.bspline.BSpline.basis", "splinepy.bspline.BSpline.basis_and_support", "splinepy.bspline.BSpline.basis_derivative", "splinepy.bspline.BSpline.basis_derivative_and_support", "splinepy.bspline.BSpline.bspline", "splinepy.bspline.BSpline.clear", "splinepy.bspline.BSpline.copy", "splinepy.bspline.BSpline.current_core_properties", "splinepy.bspline.BSpline.derivative", "splinepy.bspline.BSpline.elevate_degrees", "splinepy.bspline.BSpline.evaluate", "splinepy.bspline.BSpline.export", "splinepy.bspline.BSpline.extract_bezier_patches", "splinepy.bspline.BSpline.greville_abscissae", "splinepy.bspline.BSpline.insert_knots", "splinepy.bspline.BSpline.jacobian", "splinepy.bspline.BSpline.knot_insertion_matrix", "splinepy.bspline.BSpline.mapper", "splinepy.bspline.BSpline.normalize_knot_vectors", "splinepy.bspline.BSpline.nurbs", "splinepy.bspline.BSpline.proximities", "splinepy.bspline.BSpline.reduce_degrees", "splinepy.bspline.BSpline.remove_knots", "splinepy.bspline.BSpline.sample", "splinepy.bspline.BSpline.show", "splinepy.bspline.BSpline.showable", "splinepy.bspline.BSpline.support", "splinepy.bspline.BSpline.todict", "splinepy.bspline.BSpline.uniform_refine", "splinepy.bspline.BSplineBase", "splinepy.bspline.BSplineBase.basis", "splinepy.bspline.BSplineBase.basis_and_support", "splinepy.bspline.BSplineBase.basis_derivative", "splinepy.bspline.BSplineBase.basis_derivative_and_support", "splinepy.bspline.BSplineBase.clear", "splinepy.bspline.BSplineBase.copy", "splinepy.bspline.BSplineBase.current_core_properties", "splinepy.bspline.BSplineBase.derivative", "splinepy.bspline.BSplineBase.elevate_degrees", "splinepy.bspline.BSplineBase.evaluate", "splinepy.bspline.BSplineBase.export", "splinepy.bspline.BSplineBase.extract_bezier_patches", "splinepy.bspline.BSplineBase.greville_abscissae", "splinepy.bspline.BSplineBase.insert_knots", "splinepy.bspline.BSplineBase.jacobian", "splinepy.bspline.BSplineBase.knot_insertion_matrix", "splinepy.bspline.BSplineBase.mapper", "splinepy.bspline.BSplineBase.normalize_knot_vectors", "splinepy.bspline.BSplineBase.proximities", "splinepy.bspline.BSplineBase.reduce_degrees", "splinepy.bspline.BSplineBase.remove_knots", "splinepy.bspline.BSplineBase.sample", "splinepy.bspline.BSplineBase.show", "splinepy.bspline.BSplineBase.showable", "splinepy.bspline.BSplineBase.support", "splinepy.bspline.BSplineBase.todict", "splinepy.bspline.BSplineBase.uniform_refine", "splinepy.cli", "splinepy.cli.convert", "splinepy.cli.entry", "splinepy.cli.show", "splinepy.helpme", "splinepy.helpme.check", "splinepy.helpme.check.Checker", "splinepy.helpme.check.Checker.clamped_knot_vectors", "splinepy.helpme.check.Checker.valid_queries", "splinepy.helpme.check.clamped_knot_vectors", "splinepy.helpme.check.valid_queries", "splinepy.helpme.create", "splinepy.helpme.create.Creator", "splinepy.helpme.create.Creator.determinant_spline", "splinepy.helpme.create.Creator.embedded", "splinepy.helpme.create.Creator.extruded", "splinepy.helpme.create.Creator.parametric_view", "splinepy.helpme.create.Creator.revolved", "splinepy.helpme.create.arc", "splinepy.helpme.create.box", "splinepy.helpme.create.circle", "splinepy.helpme.create.cone", "splinepy.helpme.create.determinant_spline", "splinepy.helpme.create.disk", "splinepy.helpme.create.embedded", "splinepy.helpme.create.extruded", "splinepy.helpme.create.from_bounds", "splinepy.helpme.create.line", "splinepy.helpme.create.parametric_view", "splinepy.helpme.create.plate", "splinepy.helpme.create.pyramid", "splinepy.helpme.create.revolved", "splinepy.helpme.create.sphere", "splinepy.helpme.create.surface_circle", "splinepy.helpme.create.torus", "splinepy.helpme.extract", "splinepy.helpme.extract.Extractor", "splinepy.helpme.extract.Extractor.arrow_data", "splinepy.helpme.extract.Extractor.bases", "splinepy.helpme.extract.Extractor.beziers", "splinepy.helpme.extract.Extractor.boundaries", "splinepy.helpme.extract.Extractor.control_edges", "splinepy.helpme.extract.Extractor.control_faces", "splinepy.helpme.extract.Extractor.control_mesh", "splinepy.helpme.extract.Extractor.control_points", "splinepy.helpme.extract.Extractor.control_volumes", "splinepy.helpme.extract.Extractor.edges", "splinepy.helpme.extract.Extractor.faces", "splinepy.helpme.extract.Extractor.spline", "splinepy.helpme.extract.Extractor.volumes", "splinepy.helpme.extract.arrow_data", "splinepy.helpme.extract.bases", "splinepy.helpme.extract.boundaries", "splinepy.helpme.extract.control_edges", "splinepy.helpme.extract.control_faces", "splinepy.helpme.extract.control_mesh", "splinepy.helpme.extract.control_points", "splinepy.helpme.extract.control_volumes", "splinepy.helpme.extract.edges", "splinepy.helpme.extract.faces", "splinepy.helpme.extract.spline", "splinepy.helpme.extract.volumes", "splinepy.helpme.ffd", "splinepy.helpme.ffd.FFD", "splinepy.helpme.ffd.FFD.mesh", "splinepy.helpme.ffd.FFD.padding", "splinepy.helpme.ffd.FFD.show", "splinepy.helpme.ffd.FFD.showable", "splinepy.helpme.ffd.FFD.spline", "splinepy.helpme.fit", "splinepy.helpme.fit.compute_knot_vector", "splinepy.helpme.fit.curve", "splinepy.helpme.fit.parameterize", "splinepy.helpme.fit.solve_for_control_points", "splinepy.helpme.fit.surface", "splinepy.helpme.integrate", "splinepy.helpme.integrate.Integrator", "splinepy.helpme.integrate.Integrator.parametric_function", "splinepy.helpme.integrate.Integrator.volume", "splinepy.helpme.integrate.parametric_function", "splinepy.helpme.integrate.physical_function", "splinepy.helpme.integrate.volume", "splinepy.helpme.mapper", "splinepy.helpme.mapper.Mapper", "splinepy.helpme.mapper.Mapper.basis_function_derivatives", "splinepy.helpme.mapper.Mapper.basis_gradient_and_support", "splinepy.helpme.mapper.Mapper.basis_hessian_and_support", "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", "splinepy.helpme.mapper.Mapper.divergence", "splinepy.helpme.mapper.Mapper.field_derivatives", "splinepy.helpme.mapper.Mapper.gradient", "splinepy.helpme.mapper.Mapper.hessian", "splinepy.helpme.mapper.Mapper.laplacian", "splinepy.helpme.multi_index", "splinepy.helpme.multi_index.MultiIndex", "splinepy.helpme.reparametrize", "splinepy.helpme.reparametrize.flip_axes", "splinepy.helpme.reparametrize.permute_parametric_axes", "splinepy.helpme.visualize", "splinepy.helpme.visualize.MultipatchShowOption", "splinepy.helpme.visualize.MultipatchShowOption.clear", "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", "splinepy.helpme.visualize.MultipatchShowOption.get", "splinepy.helpme.visualize.MultipatchShowOption.items", "splinepy.helpme.visualize.MultipatchShowOption.keys", "splinepy.helpme.visualize.MultipatchShowOption.pop", "splinepy.helpme.visualize.MultipatchShowOption.update", "splinepy.helpme.visualize.MultipatchShowOption.valid_keys", "splinepy.helpme.visualize.MultipatchShowOption.values", "splinepy.helpme.visualize.SplineShowOption", "splinepy.helpme.visualize.SplineShowOption.clear", "splinepy.helpme.visualize.SplineShowOption.copy_valid_options", "splinepy.helpme.visualize.SplineShowOption.get", "splinepy.helpme.visualize.SplineShowOption.items", "splinepy.helpme.visualize.SplineShowOption.keys", "splinepy.helpme.visualize.SplineShowOption.pop", "splinepy.helpme.visualize.SplineShowOption.update", "splinepy.helpme.visualize.SplineShowOption.valid_keys", "splinepy.helpme.visualize.SplineShowOption.values", "splinepy.helpme.visualize.make_showable", "splinepy.helpme.visualize.show", "splinepy.io", "splinepy.io.cats", "splinepy.io.cats.export", "splinepy.io.cats.load", "splinepy.io.default", "splinepy.io.default.export", "splinepy.io.default.load", "splinepy.io.gismo", "splinepy.io.gismo.export", "splinepy.io.gismo.load", "splinepy.io.iges", "splinepy.io.iges.export", "splinepy.io.iges.load", "splinepy.io.ioutils", "splinepy.io.ioutils.abs_fname", "splinepy.io.ioutils.dict_to_spline", "splinepy.io.ioutils.expand_tabs", "splinepy.io.ioutils.form_lines", "splinepy.io.ioutils.make_meaningful", "splinepy.io.ioutils.next_line", "splinepy.io.irit", "splinepy.io.irit.export", "splinepy.io.irit.load", "splinepy.io.json", "splinepy.io.json.export", "splinepy.io.json.load", "splinepy.io.mfem", "splinepy.io.mfem.dof_mapping", "splinepy.io.mfem.export", "splinepy.io.mfem.export_cartesian", "splinepy.io.mfem.load", "splinepy.io.mfem.read_solution", "splinepy.io.npz", "splinepy.io.npz.export", "splinepy.io.npz.load", "splinepy.io.svg", "splinepy.io.svg.export", "splinepy.microstructure", "splinepy.microstructure.microstructure", "splinepy.microstructure.microstructure.Microstructure", "splinepy.microstructure.microstructure.Microstructure.create", "splinepy.microstructure.microstructure.Microstructure.deformation_function", "splinepy.microstructure.microstructure.Microstructure.microtile", "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", "splinepy.microstructure.microstructure.Microstructure.parametrization_function", "splinepy.microstructure.microstructure.Microstructure.show", "splinepy.microstructure.microstructure.Microstructure.tiling", "splinepy.microstructure.tiles", "splinepy.microstructure.tiles.armadillo", "splinepy.microstructure.tiles.armadillo.Armadillo", "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", "splinepy.microstructure.tiles.armadillo.Armadillo.check_params", "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", "splinepy.microstructure.tiles.by_dim", "splinepy.microstructure.tiles.chi", "splinepy.microstructure.tiles.chi.Chi", "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", "splinepy.microstructure.tiles.chi.Chi.check_params", "splinepy.microstructure.tiles.chi.Chi.create_tile", "splinepy.microstructure.tiles.cross_2d", "splinepy.microstructure.tiles.cross_2d.Cross2D", "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", "splinepy.microstructure.tiles.cross_3d", "splinepy.microstructure.tiles.cross_3d.Cross3D", "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", "splinepy.microstructure.tiles.cross_3d_linear", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile", "splinepy.microstructure.tiles.cube_void", "splinepy.microstructure.tiles.cube_void.CubeVoid", "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", "splinepy.microstructure.tiles.double_lattice", "splinepy.microstructure.tiles.double_lattice.DoubleLattice", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", "splinepy.microstructure.tiles.ellips_v_oid", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", "splinepy.microstructure.tiles.everything", "splinepy.microstructure.tiles.get", "splinepy.microstructure.tiles.hollow_cube", "splinepy.microstructure.tiles.hollow_cube.HollowCube", "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", "splinepy.microstructure.tiles.hollow_octagon", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", "splinepy.microstructure.tiles.hollow_octagon_extrude", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", "splinepy.microstructure.tiles.inverse_cross_3d", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", "splinepy.microstructure.tiles.show", "splinepy.microstructure.tiles.snappy", "splinepy.microstructure.tiles.snappy.Snappy", "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", "splinepy.microstructure.tiles.snappy.Snappy.check_params", "splinepy.microstructure.tiles.snappy.Snappy.create_tile", "splinepy.microstructure.tiles.tile_base", "splinepy.microstructure.tiles.tile_base.TileBase", "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", "splinepy.microstructure.tiles.tile_base.TileBase.check_params", "splinepy.microstructure.tiles.tile_base.TileBase.create_tile", "splinepy.microstructure.tiles.tile_base.TileBase.dim", "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", "splinepy.microstructure.tiles.tile_base.TileBase.para_dim", "splinepy.multipatch", "splinepy.multipatch.Multipatch", "splinepy.multipatch.Multipatch.add_fields", "splinepy.multipatch.Multipatch.boundaries", "splinepy.multipatch.Multipatch.boundaries_from_continuity", "splinepy.multipatch.Multipatch.boundary_from_function", "splinepy.multipatch.Multipatch.boundary_multipatch", "splinepy.multipatch.Multipatch.boundary_patch_ids", "splinepy.multipatch.Multipatch.clear", "splinepy.multipatch.Multipatch.combine_boundaries", "splinepy.multipatch.Multipatch.control_point_offsets", "splinepy.multipatch.Multipatch.determine_interfaces", "splinepy.multipatch.Multipatch.dim", "splinepy.multipatch.Multipatch.evaluate", "splinepy.multipatch.Multipatch.extract", "splinepy.multipatch.Multipatch.fields", "splinepy.multipatch.Multipatch.get_interfaces", "splinepy.multipatch.Multipatch.interface_orientations", "splinepy.multipatch.Multipatch.interfaces", "splinepy.multipatch.Multipatch.para_dim", "splinepy.multipatch.Multipatch.patches", "splinepy.multipatch.Multipatch.sample", "splinepy.multipatch.Multipatch.set_boundary", "splinepy.multipatch.Multipatch.set_interfaces", "splinepy.multipatch.Multipatch.show", "splinepy.multipatch.Multipatch.show_options", "splinepy.multipatch.Multipatch.showable", "splinepy.multipatch.Multipatch.spline_data", "splinepy.multipatch.Multipatch.sub_multipatch", "splinepy.multipatch.Multipatch.sub_patch_centers", "splinepy.nurbs", "splinepy.nurbs.NURBS", "splinepy.nurbs.NURBS.basis", "splinepy.nurbs.NURBS.basis_and_support", "splinepy.nurbs.NURBS.basis_derivative", "splinepy.nurbs.NURBS.basis_derivative_and_support", "splinepy.nurbs.NURBS.clear", "splinepy.nurbs.NURBS.copy", "splinepy.nurbs.NURBS.current_core_properties", "splinepy.nurbs.NURBS.derivative", "splinepy.nurbs.NURBS.elevate_degrees", "splinepy.nurbs.NURBS.evaluate", "splinepy.nurbs.NURBS.export", "splinepy.nurbs.NURBS.extract_bezier_patches", "splinepy.nurbs.NURBS.greville_abscissae", "splinepy.nurbs.NURBS.insert_knots", "splinepy.nurbs.NURBS.jacobian", "splinepy.nurbs.NURBS.knot_insertion_matrix", "splinepy.nurbs.NURBS.mapper", "splinepy.nurbs.NURBS.normalize_knot_vectors", "splinepy.nurbs.NURBS.nurbs", "splinepy.nurbs.NURBS.proximities", "splinepy.nurbs.NURBS.reduce_degrees", "splinepy.nurbs.NURBS.remove_knots", "splinepy.nurbs.NURBS.sample", "splinepy.nurbs.NURBS.show", "splinepy.nurbs.NURBS.showable", "splinepy.nurbs.NURBS.support", "splinepy.nurbs.NURBS.todict", "splinepy.nurbs.NURBS.uniform_refine", "splinepy.rational_bezier", "splinepy.rational_bezier.RationalBezier", "splinepy.rational_bezier.RationalBezier.basis", "splinepy.rational_bezier.RationalBezier.basis_and_support", "splinepy.rational_bezier.RationalBezier.basis_derivative", "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", "splinepy.rational_bezier.RationalBezier.clear", "splinepy.rational_bezier.RationalBezier.compose", "splinepy.rational_bezier.RationalBezier.composition_derivative", "splinepy.rational_bezier.RationalBezier.copy", "splinepy.rational_bezier.RationalBezier.current_core_properties", "splinepy.rational_bezier.RationalBezier.derivative", "splinepy.rational_bezier.RationalBezier.derivative_spline", "splinepy.rational_bezier.RationalBezier.elevate_degrees", "splinepy.rational_bezier.RationalBezier.evaluate", "splinepy.rational_bezier.RationalBezier.export", "splinepy.rational_bezier.RationalBezier.extract_dim", "splinepy.rational_bezier.RationalBezier.greville_abscissae", "splinepy.rational_bezier.RationalBezier.jacobian", "splinepy.rational_bezier.RationalBezier.mapper", "splinepy.rational_bezier.RationalBezier.nurbs", "splinepy.rational_bezier.RationalBezier.proximities", "splinepy.rational_bezier.RationalBezier.rationalbezier", "splinepy.rational_bezier.RationalBezier.reduce_degrees", "splinepy.rational_bezier.RationalBezier.sample", "splinepy.rational_bezier.RationalBezier.show", "splinepy.rational_bezier.RationalBezier.showable", "splinepy.rational_bezier.RationalBezier.split", "splinepy.rational_bezier.RationalBezier.support", "splinepy.rational_bezier.RationalBezier.todict", "splinepy.settings", "splinepy.settings.CHECK_BOUNDS", "splinepy.settings.NAME_TO_TYPE", "splinepy.settings.NTHREADS", "splinepy.settings.TOLERANCE", "splinepy.spline", "splinepy.spline.RequiredProperties", "splinepy.spline.RequiredProperties.intersection", "splinepy.spline.RequiredProperties.of", "splinepy.spline.RequiredProperties.union", "splinepy.spline.Spline", "splinepy.spline.Spline.basis", "splinepy.spline.Spline.basis_and_support", "splinepy.spline.Spline.basis_derivative", "splinepy.spline.Spline.basis_derivative_and_support", "splinepy.spline.Spline.check", "splinepy.spline.Spline.clear", "splinepy.spline.Spline.control_mesh_resolutions", "splinepy.spline.Spline.control_point_bounds", "splinepy.spline.Spline.control_points", "splinepy.spline.Spline.copy", "splinepy.spline.Spline.cps", "splinepy.spline.Spline.create", "splinepy.spline.Spline.current_core_properties", "splinepy.spline.Spline.degrees", "splinepy.spline.Spline.derivative", "splinepy.spline.Spline.dim", "splinepy.spline.Spline.ds", "splinepy.spline.Spline.elevate_degrees", "splinepy.spline.Spline.evaluate", "splinepy.spline.Spline.export", "splinepy.spline.Spline.extract", "splinepy.spline.Spline.greville_abscissae", "splinepy.spline.Spline.has_knot_vectors", "splinepy.spline.Spline.integrate", "splinepy.spline.Spline.is_rational", "splinepy.spline.Spline.jacobian", "splinepy.spline.Spline.knot_multiplicities", "splinepy.spline.Spline.knot_vectors", "splinepy.spline.Spline.kvs", "splinepy.spline.Spline.mapper", "splinepy.spline.Spline.multi_index", "splinepy.spline.Spline.name", "splinepy.spline.Spline.para_dim", "splinepy.spline.Spline.parametric_bounds", "splinepy.spline.Spline.proximities", "splinepy.spline.Spline.reduce_degrees", "splinepy.spline.Spline.required_properties", "splinepy.spline.Spline.sample", "splinepy.spline.Spline.show", "splinepy.spline.Spline.show_options", "splinepy.spline.Spline.showable", "splinepy.spline.Spline.spline_data", "splinepy.spline.Spline.support", "splinepy.spline.Spline.todict", "splinepy.spline.Spline.unique_knots", "splinepy.spline.Spline.weights", "splinepy.spline.Spline.whatami", "splinepy.spline.Spline.ws", "splinepy.splinepy_core", "splinepy.splinepy_core.ControlPointPointers", "splinepy.splinepy_core.ControlPointPointers.dim", "splinepy.splinepy_core.ControlPointPointers.len", "splinepy.splinepy_core.ControlPointPointers.set_row", "splinepy.splinepy_core.ControlPointPointers.set_rows", "splinepy.splinepy_core.ControlPointPointers.sync", "splinepy.splinepy_core.ControlPointPointers.sync_rows", "splinepy.splinepy_core.KnotVector", "splinepy.splinepy_core.KnotVector.find_span", "splinepy.splinepy_core.KnotVector.multiplicities", "splinepy.splinepy_core.KnotVector.numpy", "splinepy.splinepy_core.KnotVector.scale", "splinepy.splinepy_core.KnotVector.unique", "splinepy.splinepy_core.ParameterSpace", "splinepy.splinepy_core.ParameterSpace.copy", "splinepy.splinepy_core.ParameterSpace.unique_knots", "splinepy.splinepy_core.PyMultipatch", "splinepy.splinepy_core.PyMultipatch.add_fields", "splinepy.splinepy_core.PyMultipatch.boundary_multipatch", "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", "splinepy.splinepy_core.PyMultipatch.clear", "splinepy.splinepy_core.PyMultipatch.control_point_offsets", "splinepy.splinepy_core.PyMultipatch.control_points", "splinepy.splinepy_core.PyMultipatch.dim", "splinepy.splinepy_core.PyMultipatch.evaluate", "splinepy.splinepy_core.PyMultipatch.fields", "splinepy.splinepy_core.PyMultipatch.get_interfaces", "splinepy.splinepy_core.PyMultipatch.interface_orientations", "splinepy.splinepy_core.PyMultipatch.n_default_threads", "splinepy.splinepy_core.PyMultipatch.name", "splinepy.splinepy_core.PyMultipatch.para_dim", "splinepy.splinepy_core.PyMultipatch.patches", "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", "splinepy.splinepy_core.PyMultipatch.sample", "splinepy.splinepy_core.PyMultipatch.set_interfaces", "splinepy.splinepy_core.PyMultipatch.sub_multipatch", "splinepy.splinepy_core.PyMultipatch.sub_patch_centers", "splinepy.splinepy_core.PyMultipatch.tolerance", "splinepy.splinepy_core.PyMultipatch.whatami", "splinepy.splinepy_core.PySpline", "splinepy.splinepy_core.PySpline.basis", "splinepy.splinepy_core.PySpline.basis_and_support", "splinepy.splinepy_core.PySpline.basis_derivative", "splinepy.splinepy_core.PySpline.basis_derivative_and_support", "splinepy.splinepy_core.PySpline.control_mesh_resolutions", "splinepy.splinepy_core.PySpline.current_core_properties", "splinepy.splinepy_core.PySpline.derivative", "splinepy.splinepy_core.PySpline.dim", "splinepy.splinepy_core.PySpline.elevate_degrees", "splinepy.splinepy_core.PySpline.evaluate", "splinepy.splinepy_core.PySpline.has_knot_vectors", "splinepy.splinepy_core.PySpline.is_rational", "splinepy.splinepy_core.PySpline.jacobian", "splinepy.splinepy_core.PySpline.name", "splinepy.splinepy_core.PySpline.para_dim", "splinepy.splinepy_core.PySpline.parametric_bounds", "splinepy.splinepy_core.PySpline.proximities", "splinepy.splinepy_core.PySpline.reduce_degrees", "splinepy.splinepy_core.PySpline.sample", "splinepy.splinepy_core.PySpline.support", "splinepy.splinepy_core.PySpline.whatami", "splinepy.splinepy_core.WeightPointers", "splinepy.splinepy_core.WeightPointers.dim", "splinepy.splinepy_core.WeightPointers.len", "splinepy.splinepy_core.WeightPointers.set_row", "splinepy.splinepy_core.WeightPointers.set_rows", "splinepy.splinepy_core.WeightPointers.sync", "splinepy.splinepy_core.WeightPointers.sync_rows", "splinepy.splinepy_core.add", "splinepy.splinepy_core.annul_core", "splinepy.splinepy_core.bezier_extraction_matrix", "splinepy.splinepy_core.boundaries_from_continuity", "splinepy.splinepy_core.boundary_centers", "splinepy.splinepy_core.build_type", "splinepy.splinepy_core.compose", "splinepy.splinepy_core.compose_sensitivities", "splinepy.splinepy_core.composition_derivative", "splinepy.splinepy_core.core_id", "splinepy.splinepy_core.core_ref_count", "splinepy.splinepy_core.derivative_spline", "splinepy.splinepy_core.export_iges", "splinepy.splinepy_core.extract_all_boundary_splines", "splinepy.splinepy_core.extract_bezier_patches", "splinepy.splinepy_core.extract_boundaries", "splinepy.splinepy_core.extract_dim", "splinepy.splinepy_core.global_knot_insertion_matrix", "splinepy.splinepy_core.has_core", "splinepy.splinepy_core.insert_knots", "splinepy.splinepy_core.interfaces_from_boundary_centers", "splinepy.splinepy_core.is_minimal", "splinepy.splinepy_core.knot_insertion_matrix", "splinepy.splinepy_core.multiply", "splinepy.splinepy_core.null_spline", "splinepy.splinepy_core.read_iges", "splinepy.splinepy_core.remove_knots", "splinepy.splinepy_core.same_spline_with_knot_vectors", "splinepy.splinepy_core.split", "splinepy.to_derived", "splinepy.utils", "splinepy.utils.data", "splinepy.utils.data.MultipatchData", "splinepy.utils.data.MultipatchData.as_arrow", "splinepy.utils.data.MultipatchData.as_scalar", "splinepy.utils.data.MultipatchData.clear", "splinepy.utils.data.MultipatchData.get", "splinepy.utils.data.MultipatchData.items", "splinepy.utils.data.MultipatchData.keys", "splinepy.utils.data.MultipatchData.pop", "splinepy.utils.data.MultipatchData.update", "splinepy.utils.data.MultipatchData.values", "splinepy.utils.data.PhysicalSpaceArray", "splinepy.utils.data.PhysicalSpaceArray.all", "splinepy.utils.data.PhysicalSpaceArray.any", "splinepy.utils.data.PhysicalSpaceArray.argmax", "splinepy.utils.data.PhysicalSpaceArray.argmin", "splinepy.utils.data.PhysicalSpaceArray.argpartition", "splinepy.utils.data.PhysicalSpaceArray.argsort", "splinepy.utils.data.PhysicalSpaceArray.astype", "splinepy.utils.data.PhysicalSpaceArray.byteswap", "splinepy.utils.data.PhysicalSpaceArray.choose", "splinepy.utils.data.PhysicalSpaceArray.clip", "splinepy.utils.data.PhysicalSpaceArray.compress", "splinepy.utils.data.PhysicalSpaceArray.conj", "splinepy.utils.data.PhysicalSpaceArray.conjugate", "splinepy.utils.data.PhysicalSpaceArray.copy", "splinepy.utils.data.PhysicalSpaceArray.cumprod", "splinepy.utils.data.PhysicalSpaceArray.cumsum", "splinepy.utils.data.PhysicalSpaceArray.diagonal", "splinepy.utils.data.PhysicalSpaceArray.dot", "splinepy.utils.data.PhysicalSpaceArray.dump", "splinepy.utils.data.PhysicalSpaceArray.dumps", "splinepy.utils.data.PhysicalSpaceArray.fill", "splinepy.utils.data.PhysicalSpaceArray.flatten", "splinepy.utils.data.PhysicalSpaceArray.full_row_indices", "splinepy.utils.data.PhysicalSpaceArray.getfield", "splinepy.utils.data.PhysicalSpaceArray.item", "splinepy.utils.data.PhysicalSpaceArray.max", "splinepy.utils.data.PhysicalSpaceArray.mean", "splinepy.utils.data.PhysicalSpaceArray.min", "splinepy.utils.data.PhysicalSpaceArray.nonzero", "splinepy.utils.data.PhysicalSpaceArray.partition", "splinepy.utils.data.PhysicalSpaceArray.prod", "splinepy.utils.data.PhysicalSpaceArray.put", "splinepy.utils.data.PhysicalSpaceArray.ravel", "splinepy.utils.data.PhysicalSpaceArray.repeat", "splinepy.utils.data.PhysicalSpaceArray.reshape", "splinepy.utils.data.PhysicalSpaceArray.resize", "splinepy.utils.data.PhysicalSpaceArray.round", "splinepy.utils.data.PhysicalSpaceArray.row_indices", "splinepy.utils.data.PhysicalSpaceArray.searchsorted", "splinepy.utils.data.PhysicalSpaceArray.setfield", "splinepy.utils.data.PhysicalSpaceArray.setflags", "splinepy.utils.data.PhysicalSpaceArray.sort", "splinepy.utils.data.PhysicalSpaceArray.squeeze", "splinepy.utils.data.PhysicalSpaceArray.std", "splinepy.utils.data.PhysicalSpaceArray.sum", "splinepy.utils.data.PhysicalSpaceArray.swapaxes", "splinepy.utils.data.PhysicalSpaceArray.take", "splinepy.utils.data.PhysicalSpaceArray.to_device", "splinepy.utils.data.PhysicalSpaceArray.tobytes", "splinepy.utils.data.PhysicalSpaceArray.tofile", "splinepy.utils.data.PhysicalSpaceArray.tolist", "splinepy.utils.data.PhysicalSpaceArray.tostring", "splinepy.utils.data.PhysicalSpaceArray.trace", "splinepy.utils.data.PhysicalSpaceArray.transpose", "splinepy.utils.data.PhysicalSpaceArray.var", "splinepy.utils.data.PhysicalSpaceArray.view", "splinepy.utils.data.SplineData", "splinepy.utils.data.SplineData.as_arrow", "splinepy.utils.data.SplineData.as_scalar", "splinepy.utils.data.SplineData.clear", "splinepy.utils.data.SplineData.get", "splinepy.utils.data.SplineData.items", "splinepy.utils.data.SplineData.keys", "splinepy.utils.data.SplineData.pop", "splinepy.utils.data.SplineData.update", "splinepy.utils.data.SplineData.values", "splinepy.utils.data.SplineDataAdaptor", "splinepy.utils.data.SplineDataAdaptor.arrow_data_only", "splinepy.utils.data.SplineDataAdaptor.as_vertex_data", "splinepy.utils.data.SplineDataAdaptor.data", "splinepy.utils.data.SplineDataAdaptor.function", "splinepy.utils.data.SplineDataAdaptor.has_evaluate", "splinepy.utils.data.SplineDataAdaptor.has_function", "splinepy.utils.data.SplineDataAdaptor.has_locations", "splinepy.utils.data.SplineDataAdaptor.is_spline", "splinepy.utils.data.SplineDataAdaptor.locations", "splinepy.utils.data.SplineDataAdaptor.parametric_bounds", "splinepy.utils.data.cartesian_product", "splinepy.utils.data.enforce_contiguous", "splinepy.utils.data.enforce_contiguous_values", "splinepy.utils.data.make_matrix", "splinepy.utils.data.uniform_query", "splinepy.utils.log", "splinepy.utils.log.configure", "splinepy.utils.log.debug", "splinepy.utils.log.error", "splinepy.utils.log.info", "splinepy.utils.log.prepend_log", "splinepy.utils.log.warning", "API References", "Install guide", "&lt;no title&gt;", "Introduction to Splines"], "titleterms": {"1": 718, "2": 718, "3": 718, "4": 718, "5": 718, "6": 718, "7": 718, "A": 720, "In": 720, "abs_fnam": 255, "add": 585, "add_field": [369, 534], "all": 628, "an": 720, "ani": 629, "annul_cor": 586, "api": 717, "ar": 720, "arc": 138, "argmax": 630, "argmin": 631, "argpartit": 632, "argsort": 633, "armadillo": [289, 290, 291, 292, 293], "arrow_data": [157, 170], "arrow_data_onli": 695, "as_arrow": [618, 685], "as_scalar": [619, 686], "as_vertex_data": 696, "astyp": 634, "automat": 0, "b": 720, "base": [158, 171], "basi": [4, 35, 63, 93, 399, 429, 468, 557, 720], "basic": 720, "basis_and_support": [5, 36, 64, 94, 400, 430, 469, 558], "basis_deriv": [6, 37, 65, 95, 401, 431, 470, 559], "basis_derivative_and_support": [7, 38, 66, 96, 402, 432, 471, 560], "basis_function_deriv": 204, "basis_gradient_and_support": 205, "basis_hessian_and_support": 206, "basis_laplacian_and_support": 207, "bezier": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 159], "bezier_extraction_matrix": 587, "bezierbas": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "boundari": [160, 172, 370], "boundaries_from_continu": [371, 588], "boundary_cent": 589, "boundary_from_funct": 372, "boundary_multipatch": [373, 535], "boundary_patch_id": [374, 536], "box": 139, "bspline": [9, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "bsplinebas": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "build": 0, "build_typ": 590, "by_dim": 294, "byteswap": 635, "b\u00e9zier": 720, "c": [0, 717], "cartesian_product": 705, "cat": [242, 243, 244], "check": [0, 125, 126, 127, 128, 129, 130, 472], "check_bound": 458, "check_param": [292, 298, 303, 308, 313, 318, 323, 328, 335, 340, 345, 351, 357, 362], "check_param_deriv": [291, 297, 302, 307, 312, 317, 322, 327, 334, 339, 344, 350, 356, 361], "checker": [126, 127, 128], "chi": [295, 296, 297, 298, 299], "choos": 636, "circl": 140, "clamped_knot_vector": [127, 129], "clear": [10, 39, 68, 97, 220, 230, 375, 403, 433, 473, 537, 620, 687], "cli": [120, 121, 122, 123], "clip": 637, "closing_til": 346, "combine_boundari": 376, "compos": [11, 40, 434, 591], "compose_sensit": 592, "composition_deriv": [12, 41, 435, 593], "compress": 638, "compute_knot_vector": 190, "cone": 141, "configur": 711, "conj": 639, "conjug": 640, "content": 718, "contribut": [0, 718], "control_edg": [161, 173], "control_fac": [162, 174], "control_mesh": [163, 175], "control_mesh_resolut": [474, 561], "control_point": [164, 176, 476, 539], "control_point_bound": 475, "control_point_offset": [377, 538], "control_volum": [165, 177], "controlpointpoint": [517, 518, 519, 520, 521, 522, 523], "convert": 121, "copi": [13, 42, 69, 98, 404, 436, 477, 531, 641], "copy_valid_opt": [221, 231], "core_id": 594, "core_ref_count": 595, "cp": 478, "creat": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 281, 479, 718, 720], "create_til": [293, 299, 304, 309, 314, 319, 324, 329, 336, 341, 347, 352, 358, 363], "creator": [132, 133, 134, 135, 136, 137], "cross2d": [301, 302, 303, 304], "cross3d": [306, 307, 308, 309], "cross3dlinear": [311, 312, 313, 314], "cross_2d": [300, 301, 302, 303, 304], "cross_3d": [305, 306, 307, 308, 309], "cross_3d_linear": [310, 311, 312, 313, 314], "cube_void": [315, 316, 317, 318, 319], "cubevoid": [316, 317, 318, 319], "cumprod": 642, "cumsum": 643, "current_core_properti": [14, 43, 70, 99, 405, 437, 480, 562], "curv": [191, 720], "d": 484, "data": [616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 720], "debug": 712, "default": [245, 246, 247], "deform": 718, "deformation_funct": 282, "degre": 481, "deriv": [15, 44, 71, 100, 406, 438, 482, 563], "derivative_splin": [16, 45, 439, 596], "determinant_splin": [133, 142], "determine_interfac": 378, "diagon": 644, "dict_to_splin": 256, "differ": 720, "dim": [364, 379, 483, 518, 540, 564, 579], "disk": 143, "diverg": 208, "document": [0, 718], "dof_map": 268, "dot": 645, "double_lattic": [320, 321, 322, 323, 324], "doublelattic": [321, 322, 323, 324], "drawback": 720, "dump": [646, 647], "edg": [166, 178], "elevate_degre": [17, 46, 72, 101, 407, 440, 485, 565], "ellips_v_oid": [325, 326, 327, 328, 329], "ellipsvoid": [326, 327, 328, 329], "embed": [134, 144], "enforce_contigu": 706, "enforce_contiguous_valu": 707, "entri": 122, "error": 713, "evalu": [18, 47, 73, 102, 380, 408, 441, 486, 541, 566, 718], "evaluation_point": 365, "everyth": 330, "exampl": 720, "expand_tab": 257, "export": [19, 48, 74, 103, 243, 246, 249, 252, 262, 265, 269, 274, 277, 409, 442, 487], "export_cartesian": 270, "export_ig": 597, "extract": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 381, 488, 718], "extract_all_boundary_splin": 598, "extract_bezier_patch": [75, 104, 410, 599], "extract_boundari": 600, "extract_dim": [20, 49, 443, 601], "extractor": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "extrud": [135, 145], "face": [167, 179], "ffd": [182, 183, 184, 185, 186, 187, 188], "field": [382, 542], "field_deriv": 209, "fill": 648, "find_span": 525, "fit": [189, 190, 191, 192, 193, 194, 718], "flatten": 649, "flip_ax": 216, "form": 718, "form_lin": 258, "format": 0, "free": 718, "from_bound": 146, "full_row_indic": 650, "function": [698, 720], "further": 720, "gener": 720, "get": [222, 232, 331, 621, 688], "get_interfac": [383, 543], "getfield": 651, "gismo": [248, 249, 250], "global_knot_insertion_matrix": 602, "gradient": 210, "graphic": 718, "greville_abscissa": [21, 50, 76, 105, 411, 444, 489], "guid": 718, "has_cor": 603, "has_evalu": 699, "has_funct": 700, "has_knot_vector": [490, 567], "has_loc": 701, "help": 720, "helper": 718, "helpm": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240], "hessian": 211, "hollow_cub": [332, 333, 334, 335, 336], "hollow_octagon": [337, 338, 339, 340, 341], "hollow_octagon_extrud": [342, 343, 344, 345, 346, 347], "hollowcub": [333, 334, 335, 336], "hollowoctagon": [338, 339, 340, 341], "hollowoctagonextrud": [343, 344, 345, 346, 347], "ig": [251, 252, 253], "implement": 0, "info": 714, "input": 718, "insert_knot": [77, 106, 412, 604], "instal": 718, "integr": [195, 196, 197, 198, 199, 200, 201, 491], "interfac": 385, "interface_orient": [384, 544], "interfaces_from_boundary_cent": 605, "intersect": 464, "introduct": 720, "inverse_cross_3d": [348, 349, 350, 351, 352], "inversecross3d": [349, 350, 351, 352], "io": [241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "ioutil": [254, 255, 256, 257, 258, 259, 260], "irit": [261, 262, 263], "is_minim": 606, "is_rat": [492, 568], "is_splin": 702, "item": [223, 233, 622, 652, 689], "jacobian": [22, 51, 78, 107, 413, 445, 493, 569], "json": [264, 265, 266], "kei": [224, 234, 623, 690], "knot_insertion_matrix": [79, 108, 414, 607], "knot_multipl": 494, "knot_vector": 495, "knotvector": [524, 525, 526, 527, 528, 529], "kv": 496, "laplacian": 212, "len": [519, 580], "librari": 718, "line": 147, "list": 720, "load": [244, 247, 250, 253, 263, 266, 271, 275], "local": 0, "locat": 703, "log": [710, 711, 712, 713, 714, 715, 716], "make_matrix": 708, "make_meaning": 259, "make_show": 239, "mapper": [23, 52, 80, 109, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 415, 446, 497, 718], "max": 653, "mean": 654, "mesh": 184, "mfem": [267, 268, 269, 270, 271, 272], "microstructur": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 718], "microtil": 283, "min": 655, "modif": 718, "modul": 718, "multi_index": [213, 214, 498], "multiindex": 214, "multipatch": [367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 718], "multipatchdata": [617, 618, 619, 620, 621, 622, 623, 624, 625, 626], "multipatchshowopt": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 720], "multipl": 526, "multipli": 608, "n_default_thread": 545, "name": [499, 546, 570], "name_to_typ": 459, "next_lin": 260, "non": 720, "nonzero": 656, "normalize_knot_vector": [81, 110, 416], "notebook": 720, "npz": [273, 274, 275], "nthread": 460, "null_splin": 609, "numpi": 527, "nurb": [24, 82, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 447, 720], "onlin": 718, "output": 718, "overview": 717, "pad": 185, "para_dim": [366, 386, 500, 547, 571], "parameter": 192, "parameter_sensitivity_funct": 284, "parameterspac": [530, 531, 532], "parametric_bound": [501, 572, 704], "parametric_funct": [197, 199], "parametric_view": [136, 148], "parametrization_funct": 285, "partit": 657, "patch": [387, 548], "permute_parametric_ax": 217, "physical_funct": 200, "physicalspacearrai": [627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683], "plate": 149, "plot": 720, "pop": [225, 235, 624, 691], "prefer": 0, "prepend_log": 715, "prod": 658, "properti": 720, "proxim": [25, 53, 83, 111, 418, 448, 502, 573], "put": 659, "pymultipatch": [533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555], "pyramid": 150, "pysplin": [556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577], "python": [0, 717], "quick": [0, 718], "ration": 720, "rational_bezi": [427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "rationalbezi": [26, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "ravel": 660, "read": 720, "read_ig": 610, "read_solut": 272, "reduce_degre": [27, 54, 84, 112, 419, 450, 503, 574], "refer": 717, "remove_knot": [85, 113, 420, 611], "reparametr": [215, 216, 217], "repeat": 661, "required_properti": 504, "requiredproperti": [463, 464, 465, 466], "reshap": 662, "resiz": 663, "revolv": [137, 151], "round": 664, "row_indic": 665, "same_parametric_bound": 549, "same_spline_with_knot_vector": 612, "sampl": [28, 55, 86, 114, 388, 421, 451, 505, 550, 575], "scale": 528, "searchsort": 666, "set": [457, 458, 459, 460, 461, 720], "set_boundari": 389, "set_interfac": [390, 551], "set_row": [520, 521, 581, 582], "setfield": 667, "setflag": 668, "show": [29, 56, 87, 115, 123, 186, 240, 286, 353, 391, 422, 452, 506], "show_opt": [392, 507, 720], "showabl": [30, 57, 88, 116, 187, 393, 423, 453, 508], "situat": 720, "snappi": [354, 355, 356, 357, 358], "solve_for_control_point": 193, "sort": 669, "sphere": 152, "spline": [168, 180, 188, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 718, 720], "spline_data": [394, 509], "splinedata": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693], "splinedataadaptor": [694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704], "splinepi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "splinepy_cor": [516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "splineshowopt": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 720], "split": [31, 58, 454, 613], "squeez": 670, "start": [0, 718], "std": 671, "style": 0, "sub_multipatch": [395, 552], "sub_patch_cent": [396, 553], "sum": 672, "support": [32, 59, 89, 117, 424, 455, 510, 576], "surfac": 194, "surface_circl": 153, "svg": [276, 277], "swapax": 673, "sync": [522, 583], "sync_row": [523, 584], "tabl": 718, "take": 674, "tile": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "tile_bas": [359, 360, 361, 362, 363, 364, 365, 366], "tilebas": [360, 361, 362, 363, 364, 365, 366], "to_deriv": 614, "to_devic": 675, "tobyt": 676, "todict": [33, 60, 90, 118, 425, 456, 511], "tofil": 677, "toler": [461, 554], "tolist": 678, "toru": 154, "tostr": 679, "trace": 680, "transpos": 681, "try": 718, "type": 720, "uniform": 720, "uniform_queri": 709, "uniform_refin": [91, 119, 426], "union": 466, "uniqu": 529, "unique_knot": [512, 532], "updat": [226, 236, 625, 692], "util": [615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "valid_kei": [227, 237], "valid_queri": [128, 130], "valu": [228, 238, 626, 693], "var": 682, "vector": 718, "view": 683, "visual": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 720], "volum": [169, 181, 198, 201], "w": 515, "warn": 716, "weight": 513, "weightpoint": [578, 579, 580, 581, 582, 583, 584], "whatami": [514, 555, 577], "which": 720}})